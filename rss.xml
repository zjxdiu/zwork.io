<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>青羽~blog site</title>
        <link>https://zjxdiu.github.io</link>
        <description>Shadow in front implying sun behind</description>
        <language>zh-CN</language>
        <pubDate>Fri, 12 May 2023 23:51:00 +0800</pubDate>
        <lastBuildDate>Fri, 12 May 2023 23:51:00 +0800</lastBuildDate>
        <category>化学</category>
        <category>仪器分析</category>
        <category>信号处理</category>
        <category>日常</category>
        <category>深度学习</category>
        <category>音频</category>
        <category>分享</category>
        <category>网络</category>
        <category>软件</category>
        <category>游戏</category>
        <category>无标签</category>
        <category>开发</category>
        <category>游戏引擎</category>
        <category>超频</category>
        <category>硬件</category>
        <category>脑洞</category>
        <category>生活</category>
        <category>测试</category>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/unit2/</guid>
            <title>unit2</title>
            <link>https://zjxdiu.github.io/blog/unit2/</link>
            <category>无标签</category>
            <pubDate>Fri, 12 May 2023 23:51:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;the-history-of-chivalry&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#the-history-of-chivalry&#34;&gt;#&lt;/a&gt; The History of Chivalry&lt;/h2&gt;
&lt;p&gt;Chivalry, the knightly class of feudal times. The primary sense of the term in Europe in the Middle Ages is “knights,” or “fully armed and mounted fighting men.” Thence the term came to mean the gallantry and honor expected of knights. Later the word came to be used in its general sense of “courtesy.”&lt;br&gt;
In the High Middle Ages, chivalric knights who were able to restrain their violent impulses and channel their violence into a good cause did so because certain 12th-century authors elaborated a code of conduct or ethics that medieval nobles were expected to follow. Attempting to curb the violence and warfare that was plaguing Europe, authors created the chivalric ideal often associated with the High Middle Ages, blending older, heroic ideals with new, ecclesiastical interests. By combining elements that appealed to nobles with elements that protected the people from nobles, medieval thinkers created the chivalric ideal. In the 14th and 15th centuries the ideals of chivalry came to be associated increasingly with aristocratic display and public ceremony rather than service in the field.&lt;br&gt;
There’s a great deal of variety within the different chivalric romances. Certain authors, including Chrétien de Troyes and Marie de France, were able to craft many different kinds of chivalric heroes, each of which had his own peculiar characteristics. The variety among different authors could be even greater. This makes the attempt to define one chivalry perilous. There were almost as many different chivalries as there were chivalric romances.&lt;br&gt;
Even so, common elements recur again and again in chivalric romances, both in terms of the qualities the knight should possess, and what the knight was supposed to do with these good qualities.&lt;br&gt;
Qualities chivalric knights were supposed to possess are stock qualities one finds in heroic literature of every period. Knights were expected to be brave, honest, loyal, and generous, and to display prowess. Fighting well was not sufficient; chivalric heroes fought spectacularly well. They didn’t simply lop off one limb with a single blow from a sword. Such heroes would cut a torso in half or cleave a person down the middle.&lt;br&gt;
The chivalric ideal, the behavior of knights, and how they were to employ these qualities, was somewhat more distinctive. Chivalric knights were expected to be courteous, to speak well, and exhibit good manners, doing things that heroes of the Early Middle Ages, such as Beowulf, did not. The former was expected to use these qualities to protect those who could not protect themselves. Knights were supposed to use their prowess, loyalty, and generosity to defend clerics, peasants, widows, virgins, orphans, or people who were any combination of the above. The more defenseless, the better. Presented with the opportunity to leap to someone’s defense, the chivalric knight seized the opportunity gladly.&lt;br&gt;
There was one group of people to whom chivalric knights were supposed to devote more attention than any other: young, sometimes single women. Chivalric knights were supposed to engage in a form of behavior that historians call “courtly love.”&lt;/p&gt;
&lt;h3 id=&#34;love-and-romance&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#love-and-romance&#34;&gt;#&lt;/a&gt; Love and Romance&lt;/h3&gt;
&lt;p&gt;The chivalric hero was supposed to fall in love and find a lady to whom he would devote all of his attention, to whom he would obey in all things. He would devote his life to winning her esteem. Once he had won her affection and respect, he would find himself ennobled to her in the moral, rather than the legal sense. The knight would find himself becoming a better person from having fallen in love with his lady, and be even more inspired to defend the defenseless.&lt;/p&gt;
&lt;h3 id=&#34;a-young-knight-and-his-lady&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#a-young-knight-and-his-lady&#34;&gt;#&lt;/a&gt; A young knight and his lady&lt;/h3&gt;
&lt;p&gt;Chivalric knights were supposed to fall in love. The love that a chivalric knight was supposed to feel, could come in different guises in different romances. Sometimes it was a very chaste and platonic love, a love from a distance. In some instances, the love was neither chaste nor platonic but fully consummate, and in other stories, it was love within a marriage; certain chivalric heroes marry and were expected to marry, their ladies. Sometimes the love they had was unabashedly adulterous. The lady with whom you loved didn’t have to be your wife, but the wife of your lord, for example. Chivalric authors differed among themselves as to which type of love was the best form of courtly love.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/unit6/</guid>
            <title>unit6</title>
            <link>https://zjxdiu.github.io/blog/unit6/</link>
            <category>无标签</category>
            <pubDate>Fri, 12 May 2023 23:51:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;the-history-of-tea&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#the-history-of-tea&#34;&gt;#&lt;/a&gt; The History of Tea&lt;/h2&gt;
&lt;p&gt;During a long day spent roaming the forest in search of edible grains and herbs, the weary divine farmer Shennong accidentally poisoned himself 72 times. But before the poisons could end his life, a leaf drifted into his mouth. He chewed on it and it revived him, and that is how we discovered tea. Or so an ancient legend goes at least. Tea doesn’t actually cure poisonings, but the story of Shennong, the mythical Chinese inventor of agriculture, highlights tea’s importance to ancient China.&lt;br&gt;
Archaeological evidence suggests tea was first cultivated there as early as 6,000 years ago, or 1,500 years before the pharaohs built the Great Pyramids of Giza. That original Chinese tea plant is the same type that’s grown around the world today, yet it was originally consumed very differently. It was eaten as a vegetable or cooked with grain porridge. Tea only shifted from food to drink 1,500 years ago when people realized that a combination of heat and moisture could create a complex and varied taste out of the leafy green.&lt;br&gt;
After hundreds of years of variations to the preparation method, the standard became to heat tea, pack it into portable cakes, grind it into powder, mix with hot water, and create a beverage called muo cha, or matcha. Matcha became so popular that a distinct Chinese tea culture emerged.&lt;br&gt;
Tea was the subject of books and poetry, the favorite drink of emperors, and a medium for artists. They would draw extravagant pictures in the foam of the tea, very much like the espresso art you might see in coffee shops today.&lt;br&gt;
In the 9th century during the Tang Dynasty, a Japanese monk brought the first tea plant to Japan. The Japanese eventually developed their own unique rituals around tea, leading to the creation of the Japanese tea ceremony. And in the 14th century during the Ming Dynasty, the Chinese emperor shifted the standard from tea pressed into cakes to loose leaf tea. At that point, China still held a virtual monopoly on the world’s tea trees, making tea one of three essential Chinese export goods, along with porcelain and silk. This gave China a great deal of power and economic influence as tea drinking spread around the world.&lt;br&gt;
That spread began in earnest around the early 1600s when Dutch traders brought tea to Europe in large quantities. Many credit Queen Catherine of Braganza, a Portuguese noble woman, for making tea popular with the English aristocracy when she married King Charles II in 1661. At the time, Great Britain was in the midst of expanding its colonial influence and becoming the new dominant world power. And as Great Britain grew, interest in tea spread around the world. By 1700, tea in Europe sold for ten times the price of coffee and the plant was still only grown in China.&lt;br&gt;
The tea trade was so lucrative that the world’s fastest sailboat, the clipper ship, was born out of intense competition between Western trading companies. All were racing to bring their tea back to Europe first to maximize their profits. At first, Britain paid for all this Chinese tea with silver. When that proved too expensive, they suggested trading tea for another substance, opium. This triggered a public health problem within China as people became addicted to the drug. Then in 1839, a Chinese official ordered his men to destroy massive British shipments of opium as a statement against Britain’s influence over China. This act triggered the First Opium War between the two nations. Fighting raged up and down the Chinese coast until 1842 when the defeated Qing Dynasty ceded the port of Hong Kong to the British and resumed trading on unfavorable terms. The war weakened China’s global standing for over a century.&lt;br&gt;
The British East India company also wanted to be able to grow tea themselves and further control the market. So they commissioned botanist Robert Fortune to steal tea from China in a covert operation. He disguised himself and took a perilous journey through China’s mountainous tea regions, eventually smuggling tea trees and experienced tea workers into Darjeeling, India. From there, the plant spread further still, helping drive tea’s rapid growth as an everyday commodity.&lt;br&gt;
However, the Tea Act of 1778 in Britain enabled the British East India Company to trade in tea directly from China to America, thus bypassing other European exporters and American importers. This gave the British East India Company a virtual monopoly in tea trading to America and became the cause of the Boston Tea Party. The incident in which citizens of Boston boarded the British East India Company ships, dumped their tea cargoes into the sea, and sparked the American War of Independence. This event also illustrates the central role tea has played in the world.&lt;br&gt;
Today, tea is the second most consumed beverage in the world after water, and from sugary Turkish Rize tea, to salty Tibetan butter tea, there are almost as many ways of preparing the beverage as there are cultures on the globe.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/ML_emusic_classify/</guid>
            <title>一种基于神经网络的电子音乐风格分类算法思路</title>
            <link>https://zjxdiu.github.io/blog/ML_emusic_classify/</link>
            <category>信号处理</category>
            <category>深度学习</category>
            <category>音频</category>
            <pubDate>Wed, 03 May 2023 17:18:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一种基于神经网络的电子音乐风格分类算法思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一种基于神经网络的电子音乐风格分类算法思路&#34;&gt;#&lt;/a&gt; 一种基于神经网络的电子音乐风格分类算法思路&lt;/h1&gt;
&lt;h2 id=&#34;以zjxdiu常听的电子音乐风格为例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以zjxdiu常听的电子音乐风格为例&#34;&gt;#&lt;/a&gt; —— 以 zjxdiu 常听的电子音乐风格为例&lt;/h2&gt;
&lt;h1 id=&#34;目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录&#34;&gt;#&lt;/a&gt; 目录&lt;/h1&gt;
&lt;p&gt;一、概述与引言&lt;br&gt;
二、电子音乐风格&lt;br&gt;
 2.1 主风格&lt;br&gt;
 2.2 子风格&lt;br&gt;
 2.3 混合风格与其他元素&lt;br&gt;
三、现有解决方案&lt;br&gt;
 3.1 传统人工分类&lt;br&gt;
 3.2 特征提取技术&lt;br&gt;
 3.3 现有机器学习算法&lt;br&gt;
 3.3.1 实践项目：DeepAudioClassification&lt;br&gt;
 四、SRM-DNN（频谱、节奏、情感分析 - 深度神经网络）思路&lt;br&gt;
 4.1 电子音乐的频谱特征&lt;br&gt;
 4.2 鼓与贝斯节奏分析&lt;br&gt;
 4.3 BPM 与时间分析&lt;br&gt;
 4.4 情感分析&lt;br&gt;
 4.5 能量分析&lt;br&gt;
 4.6 实现思路&lt;br&gt;
 4.6.1 频谱提取&lt;br&gt;
 4.6.2 DnB 分析&lt;br&gt;
 4.6.3 BPM 与时间分析&lt;br&gt;
 4.6.4 图像识别&lt;br&gt;
 4.6.5 人声分离&lt;br&gt;
 4.6.6 情感特征&lt;br&gt;
五、总结&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一-概述与引言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-概述与引言&#34;&gt;#&lt;/a&gt; 一、概述与引言&lt;/h2&gt;
&lt;p&gt;随着近年来计算机技术的快速发展，机器学习被应用于越来越多的领域。其中，最广泛的应用之一就是执行分类与识别任务，在音乐风格的识别与分类方面，同样有着应用的空间。为此，结合笔者生活中的实际痛点：难以区分部分电子音乐的风格，且现有方案难以准确识别细分风格，而撰写本文，希望以相对专业的视角提供一种新的解决方案。&lt;/p&gt;
&lt;h2 id=&#34;二-电子音乐风格&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-电子音乐风格&#34;&gt;#&lt;/a&gt; 二、电子音乐风格&lt;/h2&gt;
&lt;p&gt;电子音乐是音乐中的一个大类型，起源于 20 世纪 60 年代的欧美地区，是音乐文化中重要的一部分。其曲风特色是注重以节奏和旋律创建舞蹈氛围，主要使用各类合成器作为 “乐器”，并具有相对少量的歌词。在约 80 年的发展过程中，电子音乐衍生、拓展出非常多的细分风格，以下对笔者常听的风格进行简述。&lt;/p&gt;
&lt;h3 id=&#34;21-主风格&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#21-主风格&#34;&gt;#&lt;/a&gt; 2.1 主风格&lt;/h3&gt;
&lt;p&gt;zjxdiu 常听的电子音乐包括以下几类主要风格：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;House，浩室或浩室舞曲，注重旋律和音色的展现，编曲的格式化比较显著，节奏简单且 “软硬” 适中；&lt;/li&gt;
&lt;li&gt;Trance，迷幻舞曲，BPM 相对 House 更高一些，鼓点一般位于每个 1/2 beat 上，但较为柔和；snare 和 hat 也在 DnB 序列中以更高频率出现，每节旋律相似但不重复。整体听感与其名字类似，为 “迷幻”。&lt;/li&gt;
&lt;li&gt;Core，核，主要包括 Hardcore（硬核）和 Frenchcore（法核，也可一并归类为 Hardcore），表现为更为强烈的节奏和鼓点，BPM 也更高，且对人声的处理更极端；部分早期的 Core 十分的 “硬”，以至于很少人能够承受；而近年的新型 core 则相对柔软一些，并且对于旋律和人声的体现也更为注重。&lt;/li&gt;
&lt;li&gt;Hardstyle，硬派，其显著特征为 bass 和 drum 同时出现，且多使用经失真处理的 bassline，由于其独特的 DnB 听感，时常被开玩笑：“听到 duang duang duang 就是 hardstyle”。其软硬程序介于 Core 与 House 之间。&lt;/li&gt;
&lt;li&gt;Hands Up，无中文名，是一种处于 Core 与 Hardstyle 之间、更接近 Core 的风格，其特征为较为快速和低沉的鼓点，且旋律表现力强、与 DnB 的融合程度高，编曲方面则接近 House，在许多 Disco 舞厅音乐中较为常见。&lt;/li&gt;
&lt;li&gt;Chill Out，弛放音乐，它的特征最为显著，即一反常派的柔和与宁静。通常其编曲较为接近 Trance，但使用的音色极为柔软，鼓点和贝斯的响度也很低，BPM 通常也较低，听感上呈现 “飘渺舒缓的节奏，柔和的合成器音效，空灵的女声吟唱，悠远的环境音”。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;22-子风格&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#22-子风格&#34;&gt;#&lt;/a&gt; 2.2 子风格&lt;/h3&gt;
&lt;p&gt;常见子风格见如下虚表格：&lt;br&gt;
&lt;img src=&#34;../_resources/7019e2a17be54b2c468752025c2ca3c9.png&#34; alt=&#34;7019e2a17be54b2c468752025c2ca3c9.png&#34;&gt;&lt;br&gt;
 需要注意的是，此处列出的仅为一部分，实际上还可区分为数倍于列表项目数的子风格。&lt;/p&gt;
&lt;h3 id=&#34;23-混合风格与其他元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#23-混合风格与其他元素&#34;&gt;#&lt;/a&gt; 2.3 混合风格与其他元素&lt;/h3&gt;
&lt;p&gt;对于现代电子音乐而言，一首音乐混合多种风格的做法是十分常见的；例如 Hands Up+Hardstyle、Melodic House+Hardstyle、Progressive House+Future House 等等。不过对于大多数音乐而言，其主要曲风只会有一种。&lt;br&gt;
此外，部分曲风还会有一些其他元素；例如 Midtempo 指 BPM 在约 80~120 之间的，带人声和歌词的 Trance 可称为 Vocal Trance 等。总之，电子音乐的曲风是难以准确、完全判别的，因此可考虑采用标签（label）的方式进行风格判断。&lt;/p&gt;
&lt;h2 id=&#34;三-现有解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-现有解决方案&#34;&gt;#&lt;/a&gt; 三、现有解决方案&lt;/h2&gt;
&lt;h3 id=&#34;31-传统人工分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#31-传统人工分类&#34;&gt;#&lt;/a&gt; 3.1 传统人工分类&lt;/h3&gt;
&lt;p&gt;显然，音乐分类可由人工进行；无论是音乐人提供还是听众、鉴赏家提供，都属于人工分类方法。在任何涉及到机器学习与人类学习对比的地方都能得知，人工方法一般有准确率高、复杂任务处理能力强、误报率低、学习速度快且成本低等优点，但其识别速度相比于计算机而言则无法比拟。&lt;/p&gt;
&lt;h3 id=&#34;32-特征提取技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#32-特征提取技术&#34;&gt;#&lt;/a&gt; 3.2 特征提取技术&lt;/h3&gt;
&lt;p&gt;参考文献：&lt;a href=&#34;https://www.hindawi.com/journals/wcmc/2021/9298654/&#34;&gt;基于音乐特征提取和深度神经网络的音乐风格分类算法&lt;/a&gt;&lt;br&gt;
对于通常意义上的音乐而言，我们可以通过提取音乐特征进行分析与识别。这些特征包括节奏、旋律、乐器或音色、和弦或和声、人声等内容。通过适当的、已有的算法和模块，可以对这些特征进行单独提取并分析。若加入卷积神经网络，则可获得更为准确的结果。&lt;br&gt;
参考文献中详细介绍了这二者如何融为一体并实际运用，为接下来的算法思路提供了部分理论基础。&lt;/p&gt;
&lt;h3 id=&#34;33-现有机器学习算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#33-现有机器学习算法&#34;&gt;#&lt;/a&gt; 3.3 现有机器学习算法&lt;/h3&gt;
&lt;p&gt;传统的基于机器学习的音频分类大多基于常规算法，例如支持向量机、决策树、K - 邻近算法、随机森林算法等等。这些算法的优点是部署和训练简单，算法的数学原理完善，但问题是难以准确处理复杂和细微的变化；尤其是在电子音乐风格分类任务中，由于各风格在许多方面非常相似，传统算法无法很好地处理。&lt;br&gt;
因此，结合使用的技术与特征，提出如下采用神经网络进行识别的识别思路。&lt;/p&gt;
&lt;h3 id=&#34;331-实践项目deepauddioclassification&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#331-实践项目deepauddioclassification&#34;&gt;#&lt;/a&gt; 3.3.1 实践项目：DeepAuddioClassification&lt;/h3&gt;
&lt;p&gt;在提出自己的算法思路前，笔者首先实践了一个已有的开源项目：&lt;a href=&#34;https://github.com/despoisj/DeepAudioClassification&#34;&gt;Github: despoisj/DeepAudioClassification&lt;/a&gt;；该项目采用 tensorflow 中的 tflearn 模块进行 DNN 训练，并且只对音频频谱进行识别，相当于一个只输入频谱图的图像识别算法。&lt;br&gt;
通过将音频频谱提取出来并切片，随后基于 DNN 进行图像分类训练，则模型可用于预测一个未知的音乐频谱图。这种方法巧妙地避开了音频数据量过大的问题，因为一般 CD 音质下 44100Hz 意味着 30 秒的音乐就将产生 66 万个长度的向量。但对于原作者的目的而言，分析大类音乐风格的时候可以直接从频谱入手。根据作者发表的文章&lt;a href=&#34;https://medium.com/@juliendespois/finding-the-genre-of-a-song-with-deep-learning-da8f59a61194#.yhemoyql0&#34;&gt; Finding the genre of a song with Deep Learning&lt;/a&gt; 的描述，只需要每秒 50 像素的分辨率即可获得满意的效果；在这里，sox 提供了很好用的命令行工具，允许我们直接生成灰度频谱图，其中每个像素的 x 代表时间、y 代表频率、亮度代表振幅。切片后使用深度卷积神经网络进行图像训练，最后使用投票机制提高准确率。&lt;br&gt;
但是，这一次实践的结果并不理想。在学习率 0.001、分辨率 50px/s 时，经过 20 个 epoch 后模型仅能达到 55% 的准确率（ACC），可以看出识别效果并不理想。这主要是因为参与训练的原始数据包括 Trance 和 Hardstyle 两种风格，而它们在梅尔（Mel）频谱图上实际上十分相似，无法准确映射到高维数据集中。&lt;/p&gt;
&lt;h2 id=&#34;四-srm-dnn频谱-节奏-情感分析-深度神经网络思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-srm-dnn频谱-节奏-情感分析-深度神经网络思路&#34;&gt;#&lt;/a&gt; 四、SRM-DNN（频谱、节奏、情感分析 - 深度神经网络）思路&lt;/h2&gt;
&lt;h3 id=&#34;41-电子音乐的频谱特征&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#41-电子音乐的频谱特征&#34;&gt;#&lt;/a&gt; 4.1 电子音乐的频谱特征&lt;/h3&gt;
&lt;p&gt;首先，我们并不希望创建一个需要 A100 才能运行的高度资源密集型网络，而是希望该模型能够在消费级硬件上部署和训练。因此，结合实际电子音乐的主要特征区分，我们可以沿用 DeepAudioClassification 的频谱分析方法。&lt;br&gt;
对于电子音乐曲风分类而言，其频谱图提供的信息量是非常大的，因为几乎每种主类别都有自己特征的 DnB 序列。这导致了在频谱图中的显著区分，在低频区域尤为明显（见下图）。&lt;br&gt;
截取频谱图时采用的配置：&lt;br&gt;
软件：iZotope RX 7&lt;br&gt;
FFT 类型（type）：自动可变短时傅里叶变换（Auto-adjustable STFT）&lt;br&gt;
启用重分配（reassignment）：否&lt;br&gt;
窗函数：海宁窗（Hann）&lt;br&gt;
颜色映射：青色到橙色（Cyan to orange）&lt;br&gt;
频率缩放（Frequency scale）：对数（Log）&lt;br&gt;
高品质渲染（High-quality rendering）：启用&lt;br&gt;
&lt;img src=&#34;../_resources/c3f2fb4bdc6d6f2789d569c084686d46.png&#34; alt=&#34;c3f2fb4bdc6d6f2789d569c084686d46.png&#34;&gt;&lt;br&gt;
 图：三种风格的电子音乐频谱图对比&lt;br&gt;
本图采用的时间窗口：20s&lt;/p&gt;
&lt;p&gt;从对比图中可以很明显地看出，不同风格的电子音乐在频谱图中呈现出较为显著的区别；尽管也有相近的风格（如 Hands Up 和 Hardcore），但总体来说，其频谱图能提供主要的风格信息。&lt;br&gt;
既然电子音乐的频谱特征如此明显，为什么 DeepAudioClassification 项目却无法使用呢？&lt;br&gt;
首先，频谱的选型有误，是最大的问题所在。对于电子音乐而言，由于其风格信息大多位于低频区，因此必须使用低频部分缩放较大的谱图类型。上图中采用的缩放是 Log，相比于常用的 Mel 频谱，它对于低频区有更大的缩放等级，使得低频信息分辨率更高；在实际运用中，该软件还提供了 Extend Log（拓展对数）频谱，其低频区的缩放更为显著。&lt;br&gt;
其次，切片数量过多。实践中为尽量减轻硬件负担，对较长的音频进行切片处理；但每个音频切片数为 100 份，这个设定相对于电子音乐的结构而言太多了。常见的电子音乐由几个类型的分段组成，例如 intro、lead、build up、verse、drop、outro 等；其风格的定义一般主要从 drop 中得出，所以若切片过多，则容易破坏每个分段的完整性，不利于风格识别。&lt;/p&gt;
&lt;h3 id=&#34;42-鼓与贝斯分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#42-鼓与贝斯分析&#34;&gt;#&lt;/a&gt; 4.2 鼓与贝斯分析&lt;/h3&gt;
&lt;p&gt;电子音乐的风格可以说有一半都由 DnB（Drum and bass，鼓与贝斯；这个词同时也是一种类型的电子音乐风格，但本文将其用于指代鼓点 + 贝斯）决定；无论是鼓点节拍数、编排方式还是贝斯的特征，亦或是二者的侧链水平等，均包含大量的风格信息。&lt;br&gt;
有关如何从音频信号中提取节拍信息，目前已有相关研究成果，包括使用动态编程、神经网络等方法进行识别。参考文献：&lt;a href=&#34;https://ieeexplore.ieee.org/document/6734668&#34;&gt;Multi-Feature Beat Tracking&lt;/a&gt;&lt;br&gt;
 使用 iZotope RX 7 提供的工具也可以进行 DnB 分析，其中的 Music Rebalance 模块可以准确分离人声、贝斯、鼓点三种信号，为分析提供了有利条件。&lt;br&gt;
&lt;img src=&#34;../_resources/72bfdc72dfb2f21a37e23d8f647da698.png&#34; alt=&#34;72bfdc72dfb2f21a37e23d8f647da698.png&#34;&gt;&lt;br&gt;
 图：RX 7 中提供的 Music Rebalance 组件&lt;/p&gt;
&lt;h3 id=&#34;43-bpm与时间分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#43-bpm与时间分析&#34;&gt;#&lt;/a&gt; 4.3 BPM 与时间分析&lt;/h3&gt;
&lt;p&gt;BPM，即 Beats per minute，每分钟节拍数。它是音乐的一个重要参数，直接指向音乐的 “速度”。尽管在制作电子音乐时，制作人通常不会严格对齐到小节 / 拍的整数倍，但 BPM 依然能够提供风格信息。&lt;br&gt;
在主风格分析时，仅通过 BPM 我们即可首先分辨音乐的大致类别；若低于 90 则可能为 Chill Out，90-110 可能为 House，110-130 可能为 Trance、Hands Up，130-160 可能为 Hardstyle 或 Hardcore 等。&lt;br&gt;
在子风格分析时，BPM 也有助于进行风格确定；例如在 Hardcore 中，若难以分辨 Frenchcore 和 UK Hardcore，则可通过 BPM 辅助判断，若达到了 160 或更高则更可能为 UK Hardcore。&lt;br&gt;
此外，音频的时间长度同样可以作为网络的输入之一，这是因为 Hands Up、Hardcore、House 和 trance、Chill Out 等分别呈现了两种倾向，前者一般时长为 3 分钟左右，而后者最长可达 10 分钟以上。尽管这种参数的帮助十分有限，但其特征强度还会更高，有助于减少结果的偏离。&lt;/p&gt;
&lt;h3 id=&#34;44-情感分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#44-情感分析&#34;&gt;#&lt;/a&gt; 4.4 情感分析&lt;/h3&gt;
&lt;p&gt;所谓情感分析，指的是对人声（和音乐，如果可能）进行情绪的识别与分类。尽管不是所有音乐都有歌词和人声，电子音乐中的人声更是少见，但进行情感分析依然有助于进一步判别细微的风格差异。&lt;br&gt;
不过，这一步的主要目的其实只针对一种风格的音乐，即 trance；许多 Trance 都具有一些人声，即便没有人声，对于音乐本身的情感分析也能够帮助辨别 Progressive trance 和 Uplifting trance。这是因为大部分 Uplifting trance 都具有一些独特的情感特征：Hopeful，Sentimental，Sad 等等；它们具有一个共同的特征，就是 uplifting，即鼓舞人心的。可以说，如果一首 Trance 听着让人想流泪，则多数时候可以确定它一定是 Uplifting trance。&lt;br&gt;
参考文献：&lt;a href=&#34;https://www.hindawi.com/journals/misy/2022/2715765/&#34;&gt;Music Emotion Classification Method Using Improved Deep Belief Network&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;45-能量分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#45-能量分析&#34;&gt;#&lt;/a&gt; 4.5 能量分析&lt;/h3&gt;
&lt;p&gt;所谓能量分析，是指针对音频每个分片（如每秒）进行电平、响度、频域复杂度等进行分析，从而确定该分片的能量等级。由于电子音乐中每个分段的能量差异较大，intro/outro 最低、lead/build up 中等、drop 最高，因此对整个音频进行能量分析并在二维数组中呈现，将有助于分析音乐结构。&lt;br&gt;
例如，trance 音乐的结构中，各分段能量差异相对较小，drop 出现的频次更多；House 则一般为 intro、lead、build up、drop、verse、build up、verse、outro 序列。不过该方法适用性不佳，主要是因为电子音乐的结构变化性大，且目前没有已标签的数据集进行训练，需要人工标记才能进行监督学习。&lt;/p&gt;
&lt;h3 id=&#34;46-实现思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#46-实现思路&#34;&gt;#&lt;/a&gt; 4.6 实现思路&lt;/h3&gt;
&lt;p&gt;有了以上理论基础，我们就可以尝试构建这样一个神经网络了。当然，由于笔者的专业是食品安全，本文并不涉及任何实际代码、构建和部署，而仅为提出思路。&lt;/p&gt;
&lt;h4 id=&#34;461-频谱提取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#461-频谱提取&#34;&gt;#&lt;/a&gt; 4.6.1 频谱提取&lt;/h4&gt;
&lt;p&gt;这个网络仅涉及频域分析而没有时域处理，因此我们可以直接忽略音频原始采样，而是直接生成其频谱图。&lt;br&gt;
前文实践项目 DeepAudioClassification 中，使用到了一个命令行工具：sox。它可以输出音频的 png 频谱图，并且可以直接定义灰度、分辨率等；但其选项中并不能更改频率缩放类型，而默认情况下的 Mel 频谱图对于电子音乐分类而言效果不佳。因此，我们应该使用其他工具或算法来创建 log 频谱图。在 log 频谱图下，一个 44100Hz 采样率的音频（其最高频率为 22050Hz），频谱图的中间位置约为 2205Hz。&lt;/p&gt;
&lt;h4 id=&#34;462-dnb分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#462-dnb分析&#34;&gt;#&lt;/a&gt; 4.6.2 DnB 分析&lt;/h4&gt;
&lt;p&gt;网络的第二个输入应该为 DnB 序列；通过前文所述的一些方法，可以获取音乐的节拍序列信息。仅需得知 drum（鼓点）的序列即可提供良好的分类所需的信息，而 bassline 则可通过分析甚低频区的信号得出。&lt;br&gt;
这两个数据在训练时应始终保持时间一致性，即 drum 和 bass 不能独立分析；也可考虑混合后输入，或直接从频谱图中再单独提取高分辨率的低频区信号频谱图像进行输入。&lt;br&gt;
可能实现的模块：&lt;a href=&#34;https://github.com/MTG/essentia/&#34;&gt;Github: MTG/essentia&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;463-bpm与时间分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#463-bpm与时间分析&#34;&gt;#&lt;/a&gt; 4.6.3 BPM 与时间分析&lt;/h4&gt;
&lt;p&gt;这一步是相对而言最简单的，音频时间直接获取 duration 即可，BPM 也可以通过许多 python 的音频工具库获得。&lt;br&gt;
可能实现的模块：&lt;a href=&#34;https://github.com/librosa/librosa&#34;&gt;Github: librosa/Librosa&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;464-图像识别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#464-图像识别&#34;&gt;#&lt;/a&gt; 4.6.4 图像识别&lt;/h4&gt;
&lt;p&gt;这一步有许多可选的方向，不过仍然可以参考前文实践项目的做法，使用 tensorflow 提供的 tflearn 进行图像训练。需要注意的是，为了降低负载，仍然可能需要对频谱图进行分片处理。&lt;/p&gt;
&lt;h4 id=&#34;465-人声分离&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#465-人声分离&#34;&gt;#&lt;/a&gt; 4.6.5 人声分离&lt;/h4&gt;
&lt;p&gt;借助许多工具，包括 iZotope RX 7 的 Center Extract、Music Rebalance 或 Audition 的中置声道提取功能，都可以对音频的人声进行高质量分离。这一步的目的是为后续进行情感分析提供原始文件，并且也可能为音乐情感分析提供良好的无人声音轨。&lt;/p&gt;
&lt;h4 id=&#34;466-情感分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#466-情感分析&#34;&gt;#&lt;/a&gt; 4.6.6 情感分析&lt;/h4&gt;
&lt;p&gt;参考文献：&lt;a href=&#34;https://www.hindawi.com/journals/misy/2022/2715765/&#34;&gt;Music Emotion Classification Method Using Improved Deep Belief Network&lt;/a&gt;&lt;br&gt;
 基于此文献，可以确定 DBN 网络用于情感分析的可能性。不过目前似乎很少见到相关的模块或库可以直接提供此功能接口的，因此在编程方面可能具有难度。&lt;/p&gt;
&lt;h2 id=&#34;5总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5总结&#34;&gt;#&lt;/a&gt; 5. 总结&lt;/h2&gt;
&lt;p&gt;再次说明，由于作者为食品专业，且对机器学习、计算机等了解很少，本文中可能出现大量不专业、错误术语和概念，其中的部分思路也可能无法实现或已有更好的替代方法。但作者编写本文的原因是希望解决实际问题，现有的音乐分类不够准确和细致、无法区分电子音乐下的各类风格。&lt;br&gt;
如果您有建议、修改提示、想法等，均可直接于评论区留言。人工智能是新兴的热门话题，在时代的风口浪尖上，我们可以共同学习、不断进步，为计算机学习的城墙添砖加瓦。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E9%9A%8F%E8%AE%B020230501/</guid>
            <title>Hexo批处理脚本更新，通过zerotier实现免费简易内网穿透</title>
            <link>https://zjxdiu.github.io/blog/%E9%9A%8F%E8%AE%B020230501/</link>
            <category>日常</category>
            <category>开发</category>
            <pubDate>Mon, 01 May 2023 11:01:00 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;因为不知道写啥就更新一些以前的东西吧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#因为不知道写啥就更新一些以前的东西吧&#34;&gt;#&lt;/a&gt; 因为不知道写啥，就更新一些以前的东西吧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hexo 批处理脚本&lt;br&gt;
原文：&lt;a href=&#34;https://zjxdiu.github.io/blog/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/&#34;&gt;使用批处理和 Joplin 执行并优化 Hexo 博客工作流程&lt;/a&gt;&lt;br&gt;
更新脚本内容：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;hljs bat&#34;&gt;@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hljs-built_in&#34;&gt;setlocal&lt;/span&gt; EnableDelayedExpansion
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;
:ac
&lt;span class=&#34;hljs-comment&#34;&gt;rem 请设置%targetlable%变量，以确保正常跳转至目标位置&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;cls&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;F
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;%targetlabel%&lt;/span&gt;
:&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%targetlabel%&lt;/span&gt;&amp;quot;==&amp;quot;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.【完整】执行完整的检查和推送blog流程
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;.【快速】快速上载blog
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;.【预览】本地预览
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;.单独执行指令
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;.【标准】执行快速标准推送
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;.【本地部署】执行标准推送，但部署到本地而非GitHub
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;.
choice /c &lt;span class=&#34;hljs-number&#34;&gt;123456&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ldeploy
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; std
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; new
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=local&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=fast&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=full&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;exit&lt;/span&gt;
:ldeploy
&lt;span class=&#34;hljs-comment&#34;&gt;REM 这一段是部署在本地，也就是复制一遍；可以根据情况改成复制到共享文件夹中&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;.
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 清理缓存...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean&amp;quot; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 生成页面...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo g&amp;quot; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 复制必要资源...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;&lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y&amp;quot; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 部署到本地服务器路径...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;&lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\public\ D:\server\blog1\ /e /s /y&amp;quot; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 上传结束，打开网页中...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; C:\Users\zjxdiu\Downloads\实时工具\hfs.exe&amp;quot;
&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; http://&lt;span class=&#34;hljs-number&#34;&gt;127&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;/
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 完成，按任意键退出...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;exit&lt;/span&gt;
:std
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;.
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 启动本地预览...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean &amp;amp; hexo g &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; http://localhost:&lt;span class=&#34;hljs-number&#34;&gt;4000&lt;/span&gt;/ &amp;amp; hexo s&amp;quot;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 上载到远程服务器...
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo d&amp;quot;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 完成，按任意键退出...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;exit&lt;/span&gt;
:new
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 正在创建新的&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt;实例...
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 命令提示：
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo clean
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo g
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo s
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo d
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 按任意键返回菜单...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac
:local
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;                  本地预览模式
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 启动预览...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean &amp;amp; hexo g &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; http://localhost:&lt;span class=&#34;hljs-number&#34;&gt;4000&lt;/span&gt;/ &amp;amp; hexo s&amp;quot;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 按任意键返回菜单...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac
:fast
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;                  快速上载blog
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean &amp;amp; hexo g &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; hexo d&amp;quot;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 完成，&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;秒后退出...
&lt;span class=&#34;hljs-built_in&#34;&gt;ping&lt;/span&gt; localhost -n &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;exit&lt;/span&gt;
:full
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;                  完整流程向导
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;              按&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;为确定，按&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;为跳过
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; clean
:clean
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第一步：清理缓存
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; generate
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; generate
:generate
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第二步：生成页面
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; check
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;&lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; hexo g&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; check
:check
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第三步：本地预览
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; deploy
&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; http://localhost:&lt;span class=&#34;hljs-number&#34;&gt;4000&lt;/span&gt;/
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo s&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; deploy
:deploy
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第四步：上传到远程服务器
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; done
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo d&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; done
:done
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 流程已完成，按任意键返回菜单...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Zerotier 内网穿透&lt;br&gt;
网上有一些教程，但是不够简洁易懂，所以写一个。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;进入&lt;a href=&#34;https://my.zerotier.com/&#34;&gt;官网控制台&lt;/a&gt;注册一个账号，可以不用现场注册，直接微软账号登录即可。&lt;/li&gt;
&lt;li&gt;选择 Create A Network&lt;/li&gt;
&lt;li&gt;点击刚创建的网络，进入配置界面
&lt;ul&gt;
&lt;li&gt;Name 随便写一个方便你记的名字&lt;/li&gt;
&lt;li&gt;Description 是介绍，可以写详细信息，如果以后忘了网络是干啥的可以看这个回顾&lt;/li&gt;
&lt;li&gt;Access Control 建议选 Private，这样你就拥有完全的管理权限&lt;/li&gt;
&lt;li&gt;下面的 IP 直接自动即可，或者手动选一个跟你目前局域网 IP 不冲突的地址段&lt;/li&gt;
&lt;li&gt;IPv6 Auto-Assign 根据情况选择，如果你们的网络成员都具有广域网 ipv6 连接则勾选第一项，否则不管&lt;/li&gt;
&lt;li&gt;最后复制 Network ID，就是一串数字和字母组成的字符串，发给你的成员&lt;br&gt;
【以上步骤只需要网络管理员进行，成员不需要】&lt;br&gt;
【以下内容每个人都要执行】&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;下载 Zerotier：&lt;a href=&#34;https://www.zerotier.com/download/&#34;&gt;下载链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装并从开始菜单里启动&lt;/li&gt;
&lt;li&gt;等任务栏出现程序图标，右键，选择 Join New Network&lt;/li&gt;
&lt;li&gt;输入刚才的 Network ID，确定
&lt;ul&gt;
&lt;li&gt;如果弹出询问弹窗，例如防火墙、是否启用网络发现等，均允许&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;等待几分钟，进入系统设置检查 IP 是否获取成功
&lt;ul&gt;
&lt;li&gt;分配成功说明连接成功，否则继续等待&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;【重要】任意成员加入网络时，需要进入&lt;a href=&#34;https://my.zerotier.com/&#34;&gt;官网控制台&lt;/a&gt;给成员左侧的 Auth 打勾，只有打勾的成员才能获取到 IP 并加入网络，否则无法连接&lt;/li&gt;
&lt;li&gt;在控制台页面可以看到每个人的虚拟局域网 IP，这个地址一旦分配就不会自动更改，因此你甚至可以做个 DNS 记录方便大家记（）&lt;/li&gt;
&lt;li&gt;ping 一下成员的 IP，确定连接通顺&lt;/li&gt;
&lt;li&gt;完成！现在你们已经相当于在一个局域网里了，只不过游戏房间和服务器可能不会自动查找到，手动输入地址即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;查询精神状态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询精神状态&#34;&gt;#&lt;/a&gt; 查询精神状态&lt;/h3&gt;
&lt;p&gt;最近玩 LLM 有点上瘾，推荐一个 chatGLM 项目&lt;a href=&#34;https://github.com/THUDM/ChatGLM-6B&#34;&gt; Github 地址&lt;/a&gt;，可以部署在本地运行的对话机器人，这个 62 亿参数的模型只需要 6G 显存就能运行（当然，是 N 卡），可以说非常好玩了（）&lt;/p&gt;
&lt;p&gt;还想换个主题，或者再开一个功能更全面一些的，这个极简博客就当正式文章和简历发布地点。&lt;br&gt;
就这样吧，最近作业很多但是都写完了，没有压力就没有折腾的欲望和动力 (T_T)&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/dynv6_notes/</guid>
            <title>dynv6使用技巧（如何添加多个地址 子域名 等）</title>
            <link>https://zjxdiu.github.io/blog/dynv6_notes/</link>
            <category>网络</category>
            <category>游戏</category>
            <pubDate>Fri, 03 Mar 2023 17:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;因为 ipv6 普及度日益增加，在自己的环境里搭建简易服务器的想法就逐渐发芽；无论是用于博客网站、NAS 或私有云的搭建，还是用来开游戏服务器，都能够简单易行地实现（因为有公网 ipv6）。&lt;br&gt;
不过，很多时候家庭环境下 ipv6 地址也会发生变化，尤其是电脑重启、宽带重拨的时候，那么如何在没有固定 ipv6 的情况下让别人能更容易找到我们的地址呢？很简单，当然是用 DDNS 了。&lt;br&gt;
DDNS，也就是动态 DNS，将一个变化的 IP 绑定到域名上，通过脚本定时检测和更新地址，这样即使地址变化，域名解析出来的地址也会跟着变化，仍然可以使用同一个域名定位到同一个地址。&lt;/p&gt;
&lt;h2 id=&#34;使用dynv6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用dynv6&#34;&gt;#&lt;/a&gt; 使用 dynv6&lt;/h2&gt;
&lt;p&gt;官网：&lt;a href=&#34;https://dynv6.com/&#34;&gt;https://dynv6.com/&lt;/a&gt;&lt;br&gt;
 首先用邮箱注册一个账号，接着进入 My Zones，点击 Create New Zone，在 Name 里输入你想要的网址名称和后缀类型，下面的地址可以先点击 Set current address，这样网页就会填入你的外网 IP 地址（应注意检查，ipv4 基本不会是跟电脑一致，但 ipv6 需要一致）。&lt;br&gt;
&lt;img src=&#34;../_resources/8007661dd2ee4a33be77ca500ec41a76.png&#34; alt=&#34;8007661dd2ee4a33be77ca500ec41a76.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击创建后，若网址没有冲突，则创建成功；直接点击这个域名，上面有两个选项是可以自己修改的：status 和 records。&lt;/p&gt;
&lt;h2 id=&#34;创建dns记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建dns记录&#34;&gt;#&lt;/a&gt; 创建 DNS 记录&lt;/h2&gt;
&lt;p&gt;在 Status 里，点击 Edit Zone，将 ipv6 地址再次设为你的公网 ipv6 并保存，这样主域名就会直接解析到你的电脑上；&lt;br&gt;
在 Records 里，可以编辑或删除现有的 AAAA 记录，也可以新增其他 DNS 记录。&lt;/p&gt;
&lt;h3 id=&#34;创建子域名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建子域名&#34;&gt;#&lt;/a&gt; 创建子域名&lt;/h3&gt;
&lt;p&gt;点击 Add Record，选择 AAAA 类型（A 是 ipv4，AAAA 是 ipv6，CNAME 是网站别名一般用不到），前面的 name 里填写子域名前缀（&lt;a href=&#34;http://xn--web-th2ek25abiifsffvwu74d.domainname.dynv6.net&#34;&gt;比如我要创建 web.domainname.dynv6.net&lt;/a&gt;，那就在这里写 web），后面的地址里填写目标 ipv6 即可。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;设置ddns自动更新&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#设置ddns自动更新&#34;&gt;#&lt;/a&gt; 设置 DDNS 自动更新&lt;/h2&gt;
&lt;p&gt;提示：建议将此脚本部署于 Windows 服务器上，而非自己的电脑&lt;/p&gt;
&lt;h3 id=&#34;下载wget和grep&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载wget和grep&#34;&gt;#&lt;/a&gt; 下载 wget 和 grep&lt;/h3&gt;
&lt;p&gt;网上很多教程，这里列两个：&lt;br&gt;
&lt;a href=&#34;https://www.cnblogs.com/shenxiaolin/p/16662793.html&#34;&gt;windows 下 grep 的安装与使用&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.jianshu.com/p/a8dfc762ba3b&#34;&gt; win10 安装 wget&lt;/a&gt;&lt;br&gt;
 记得检查好环境变量，确定 cmd 下运行这两个命令有输出。&lt;/p&gt;
&lt;h3 id=&#34;下载instsrvexe和srvanyexe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载instsrvexe和srvanyexe&#34;&gt;#&lt;/a&gt; 下载 instsrv.exe 和 srvany.exe&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/zhaiqianfeng/p/4622561.html&#34;&gt;利用 instsrv 和 srvany 来手动安装服务&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;编写脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编写脚本&#34;&gt;#&lt;/a&gt; 编写脚本&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在特定路径下创建文件夹，将上述 instsrv.exe、srvany.exe 以及后续脚本均放在此处；&lt;/li&gt;
&lt;li&gt;创建 install_server.bat 文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;hljs bat&#34;&gt;@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; curexe=%~dp0
&lt;span class=&#34;hljs-built_in&#34;&gt;cd&lt;/span&gt; /d &lt;span class=&#34;hljs-variable&#34;&gt;%curexe%&lt;/span&gt;
&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%curexe%&lt;/span&gt;instsrv.exe&amp;quot; ddns_dynv6 &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%curexe%&lt;/span&gt;srvany.exe&amp;quot;
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ddns_dynv6 服务添加完成

@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 修改服务路径
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM 添加注册表语法: reg add 注册表路径 /v 项名称 /t 值类型 /d 数据 /f 表示强行修改不提示&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM 名称 Application 值为你要作为服务运行的程序地址 /d对应的参数有斜杠不是为了转义引号，而是路径还有斜杠，默认将引号转义了，额外添加斜杠是为了保留引号&lt;/span&gt;
 
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; regpath=HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\ddns_dynv6\Parameters\
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM 名称 AppDirectory 值为你要作为服务运行的程序所在文件夹路径&lt;/span&gt;
reg add &lt;span class=&#34;hljs-variable&#34;&gt;%regpath%&lt;/span&gt; /v AppDirectory /t REG_SZ /d &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%curexe%&lt;/span&gt;\&amp;quot; /f
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM 名称 AppParameters 值为你要作为服务运行的程序启动所需要的参数&lt;/span&gt;
reg add &lt;span class=&#34;hljs-variable&#34;&gt;%regpath%&lt;/span&gt; /v Application /t REG_SZ /d &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%curexe%&lt;/span&gt;dynv6.bat&amp;quot; /f
 
&lt;span class=&#34;hljs-built_in&#34;&gt;net&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; ddns_dynv6
 
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;创建 remove_server.bat 文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;hljs bat&#34;&gt;@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hljs-built_in&#34;&gt;net&lt;/span&gt; stop ddns_dynv6
instsrv ddns_dynv6 remove
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;创建 dynv6.bat 文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;hljs bat&#34;&gt;@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; off
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; tempnum=
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; ipaddr=
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; oldipaddr=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;rem domain=你注册的域名（dynv6.net 提供多种域名后缀可自行修改）&lt;/span&gt;
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; domain=【在这里填写你记录的域名，填zone名称】
&lt;span class=&#34;hljs-comment&#34;&gt;rem token=你注册后的钥匙（dynv6.net 提供）&lt;/span&gt;
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; token=【在这里填写你的token，把这段文字和括号删掉然后粘贴】
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; IPV6_REGEX=&amp;quot;\(\([&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;A-Fa-f]\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;\&amp;#125;:\)\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,\&amp;#125;\)\(\([&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;A-Fa-f]\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;\&amp;#125;\)\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;\&amp;#125;\)\(\(:[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;A-Fa-f]\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;\&amp;#125;\)\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,\&amp;#125;\)&amp;quot;
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; IPV4_REGEX=&amp;quot;[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;]\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;\&amp;#125;\.[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;]\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;\&amp;#125;\.[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;]\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;\&amp;#125;\.[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;]\&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;\&amp;#125;&amp;quot;
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; URL=&amp;quot;https://dynv6.com/api/update?hostname=&lt;span class=&#34;hljs-variable&#34;&gt;%domain%&lt;/span&gt;&amp;amp;token=&lt;span class=&#34;hljs-variable&#34;&gt;%token%&lt;/span&gt;&amp;amp;ipv4=&lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt;paddr&lt;span class=&#34;hljs-variable&#34;&gt;%%&amp;quot;&lt;/span&gt;
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; URLV6=&amp;quot;https://dynv6.com/api/update?hostname=&lt;span class=&#34;hljs-variable&#34;&gt;%domain%&lt;/span&gt;&amp;amp;token=&lt;span class=&#34;hljs-variable&#34;&gt;%token%&lt;/span&gt;&amp;amp;ipv6=&lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt;paddr&lt;span class=&#34;hljs-variable&#34;&gt;%%&amp;amp;&lt;/span&gt;ipv6prefix=&lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt;paddr&lt;span class=&#34;hljs-variable&#34;&gt;%%&amp;quot;&lt;/span&gt;
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; BIN=wget -t &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; --prefer-family=IPv6 --no-dns-cache --no-check-certificate
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;rem ***ipv4***（dynv6也提供ipv4动态域名服务）&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;rem for /F %%i in (&amp;#x27;nslookup %domain% ns1.dynv6.com ^|grep -m2 -o %IPV4_REGEX%&amp;#x27;) do ( set oldipaddr=%%i)&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;rem ***ipv6***&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; /F &lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; (&amp;#x27;nslookup -qt^=AAAA &lt;span class=&#34;hljs-variable&#34;&gt;%domain%&lt;/span&gt; ns1.dynv6.com ^|grep -m2 -o &lt;span class=&#34;hljs-variable&#34;&gt;%IPV6_REGEX%&lt;/span&gt;&amp;#x27;) &lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt; ( &lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; oldipaddr=&lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt;)
 
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; Current &lt;span class=&#34;hljs-variable&#34;&gt;%domain%&lt;/span&gt; IP Add:&lt;span class=&#34;hljs-variable&#34;&gt;%oldipaddr%&lt;/span&gt;
 
:start_ip1
&lt;span class=&#34;hljs-comment&#34;&gt;rem @cls&lt;/span&gt;
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ... 
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.####从ip.sb获得地址####
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; ip6addr=null
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM ***ipv6***&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; /F &lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; (&amp;#x27;&lt;span class=&#34;hljs-variable&#34;&gt;%BIN%&lt;/span&gt; -O- http://ip.sb  ^|grep -m &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; -o &lt;span class=&#34;hljs-variable&#34;&gt;%IPV6_REGEX%&lt;/span&gt;&amp;#x27;) &lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; ipaddr=&lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt;)
 
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;&amp;quot; == &amp;quot;null&amp;quot; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 没有IPV6地址或获得IPV6地址失败
timeout &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; start_ip2
) &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 获得IP地址:&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;，旧IP地址:&lt;span class=&#34;hljs-variable&#34;&gt;%oldipaddr%&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%oldipaddr%&lt;/span&gt;&amp;quot; == &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;&amp;quot; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ---更新IP---
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; update_web_ip
) &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; IP没有改变
timeout &lt;span class=&#34;hljs-number&#34;&gt;300&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;cls&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; start_ip2
))
 
:start_ip2
@&lt;span class=&#34;hljs-built_in&#34;&gt;ipconfig&lt;/span&gt; /flushdns
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ...
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;.####从checkip.dyndns.com获得地址####
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; ipaddr=null
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM ***ipv4***&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;rem for /F %%i in (&amp;#x27;%BIN% -O- http://checkip.dyndns.com ^|grep -m 1 -o %IPV4_REGEX%&amp;#x27;) do (set ipaddr=%%i)&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM ***ipv6***&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; /F &lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; (&amp;#x27;&lt;span class=&#34;hljs-variable&#34;&gt;%BIN%&lt;/span&gt; -O- http://checkipv6.dyndns.com ^|grep -m &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; -o &lt;span class=&#34;hljs-variable&#34;&gt;%IPV6_REGEX%&lt;/span&gt;&amp;#x27;) &lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; ipaddr=&lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt;)
 
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;&amp;quot; == &amp;quot;null&amp;quot; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 没有IP地址或获得IP地址失败
timeout &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; start_ip1
) &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 获得IP地址:&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;，旧IP地址:&lt;span class=&#34;hljs-variable&#34;&gt;%oldipaddr%&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%oldipaddr%&lt;/span&gt;&amp;quot; == &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;&amp;quot; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ---更新IP---
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; update_web_ip
) &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; (
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; IP没有改变
timeout &lt;span class=&#34;hljs-number&#34;&gt;300&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;cls&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; start_ip2
))
 
 
:update_web_ip
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ==============================================
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ipaddr=&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;&amp;quot;
@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ==============================================
@&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; var=null
&lt;span class=&#34;hljs-comment&#34;&gt; &lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM ***ipv4***&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;rem for /F &amp;quot;tokens=*&amp;quot; %%i in (&amp;#x27;%BIN% -O- %URL%&amp;#x27;) do (set var=%%i)&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM ***ipv6***&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; /F &amp;quot;tokens=*&amp;quot; &lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; (&amp;#x27;&lt;span class=&#34;hljs-variable&#34;&gt;%BIN%&lt;/span&gt; -O- &lt;span class=&#34;hljs-variable&#34;&gt;%URLV6%&lt;/span&gt;&amp;#x27;) &lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; var=&lt;span class=&#34;hljs-variable&#34;&gt;%%i&lt;/span&gt;)
 
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 更新信息=&lt;span class=&#34;hljs-variable&#34;&gt;%var%&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%var%&lt;/span&gt;&amp;quot; == &amp;quot;addresses updated&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; end
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 更新失败
timeout &lt;span class=&#34;hljs-number&#34;&gt;120&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; start_ip2
 
:end
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; oldipaddr=&lt;span class=&#34;hljs-variable&#34;&gt;%ipaddr%&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 更新数据成功
timeout &lt;span class=&#34;hljs-number&#34;&gt;300&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; start_ip2
&lt;span class=&#34;hljs-comment&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM 以上每个TIMEOUT指令都表示等待一定时间（秒），可以按实际情况修改&lt;/span&gt;
&lt;span class=&#34;hljs-comment&#34;&gt;REM 我这里的300秒应该是够用的，太短了占用过多资源，太长了更新不及时&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;开机自启动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开机自启动&#34;&gt;#&lt;/a&gt; 开机自启动&lt;/h2&gt;
&lt;p&gt;创建一个计划任务即可，详情可百度教程&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/Network_progress_CSUST/</guid>
            <title>长沙理工大学无线网络多设备共享解决方案</title>
            <link>https://zjxdiu.github.io/blog/Network_progress_CSUST/</link>
            <category>网络</category>
            <pubDate>Fri, 24 Feb 2023 22:07:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;本文未完成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本文未完成&#34;&gt;#&lt;/a&gt; 本文未完成&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id=&#34;引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引用&#34;&gt;#&lt;/a&gt; 引用&lt;/h2&gt;
&lt;p&gt;本文大部分内容可参考：&lt;br&gt;
&lt;a href=&#34;https://www.mr-cn.net/2021/06/15/Share-your-network-in-CSUST/&#34;&gt;长沙理工大学：校园网解除共享限制&lt;/a&gt;&lt;br&gt;
路由器刷机参考教程（非本次使用）：&lt;br&gt;
&lt;a href=&#34;https://www.right.com.cn/FORUM/thread-489907-1-1.html&#34;&gt;极路由 Enjoy 1200  HC5861B OpenWRT 固件 Rosy 主题&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;原因与现象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原因与现象&#34;&gt;#&lt;/a&gt; 原因与现象&lt;/h2&gt;
&lt;p&gt;为了维护运营商利益，校园网设置了一些检测与规则，对同时登录校园网的设备数量作出了严格的限制，并且不允许终端用户进行网络共享。&lt;br&gt;
具体表现为，当用户使用电脑、手机等的热点、无线信号桥等方法时，只要有第二台设备联网，就会在一定条件下被检测发现，随后此账号将无法访问网络，并自动将网页重定向到登录界面（或 1.1.1.3，但这个页面不能加载出来）。&lt;/p&gt;
&lt;h2 id=&#34;原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理&lt;/h2&gt;
&lt;p&gt;根据引用文章，可以得知共享检测主要通过 80 端口下的 HTTP 报文中浏览器 UA 的区别来实现，可以看到这个限制条件比较多，而且检测周期并不短；因此会出现稳定共享的时间时长时短的现象。&lt;br&gt;
此外，还可能会通过其他方法检测，包括但不限于 TTL、IPID、侵入式检测等等。&lt;/p&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准备工作&#34;&gt;#&lt;/a&gt; 准备工作&lt;/h2&gt;
&lt;p&gt;为实现稳定的校园网共享，首先需要选择正确的系统：必须使用 OpenWRT 或 Pavanda 等软路由系统。&lt;br&gt;
本文基于 Pavanda 操作。&lt;/p&gt;
&lt;h3 id=&#34;路由选型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由选型&#34;&gt;#&lt;/a&gt; 路由选型&lt;/h3&gt;
&lt;p&gt;如果你还没有软路由或者合适的路由器，那么选购路由器就是第一步了。我最终的选择是二手极路由 Enjoy 1200，型号 HC5861B。极路由虽然已经倒闭，但它的产品可玩性和性价比确实是相对较好的。&lt;br&gt;
淘宝入手价格 40 元，由商家代刷 Breed。&lt;br&gt;
需要注意的是，这一款路由器不支持 USB，电源接口也是 12V DC 而非 5V Micro-USB，如果有这两个功能需求的话可以考虑极路由 3 或其他产品。&lt;/p&gt;
&lt;h3 id=&#34;检查与刷机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检查与刷机&#34;&gt;#&lt;/a&gt; 检查与刷机&lt;/h3&gt;
&lt;p&gt;收货后先简单清理积灰，检查网口是否有积聚大量灰尘，天线是否正常连接、旋转。&lt;br&gt;
随后插入电源开机，连接电脑网口到路由器 LAN 1 口，等待 IP 自动配置完成，进入默认网关的地址（本次为 192.168.132.1，极路由原厂固件可能为 192.168.199.1）&lt;br&gt;
使用默认的管理员账号密码（admin）登录后，发现这台机器已经刷好了老毛子固件（Padavan）了：&lt;br&gt;
&lt;img src=&#34;../_resources/54de7cdf47ce563bb65d5c42e282e331.png&#34; alt=&#34;54de7cdf47ce563bb65d5c42e282e331.png&#34;&gt;&lt;br&gt;
 所以省下了很多时间，虽然我的计划是使用 OpenWrt，但 Padavan 本质上是一样的。&lt;br&gt;
如果需要刷机教程，请参考引用文章，或直接搜索路由型号 + OpenWrt，即可找到一些刷机教程。&lt;/p&gt;
&lt;h2 id=&#34;网络拓扑&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络拓扑&#34;&gt;#&lt;/a&gt; 网络拓扑&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/15828e53952c884a9b9f9f1cc11b7c77.png&#34; alt=&#34;15828e53952c884a9b9f9f1cc11b7c77.png&#34;&gt;&lt;br&gt;
 我的目标是达成这样的拓扑，实际上就是一个无线 “路由”，也就是将无线信号作为 WAN，执行 NAT 和防火墙规则后建立子网，设备均接入子网中。&lt;/p&gt;
&lt;h2 id=&#34;基础配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基础配置&#34;&gt;#&lt;/a&gt; 基础配置&lt;/h2&gt;
&lt;h3 id=&#34;路由器接入无线网络&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由器接入无线网络&#34;&gt;#&lt;/a&gt; 路由器接入无线网络&lt;/h3&gt;
&lt;p&gt;直接参考这张图即可：&lt;br&gt;
&lt;img src=&#34;../_resources/d6035076edef8fc78299e3af690eea62.png&#34; alt=&#34;d6035076edef8fc78299e3af690eea62.png&#34;&gt;&lt;br&gt;
2.4G 和 5G 只能有一个用于 AP-Client，另一个必须禁用桥接。&lt;br&gt;
需要注意的是，路由器需要用一个频段接入校园网，另一个频段用于发射信号；虽然可以选择 client+AP 来实现单频复用，实际上只用 5GHz 的话效果也不错，但我收到的这台路由器不知道为何 5G 能力极其孱弱（无遮挡 50cm 距离下 client 都不能跑满协商速率），而 2.4G 能力极强（对周围的无线鼠标、蓝牙手柄等造成严重干扰），因此这里不使用这种方法。&lt;br&gt;
懒得删改的原文：&lt;br&gt;
&lt;em&gt;这里还涉及到频段的选择，最开始我使用 2.4G 接入校园网、5G 用于共享，但随后我发现无线鼠标的工作会受到较严重的干扰（接收器也工作在 2.4G 频率上），因此后续改为 5G 接入、2.4G 共享。&lt;br&gt;
此外，网络性能也是一个需要关心的重点，5GHz 总能提供更优秀的表现，但这里我们只能用于一个目的；由于我平时主要使用电脑上网，而电脑是通过网线连接到路由器的，因此选择 5G 接入是更好的。实际上，这种情况下 2.4G 的表现也不差，宿舍面积小、干扰少，多次测试下来延迟在 30ms 以内，速度 8-9MB/s，可以满足 1080P 视频观看和正常游戏。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改网络配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改网络配置&#34;&gt;#&lt;/a&gt; 修改网络配置&lt;/h3&gt;
&lt;p&gt;如果对内网网段不敏感（例如你只想要正常上网，平时不开发网页、软件、游戏、不做任何测试，那么这一段可以跳过）&lt;br&gt;
在左侧选择外部网络（WAN），可参考下图配置：&lt;br&gt;
&lt;img src=&#34;../_resources/e613ab56c89c86b939bf67ab5601fc42.png&#34; alt=&#34;e613ab56c89c86b939bf67ab5601fc42.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;LAN 配置同理，设置想要的网段、DNS、静态路由等。&lt;/p&gt;
&lt;h2 id=&#34;通过nat连接ipv6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过nat连接ipv6&#34;&gt;#&lt;/a&gt; 通过 NAT 连接 ipv6&lt;/h2&gt;
&lt;p&gt;由于我希望使用到正常的 ipv6，故单独在此写出方案；对于绝大多数日常网络而言，关闭 ipv6 可能反而有助于提高稳定性。&lt;br&gt;
参考文章：&lt;a href=&#34;https://post.smzdm.com/p/ad9qkz9k/&#34;&gt;校园网环境下 Openwrt 配置 ipv6 教程 —— 以 nat6 为例&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;NAT 是什么？&lt;br&gt;
NAT 是出现在 ipv4 中的技术；由于 ipv4 地址空间有限（总约 42 亿个），无法满足爆炸式增长的网络设备入网需求，因此出现了网络地址转换（Network Address Translation）技术；它的作用就是缓解 ipv4 地址消耗，尽量在 ipv6 部署完全之前满足原有上网需求。&lt;br&gt;
它的工作原理很简单，我们平时使用路由器上网的时候就至少会有一次 NAT 过程，路由器将一个外网（WAN）的地址映射到多个内网地址（通常为 192.168.x.x 或 10.x.x.x），这样一个路由器下的设备就可以共用一个外网 IP，大幅缓解了地址消耗，同时解决了耗尽的影响。&lt;br&gt;
NAT 有助于提高网络安全性，因为路由器上可以部署非常高效的防火墙，也可以天然阻断所有传入连接，但这样的技术也会带来问题；最大的问题无疑就是点对点连接变得不可能，因此游戏联机、网站建设等都会变得很困难。&lt;br&gt;
在我的使用场景下，Minecraft 联机是最常见的点对点连接应用，此前的解决方案均为 FRP 内网穿透（见前文章）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为什么我一定要有 ipv6 连接？&lt;br&gt;
很简单，ipv6 地址池极大，运营商也并未刻意限制用户的 ipv6 访问（至少我没有遇到过哪个运营商在 ipv6 上用 NAT 的）&lt;strong&gt;（但是教育网除外）&lt;/strong&gt;。&lt;br&gt;
因此，大多数用户只要开启了 ipv6，就能获取到公网 IP。这对于点对点连接来说无疑是非常有帮助的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;教育网干了什么？&lt;br&gt;
一般运营商在家用、商用宽带里分配的 ipv6 都是 / 64 的前缀，这意味着路由器拿到的地址里面还包含了大量的可用地址，用于给后续设备分配 ipv6 地址；&lt;br&gt;
但教育网的 ipv6 则直接分配了 / 128 的地址，这就意味着它给你的地址只能用于一台设备。也就是说，想要共享 ipv6，必须使用 NAT。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;后续等待完善&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后续等待完善&#34;&gt;#&lt;/a&gt; 后续等待完善&lt;/h1&gt;
&lt;p&gt;可参考：&lt;a href=&#34;https://doge.uk/coding/padavan-ipv6-napt66.html&#34;&gt;Padavan 路由下使用 NAPT66 模块访问移动 IPV6 网络&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/another_toss_of_music_recording/</guid>
            <title>又一次折腾手机游戏《灵魂潮汐》音频录制的记录</title>
            <link>https://zjxdiu.github.io/blog/another_toss_of_music_recording/</link>
            <category>游戏</category>
            <pubDate>Thu, 26 Jan 2023 23:51:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;事件初始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事件初始&#34;&gt;#&lt;/a&gt; 事件初始&lt;/h2&gt;
&lt;p&gt;在 2021 年，我入坑了灵魂潮汐；作为副游，她已经做到了尽善尽美。具体不再阐述，有兴趣可自行前往&lt;a href=&#34;https://lhcx.iqigame.net/&#34;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后，在大约 2022 年中的时候，有几次游戏大更新；有一天我意外地发现，游戏登录前的加载界面不再是寂静无声，而是加入了一段非常好听的音乐！&lt;br&gt;
当时这段音乐就让我沉醉了，游戏都没肝就直接跑去 b 站找官方账号。很幸运，我找到了视频；不幸的是，官方视频里的歌曲不是同一个人唱的 😦&lt;br&gt;
但是它实在太好听了，所以之后我又琢磨着怎么把这段音乐录下来。于是就有了后续的折腾环节。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;尝试录制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#尝试录制&#34;&gt;#&lt;/a&gt; 尝试录制&lt;/h2&gt;
&lt;p&gt;不详细说了，我试了以下的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;手机内置录屏&lt;br&gt;
失败的原因很简单，手机内置的录屏音质不佳，更是只有单声道；显然我是不可能选择这个方式的。&lt;/li&gt;
&lt;li&gt;电脑模拟器&lt;br&gt;
同样失败；当时我用的是一众包装好的安卓模拟器，包括夜神、Mumu、联想手机助手等。失败的原因是，这些模拟器的音质同样不高，而且似乎只在游戏界面上才会发生，具体表现就是声音没有高频，12kHz 以上的频率全部被切除，听起来就像 96kbps 的电话音质一样。&lt;/li&gt;
&lt;li&gt;其它手机软件&lt;br&gt;
找了很久，找到一个能够读取原始 RAW 音频数据进而录屏的手机软件；但是这种方法有个很大的缺陷，就是它会同时把麦克风的声音混进去，而且无法分离；手机麦克风的噪音很大，非常影响听感，更何况环境噪声无处不在，不能实现完美的录制条件。禁用麦克风权限则所有声音都不能被录制，因此该方法 pass。&lt;br&gt;
…&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;初次解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#初次解决方案&#34;&gt;#&lt;/a&gt; 初次解决方案&lt;/h2&gt;
&lt;p&gt;最终，我用一个很奇怪的方法达成了目标：&lt;br&gt;
&lt;strong&gt;多屏协同。&lt;/strong&gt;&lt;br&gt;
对，就是华为手机支持的那个。当时我用的是荣耀 magic2 和 magicbook pro，多屏协同是很容易实现的。&lt;br&gt;
通过多屏协同，手机的声音直接在电脑上播放，而且延迟低音质高（相对）。&lt;br&gt;
随后在电脑上用 Au 录制，配上官方的视频画面，我就直接投稿到 b 站。&lt;/p&gt;
&lt;p&gt;但是没几天我就发现了被我忽略的问题，那就是多屏协同的音质同样不是最佳；它会切除 16kHz 以上的音频，导致听感近似 128kbps 的低质量音频（尽管在这首歌里似乎不明显，几乎没感觉音质有多差）。当然，那时我也没想到更好的办法，于是这个视频就一直放着，还逐渐收获了 1.1W 的播放量。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二次折腾&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二次折腾&#34;&gt;#&lt;/a&gt; 二次折腾&lt;/h2&gt;
&lt;p&gt;就在今天晚上，我在整理 b 站的各类信息和配置，无意间点进了创作中心，看到了视频的最新评论。有人问我是怎么获得高音质音频的，于是我就把这个过程说了一遍。&lt;br&gt;
但是这个时候，我决定要彻底解决问题，获取原始的最高音质音频；一直用着低质量音乐冒充高品质原声始终不太好，于是我又着手开始折腾。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重新尝试虚拟机&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微软的 WSA：失败，win10 没有成功启动&lt;/li&gt;
&lt;li&gt;VirtualBox 虚拟机：失败，音频要么呈现断断续续的极为难听的状态，要么就只有之前遇到过的低质量。&lt;br&gt;
此时我也已经明白，实际上模拟器音质不高基本上就是由于音频设备的原因，使用 Windows Audio Session+ICH AC97 能得到唯一流畅的声音输出，但质量低。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;聪明反被聪明误&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#聪明反被聪明误&#34;&gt;#&lt;/a&gt; 聪明反被聪明误&lt;/h2&gt;
&lt;p&gt;没错，自作聪明的结果就是我这样，折腾了两回一点用都没有。&lt;br&gt;
就在我放弃折腾准备关机睡觉的时候，我就忽然想到，为什么我不直接把手机的耳机孔输出连接到电脑的音频口呢？这样电脑直接就能接收到手机的音频输出，直接录制最原始的声音。&lt;/p&gt;
&lt;p&gt;这个方法听起来很蠢，但它就是最快捷最有效的方法。换了几条线，我发现只要把 Realtek 的声音设备设置为麦克风，关闭所有麦克风增强、效果和加强，配合一根 AUX（3.5mm 公对公）转接线就能直接在电脑上录音了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;b站的阴间操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#b站的阴间操作&#34;&gt;#&lt;/a&gt; b 站的阴间操作&lt;/h2&gt;
&lt;p&gt;终于得到了完美的录音，当然是要换源了，让后面的观众能享受到最佳的音质！&lt;br&gt;
一顿操作，把之前的视频替换音轨，重新上传。&lt;br&gt;
…&lt;br&gt;
 &lt;code&gt;10分钟后...&lt;/code&gt; &lt;br&gt;
 嗯，新上传的视频，音频直接被压缩到了 74kbps，听起来比电话还糊。&lt;br&gt;
b 站，😃&lt;br&gt;
时间已经比较晚了，我也不想继续折腾，直接投了个音频投稿然后关联过来，同时发新的文件下载链接置顶，就这样吧。反正问题算是解决了，就是这个结尾整的我有点脑溢血（&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/ipv6_toss/</guid>
            <title>记一次折腾电信ipv6中的各种问题</title>
            <link>https://zjxdiu.github.io/blog/ipv6_toss/</link>
            <category>网络</category>
            <category>游戏</category>
            <pubDate>Fri, 20 Jan 2023 21:37:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;阅前提示：本文约 5000 字，预计阅读时长 &amp;gt; 5 分钟。&lt;/p&gt;
&lt;h2 id=&#34;起因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#起因&#34;&gt;#&lt;/a&gt; 起因&lt;/h2&gt;
&lt;p&gt;由于想跟好友联机 minecraft，而使用 natfrp 做内网穿透时发现有很多问题，包括延迟高且不稳定、速率低、流量限制、高峰时期断连等。刚好想起来家里的网络已经被我启用了 ipv6，因此试图使用 ipv6 来直接对公网开放 minecraft 服务器。&lt;/p&gt;
&lt;h2 id=&#34;开始第一次尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始第一次尝试&#34;&gt;#&lt;/a&gt; 开始第一次尝试&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;当前状态：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;光猫使用路由模式，自主拨号并获取两种 ip 地址（除非特殊说明，否则以下简称 ip）&lt;/li&gt;
&lt;li&gt;无线路由器（下简称路由器）使用路由模式&lt;/li&gt;
&lt;li&gt;所有设备连接在路由器上，并能获取到 ip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/a941e7dad288e2bd65c297c76503f111.png&#34; alt=&#34;a941e7dad288e2bd65c297c76503f111.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当前问题：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先尝试外网直接连接服务器 ipv6，失败&lt;/li&gt;
&lt;li&gt;外网无法 ping 通任何内网主机&lt;/li&gt;
&lt;li&gt;光猫获取到的 ipv6 地址仍然无法通过外网 ping 通&lt;/li&gt;
&lt;li&gt;在光猫中设置端口映射或 DMZ 主机，无效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，上述内容已经花了我一下午来检查和排查；网上搜索相关内容，有人说&lt;s&gt;获取到的 ipv6 是 240e 开头的，说明是经过了 NAT（类似 ipv4，所以肯定访问不到）&lt;/s&gt;；但是这种说法显然有问题，首先 ipv6 只有在特殊环境下才需要 NAT，其次 2 开头的地址至少不是内网地址。&lt;br&gt;
另有说法称，运营商（我用的是电信）会用防火墙屏蔽入站流量，防止你开服务器。根据我的实验，这个说法是正确的。&lt;/p&gt;
&lt;p&gt;随后开始折腾，既然防火墙阻碍了我，那我关掉就好。&lt;br&gt;
但是现实很惨淡，运营商早就猜到你会搞这一手，所以直接不允许你关闭防火墙。&lt;br&gt;
这里包括了最后的那个防止 ICMP 包攻击，还有其他的防火墙直接不显示。&lt;br&gt;
&lt;img src=&#34;../_resources/7d186301818af5165a407c1751fb848c.png&#34; alt=&#34;7d186301818af5165a407c1751fb848c.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;换个地方拨号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#换个地方拨号&#34;&gt;#&lt;/a&gt; 换个地方拨号？&lt;/h3&gt;
&lt;p&gt;网上提供了一种解决思路，即光猫改桥接、使用路由器进行拨号；这样做有一些好处，例如路由器的性能更强、可以提供更快的网速，以及很高的可玩性、灵活性等等，这里直接把路由器换成软路由就能实现非常多的玩法，因此我就着手开始改桥接。&lt;/p&gt;
&lt;p&gt;改的过程实际上非常简单，找到宽带的账号密码，进入光猫的超级用户，然后直接改桥接即可。&lt;br&gt;
&lt;img src=&#34;../_resources/bc81d148f88500f57dbadabcf8080770.png&#34; alt=&#34;bc81d148f88500f57dbadabcf8080770.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;随后，将路由器设置为 PPPoE 拨号连接；这里就不放图了，各家路由器的配置流程都是一回事。&lt;br&gt;
关闭路由器的防火墙，现在，所有的设备又能重新获取到 ip，且具有公网 ipv6 地址。当然由于 Windows 防火墙的配置，需要关闭 Windows 的防火墙才能从外网 ping 通。&lt;br&gt;
大获全胜！网速也提升到了 570M（家里办理的 500M 宽带，如果直接从光猫拨号 + 路由，则速度最高 470M）&lt;br&gt;
&lt;img src=&#34;../_resources/cbdb76297f0af4d4d3837f421060eb67.png&#34; alt=&#34;cbdb76297f0af4d4d3837f421060eb67.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;同时，Minecraft 也能正常从外网通过 ipv6 连接，看起来一切完美。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;核心问题网页无法访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#核心问题网页无法访问&#34;&gt;#&lt;/a&gt; 核心问题：网页无法访问&lt;/h2&gt;
&lt;p&gt;一切完美？当然是不可能的。一定会出问题，而且是大问题。&lt;br&gt;
配置好 ipv6 之后，一开始所有设备工作正常，网速和解析速度起飞。&lt;br&gt;
然后，用了半个小时左右，问题开始逐步显现。&lt;br&gt;
最开始，我在网上搜索一个 Windows 方面的配置问题，并且点进去了一个博客园的链接。然后，网页并没有按照我预想中的那样飞快加载，而是不断转圈。&lt;br&gt;
最后：&lt;br&gt;
&lt;img src=&#34;../_resources/84c01f9cc1ebf56595e7d025fc4a0617.png&#34; alt=&#34;84c01f9cc1ebf56595e7d025fc4a0617.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;一开始我以为这是必应的中转链接出现问题了（百度日常），因为点击必应的搜索结果并不是直接访问目标网址，而是先通过一个必应的链接重定向到目标。这个重定向有时候会失败，是正常的。但是，我直接访问目标网址时，居然也不能进去，这就非常奇怪了。&lt;br&gt;
这时候我还是乐观的心态，认为是博客园的服务器出了问题，也没有去其它设备上尝试。但我仍然重视了这个问题，并立即去搜索解决方法。因为是开了路由器拨号 + ipv6 之后才出现的问题，所以查找方向也很明确了。结果，就在我查找的过程中，发现了更多的问题。&lt;br&gt;
百度经验、百度知道、百度贴吧、知乎… 这些网站一个接一个地挂掉；有时候网站一开始能正常访问，再开的时候就加载不出 JS 和 CSS（变成了没有渲染的样式，仅限知乎），然后就是一样的不响应。症状跟博客园完全一致，控制台里没有任何有效信息，只有一个响应超时。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;先恢复正常访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先恢复正常访问&#34;&gt;#&lt;/a&gt; 先恢复正常访问&lt;/h3&gt;
&lt;p&gt;一通摸索之后，我找到了暂时恢复的方法：在网卡选项里禁用 ipv6（Internet 协议版本 6）。&lt;br&gt;
禁用后，所有网页恢复正常，但这显然不可取，因为我的目的就是使用 ipv6，而禁用它也就丧失了所有 ipv6 能力。&lt;br&gt;
需要注意的是，现在出问题的网站都不是纯 ipv6 站点，有些是纯 ipv4 站点，但双栈域名居多。这时候访问纯 ipv6 网站是全部成功的，ipv6 测试也是全绿通过，并且无论何种类型的网站都有大量能成功访问的。&lt;/p&gt;
&lt;h3 id=&#34;退一步试试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#退一步试试&#34;&gt;#&lt;/a&gt; 退一步试试&lt;/h3&gt;
&lt;p&gt;退一步，指的就是我找到一种方法，让浏览器只使用或优先使用 ipv4 进行访问。&lt;br&gt;
因为出问题的只有浏览器，我电脑里其它软件全都正常运行。&lt;br&gt;
&lt;em&gt;后续补充：今天发现 Windows 版的微信也不能正常使用，二维码加载不出来，禁用 ipv6 后恢复。&lt;/em&gt;。&lt;br&gt;
但是，网上相关的教程极少甚至没有，偶有几个是针对 Firefox 或 chrome 的，而我使用的是 edge；就算我能参考 chrome，教程也是针对 Linux 而非 Windows。&lt;/p&gt;
&lt;h3 id=&#34;再退一步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#再退一步&#34;&gt;#&lt;/a&gt; 再退一步&lt;/h3&gt;
&lt;p&gt;好的，如果浏览器不行，那我就找个方法让整个操作系统都优先使用 ipv4。&lt;br&gt;
微软提供了一个文档，通过&lt;a href=&#34;https://learn.microsoft.com/en-US/troubleshoot/windows-server/networking/configure-ipv6-in-windows&#34;&gt;修改注册表的方法&lt;/a&gt;来实现全局优先 ipv4、禁用 ipv6、优先 ipv6 等等。&lt;br&gt;
一看到这里，我立即兴奋地尝试了。改了注册表，重启，访问：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ERR_TIMED_OUT&lt;/code&gt;  .png&lt;/p&gt;
&lt;p&gt;好，居然没用。微软，不愧是你。&lt;br&gt;
重启很多次无效，当时已经半夜 2:30，我没有了折腾的心情，只想赶紧睡觉。&lt;/p&gt;
&lt;h2 id=&#34;第一次折腾失败&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一次折腾失败&#34;&gt;#&lt;/a&gt; 第一次折腾失败&lt;/h2&gt;
&lt;p&gt;网上又找了很多相同症状的用户，解决方案要么是改注册表，要么是说路由器兼容性有问题。&lt;br&gt;
好吧，反正跟我联机的同学也不是很在意，natfrp 似乎还能继续用用。&lt;br&gt;
于是，彻底宣告失败，我重新改回了光猫拨号、路由桥接，随后所有网络恢复正常（除了外网还是不能访问这里的所有 ipv6；当然，也包括 ipv4，因为有 NAT）。&lt;/p&gt;
&lt;p&gt;这就结束了吗？怎么可能，不搞到好用我是不会罢休的。&lt;br&gt;
于是，第二天，我又开始了新一轮的折腾。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二次尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二次尝试&#34;&gt;#&lt;/a&gt; 第二次尝试&lt;/h2&gt;
&lt;p&gt;重新尝试，同样的光猫改桥接，同样的路由器拨号。同样的正常 ipv6 公网访问，但是这一次似乎是运气比较好，网页访问全部正常使用，并且坚持了至少 4 个小时。&lt;br&gt;
中途离家 4 小时，回来之后，惊喜地发现，这些网页又打不开了 😃&lt;br&gt;
这时候我就已经明白，无论怎么修改电脑或者路由器配置都无效，于是没有再做尝试，转而对现在的情况进行分析，并希望通过其它方法解决需求。&lt;/p&gt;
&lt;h3 id=&#34;转机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#转机&#34;&gt;#&lt;/a&gt; 转机&lt;/h3&gt;
&lt;p&gt;在我整理思路的时候，我意识到，实际上我只需要服务器一台电脑能够获取正常入站的 ipv6 地址（正常的 ipv6）即可，其余设备甚至根本不需要启用 ipv6。这时候，我首先想到的就是：&lt;/p&gt;
&lt;h4 id=&#34;一号多拨&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一号多拨&#34;&gt;#&lt;/a&gt; 一号多拨&lt;/h4&gt;
&lt;p&gt;一号多拨，指的是我通过同一个光猫，使用同一个宽带账号，分别在两台设备上进行拨号。&lt;br&gt;
我的最初想法是，服务器电脑直连光猫并自己拨号获取正常的 ipv6 地址，同时路由器也自己拨号，但只启用 ipv4。&lt;br&gt;
网上搜索发现，这种方法当然是可行的，前提是运营商支持多拨。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;折腾中&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;没有任何侥幸，拨号失败。电脑上尝试第二次拨号时直接返回错误 629。&lt;/p&gt;
&lt;p&gt;再换一种角度，重新分析我的需求。服务器能使用正常的 ipv6，同时其余设备仅需要 ipv4（最多需要 ipv6 内网而非公网访问）。因此，我做了如下操作，来使得二者兼顾。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;最终如何解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最终如何解决&#34;&gt;#&lt;/a&gt; 最终如何解决&lt;/h2&gt;
&lt;p&gt;如果你的需求和遇到的问题跟我完全一样，那么也许可以参考我的方法来临时解决。&lt;br&gt;
&lt;strong&gt;提示：最终的解决方案也并不完美，只不过暂时保证了两边可以都解决主要矛盾&lt;/strong&gt;&lt;br&gt;
以下是我的解决方案：&lt;/p&gt;
&lt;h3 id=&#34;1-将路由器的内网ipv6地址分发从无状态改为有状态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-将路由器的内网ipv6地址分发从无状态改为有状态&#34;&gt;#&lt;/a&gt; 1. 将路由器的内网 ipv6 地址分发从无状态改为有状态。&lt;/h3&gt;
&lt;p&gt;无状态获取指的是机器自己配置地址，然后通过 NDP 等方式确定地址有效性即可；有状态获取类似 DHCP，不过分配的地址是 ipv6。&lt;br&gt;
这一步解决了手机联网的问题；由于我的网络环境中手机为主要设备，而安卓系统并不支持通过 DHCPv6 进行有状态获取 ipv6 地址；于是所有的手机都只能通过 ipv4 联网，解决了所有上网问题。&lt;/p&gt;
&lt;h3 id=&#34;2-为电脑配置虚假或者无效的ipv6地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-为电脑配置虚假或者无效的ipv6地址&#34;&gt;#&lt;/a&gt; 2.  为电脑配置虚假或者无效的 ipv6 地址&lt;/h3&gt;
&lt;p&gt;这是我在测试的时候忽然想到的主意，既然 ipv4 地址在手动配置错误的情况下无法联网，那么 ipv6 应该也是一样的。&lt;br&gt;
ipv6 中同样有很多保留地址，例如 &lt;code&gt;fe80&lt;/code&gt;  开头的地址表示本地链路地址，无法进行跨子网路由，因此给我自己的电脑配置一个 &lt;code&gt;fe80::1&lt;/code&gt;  的地址即可。&lt;br&gt;
配置后，网卡状态中 IPv6 连接变为&lt;strong&gt;无 Internet 访问权限&lt;/strong&gt;，使用 &lt;code&gt;ipconfig /all&lt;/code&gt;  查看 IP 地址，发现手动配置的 ipv6 地址变成了&lt;strong&gt;本地链接 IPv6 地址&lt;/strong&gt;。&lt;br&gt;
&lt;img src=&#34;../_resources/054913f5d395b1e809f0d7830e64c948.png&#34; alt=&#34;054913f5d395b1e809f0d7830e64c948.png&#34;&gt;&lt;br&gt;
 此外，这里网卡仍然获取到了一个 IPv6 地址，但后面提示（&lt;strong&gt;复制&lt;/strong&gt;），检查其地址发现这个地址是我的服务器电脑的公网 ipv6 地址（因此在此处打码作保护）；这可能是一些其它方面的机制，但并不影响服务器和我的电脑的正常工作。同时，由于内网 ipv6 地址被正常配置，我仍然可以通过内网 ipv6 来访问服务器（包括文件服务器、网页服务器、minecraft 和远程桌面）。&lt;br&gt;
这一步解决了环境中主要的电脑设备：我自己的使用需求。当然没有完全解决，纯 ipv4 模式下访问部分双栈网站时速度还是比较慢，但能够正常使用已经是极其难得了。&lt;/p&gt;
&lt;h3 id=&#34;3-为windows-11配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-为windows-11配置&#34;&gt;#&lt;/a&gt; 3. 为 Windows 11 配置&lt;/h3&gt;
&lt;p&gt;环境中存在另一台常用的电脑，而它搭载的是 Windows 11 家庭版。&lt;br&gt;
在 win11 下可以执行相同的步骤进行配置，只不过需要多出一个步骤：&lt;strong&gt;你需要在系统设置中手动设置 ipv6 DNS，而不能使用自动获取。&lt;/strong&gt;&lt;br&gt;
这一步是因为，即便手动配置了 ipv6 地址，win11 似乎也不会立即使用，而是先试图通过 DHCP 等方法获取 ipv6 地址以及 DNS 服务器等；而在自动获取 DNS 的过程中，路由器很可能就为它分配了一个 ipv6 地址，导致我们自己设置的地址完全变成内网地址，而无法实现目的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结语&#34;&gt;#&lt;/a&gt; 结语&lt;/h2&gt;
&lt;p&gt;至此，全部流程结束，解决方案全部执行。服务器正常接受公网入站流量，其余设备配置后均能实现正常上网。&lt;/p&gt;
&lt;p&gt;但是，我并不对现在的解决方案满意。原因很简单，我开 ipv6 不仅是为了服务器使用，更是为了提高日常上网体验，同时接轨最新技术（虽然 ipv6 都是 12 年前的玩意了）；现在虽然解决了问题，但并未达成全部目的，因为除了服务器主机以外没有设备能够正常使用 ipv6 的。这个方法顶多也就临时用用，实际上我也就这一个寒假的需求，假期结束返校前肯定会恢复光猫拨号的，因为服务器主机之后只作为内网打印服务器，不再有公网访问需求。此外，每次新加一台电脑，都需要这样设置一遍无效的 ipv6 地址，以便正常访问网页。&lt;br&gt;
所以，整体看下来，其实只是在两边的矛盾中取了一个居中妥协的值，为主要矛盾作了让步。我也不是每天都会折腾网络，更多时候还是希望它日常使用能稳定；但我又不希望放弃服务器的公网访问，因此这两者就是核心问题，而最终的方案也就向这两个问题进行妥协。&lt;br&gt;
Anyway，反正问题算是解决了，但愿 ipv6 的部署进度还能快一点吧（&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;明天就是除夕了，浅放一张 AI 画的胡桃吧，祝大家新年快乐！&lt;br&gt;
&lt;em&gt;胡桃没画成，人要么太大要么太小，随便搞了个背景算了（）&lt;/em&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/7c8d8e5459a9f8cd83c33281ca1aa262.png&#34; alt=&#34;7c8d8e5459a9f8cd83c33281ca1aa262.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E5%9B%BE%E5%BA%8A/</guid>
            <title>图床</title>
            <link>https://zjxdiu.github.io/blog/%E5%9B%BE%E5%BA%8A/</link>
            <pubDate>Mon, 02 Jan 2023 22:21:15 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;此处用于保存一些图片&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#此处用于保存一些图片&#34;&gt;#&lt;/a&gt; 此处用于保存一些图片&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/fc3ae10d48f0ad79151951f2ffa88d3c.png&#34; alt=&#34;fc3ae10d48f0ad79151951f2ffa88d3c.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/Hello_2023/</guid>
            <title>你好，2023</title>
            <link>https://zjxdiu.github.io/blog/Hello_2023/</link>
            <category>日常</category>
            <pubDate>Sun, 01 Jan 2023 09:46:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;向过去的 2022 说再见！&lt;br&gt;
年度总结将会单独放在另一篇文章中（后续更新链接）&lt;br&gt;
今天，让我们先为新的一年到来而庆贺&lt;br&gt;
祝大家元旦快乐！&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;Lay down forever and ever inside my arms
请依偎在我怀
Shine now forever and ever I&amp;#x27;ll stay with you
绽放华彩吧，我将寸步不离
It&amp;#x27;s magic, magic, magic
有一种魔力
when you are here
当你在眼前
It&amp;#x27;s magic, magic, magic
有一种魔力
when you&amp;#x27;re near
当你在身畔&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;歌词来源：Thomas Bergersen,Kimera Morrell - Magic（&lt;a href=&#34;http://music.163.com/song?id=1834324494&amp;amp;userid=438146708&#34;&gt;点击收听&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/1a92108b49baab2f8a97603f1b04453d.png&#34; alt=&#34;1a92108b49baab2f8a97603f1b04453d.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%841/</guid>
            <title>一段话的风格改编之旅</title>
            <link>https://zjxdiu.github.io/blog/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%841/</link>
            <category>日常</category>
            <category>脑洞</category>
            <pubDate>Sat, 17 Dec 2022 22:55:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在群里看到一张图：&lt;br&gt;
（很长，谨慎观看）&lt;br&gt;
觉得很有意思，所以来尝试一手&lt;br&gt;
&lt;img src=&#34;../_resources/dd3a38e57001d9152146cbdaf57f5e79.png&#34; alt=&#34;dd3a38e57001d9152146cbdaf57f5e79.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;zjxdiu 写作风格：&lt;br&gt;
平淡的一天，我照常乘坐拥挤的地铁下班回家。一成不变的枯燥工作使我身心俱疲，但更糟心的事情，正在发生。&lt;br&gt;
那看上去似乎已是中老年的身影逐渐靠近，并不瘦弱的身躯似乎隐藏着对全世界的恶意。他走到我的身边，停下了脚步。&lt;br&gt;
“没看到这里写着爱心座位吗？” 一边说着，他举起手上的雨伞就是一次猛戳。&lt;br&gt;
我避之不及，匆忙间只躲过了伞柄尖端，雨水依旧顺着伞面滑落到我的衣服上。渗透的雨水寒冷刺骨，却远不及我心中的冷意。&lt;br&gt;
起身让开了座位，主动忽略了身旁的异样眼光，我只是默然想道：&lt;br&gt;
“终有一日，施加于他人的善与恶，会再次回到自己身边。”&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;草（指草本植物），真的没写过第一人称，也没写过现实内容，buff 拉满了，感觉跟自己的真实风格差距有亿点大。&lt;br&gt;
还有想尝试的还能继续留言（&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E5%94%A4%E5%A2%83%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/</guid>
            <title>【计划长期更新】记录自己的编程思路与想法，实现成功后更新</title>
            <link>https://zjxdiu.github.io/blog/%E5%94%A4%E5%A2%83%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/</link>
            <category>开发</category>
            <category>游戏引擎</category>
            <pubDate>Wed, 14 Dec 2022 22:32:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;前言：&lt;br&gt;
由于大学事务繁重，很多时候想到了一些功能的实现思路也没有时间及时验证，所以计划开一个帖子存放这些想法。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1. 音游主体玩法逻辑&lt;br&gt;
音符数据点存放：xml 文件&lt;br&gt;
存储内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;音符时间：音符应被打击时，距离音乐开始时的毫秒数&lt;/li&gt;
&lt;li&gt;音符类型（单点、长按）（暂时不考虑）&lt;/li&gt;
&lt;li&gt;轨道编号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现逻辑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;场景开始时，生成音符；若数量过多，可以考虑分节生成。音符带实例变量，存储其音符时间。&lt;/li&gt;
&lt;li&gt;音乐预加载、延迟播放；开始播放同帧启动计时器（高精度计时方法详见&lt;a href=&#34;https://bbs.evkworld.cn/topic/2590/&#34;&gt; https://bbs.evkworld.cn/topic/2590/&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;按下按键时（上升沿触发）：
&lt;ul&gt;
&lt;li&gt;记录按键时间（可用数组处理）&lt;/li&gt;
&lt;li&gt;检查该轨道上最近的音符，获取其音符时间，计算差值。
&lt;ul&gt;
&lt;li&gt;若差距过大，打击无效；&lt;/li&gt;
&lt;li&gt;若差距较大，判断为 miss；&lt;/li&gt;
&lt;li&gt;根据差值判断等级（Perfect、good、OK）&lt;/li&gt;
&lt;li&gt;一旦判断成功，销毁该音符&lt;/li&gt;
&lt;li&gt;若差值为负，则打击时间比音符时间晚；
&lt;ul&gt;
&lt;li&gt;计算差值、判断等级&lt;/li&gt;
&lt;li&gt;miss 阈值应低于正差值。&lt;/li&gt;
&lt;li&gt;（可以避免两个紧挨着的音符总是被判断到后面的那个）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;越线过久未打击：
&lt;ul&gt;
&lt;li&gt;采用屏幕外的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E8%A1%A5%E6%A1%A31/</guid>
            <title>【补档】唤境游戏如何显示帧率？详解性能相关内容</title>
            <link>https://zjxdiu.github.io/blog/%E8%A1%A5%E6%A1%A31/</link>
            <category>开发</category>
            <category>游戏引擎</category>
            <pubDate>Mon, 05 Dec 2022 22:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;因群里有成员对这方面存在疑问，所以写一篇文章详细解释下游戏内性能相关。&lt;br&gt;
需要注意的是，本人对于唤境中这些内容的最具体理解未必到位，因此可能出现一些技术细节上的错误，希望大佬能指出错误，感激不尽！&lt;br&gt;
为了保证一般开发者也能看得懂，文章会尽量避免非常专业和硬核的描述，相应地就会降低严谨性。如果有兴趣深究，请查找更专业的资料。&lt;br&gt;
此外，本文并非是针对唤境游戏的性能优化而写的，如果您的引擎或者制作的游戏出现卡顿，请前往 b 站查看小嗦大佬的教程。&lt;br&gt;
传送门：&lt;a href=&#34;https://www.bilibili.com/video/BV1wg411E7oF&#34;&gt;https://www.bilibili.com/video/BV1wg411E7oF&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一-性能相关概念基础内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-性能相关概念基础内容&#34;&gt;#&lt;/a&gt; 一、性能相关概念（基础内容）&lt;/h2&gt;
&lt;p&gt;通常情况下，我们会通过几个方面来评估一个游戏运行的性能表现，分别是帧率、帧生成时间、CPU 占用、GPU 占用、内存占用、显存占用等。&lt;/p&gt;
&lt;h3 id=&#34;1-帧率-fps&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-帧率-fps&#34;&gt;#&lt;/a&gt; 1. 帧率 / FPS&lt;/h3&gt;
&lt;p&gt;游戏之所以能呈现动态的画面，是因为它会以一个很快的速度生成画面，每秒几十张甚至上百张，其中每个画面就被称为一 “帧” 。因此，帧是游戏画面在时间上的最小单位。&lt;br&gt;
于是，我们有了帧率的概念。帧率，就是每秒钟游戏生成的帧数量。很明显的，帧率越高，我们肉眼感觉到的画面就越流畅，反之则越卡顿。当帧率为 0 时，游戏就停止在一张静态的图片上。&lt;br&gt;
一般而言，当帧率达到 60 时，人眼观察到的画面就可以称为 “比较流畅” 了。&lt;/p&gt;
&lt;h3 id=&#34;2帧生成时间或帧间隔-frametime&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2帧生成时间或帧间隔-frametime&#34;&gt;#&lt;/a&gt; 2. 帧生成时间（或帧间隔）/ FRAMETIME&lt;/h3&gt;
&lt;p&gt;有了帧率的概念，我们就可以引入帧生成时间的概念了。&lt;br&gt;
游戏引擎每生成一帧画面，都需要消耗一定的时间，这个时间就称为帧生成时间。&lt;br&gt;
帧生成时间波动是造成瞬间卡顿的原因之一。设想一个极端情况，在运行的某一秒里，游戏花了 0.9 秒来渲染第一帧，然后在剩下 0.1 秒里渲染了剩下的 59 帧。这时候的平均帧率还是 60，但是你在玩的时候就会明显感觉到游戏发生了一次剧烈的卡顿，因为这 0.9 秒的时间内游戏处于静止状态。&lt;br&gt;
帧生成时间和间隔的定义，严格来说并不是完全一致的，但本文并不是进行画面技术研究，所以暂且认为它们是同一个概念。&lt;/p&gt;
&lt;h3 id=&#34;3cpu占用-cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3cpu占用-cpu&#34;&gt;#&lt;/a&gt; 3.CPU 占用 / CPU&lt;/h3&gt;
&lt;p&gt;在计算机中，CPU 负责通用计算，也就是任何计算理论上都可以由 CPU 完成。在游戏中，控制游戏系统运行、通过公式计算数据、运行函数等都是由 CPU 完成的。最开始的时候，游戏画面的渲染也是由 CPU 完成的，但后来人们发现 CPU 难以胜任这一要求，于是将这个工作交由 GPU 完成。有关这一段历史的发展，详见 https://www.bilibili.com/video/BV1Hb41177JB&lt;br&gt;
 对于现代电脑和手机来说，它们的 CPU 性能都相当强大，可以完成非常密集的运算需求。但它们的性能也不是无限的，而且在手机、笔记本电脑上，CPU 是耗电量非常大的元件。所以，CPU 会直接影响游戏的性能表现，降低 CPU 的占用率也可以有效提高游戏运行的效率，以及在低端设备上成功运行的可能性。&lt;/p&gt;
&lt;h3 id=&#34;4gpu占用-gpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4gpu占用-gpu&#34;&gt;#&lt;/a&gt; 4.GPU 占用 / GPU&lt;/h3&gt;
&lt;p&gt;前面提到了，GPU 是用来替代 CPU 来完成画面渲染工作的硬件。所以，GPU 是离游戏实际画面最近的硬件，因为游戏画面就是由它生成的。&lt;br&gt;
GPU 负责的内容就是渲染画面，例如显示图片、文字等。&lt;br&gt;
对于唤境来说，由于唤境只是 2D 游戏引擎，因此对于现代 GPU 来说压力比较低，但还是存在运行效率过低的情况。&lt;br&gt;
有关 GPU 运行解析的内容请见官方教程&lt;a href=&#34;https://evkworld.cn/wiki/58&#34;&gt; https://evkworld.cn/wiki/58&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;5显存占用-vram-video-memory-image-memory等&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5显存占用-vram-video-memory-image-memory等&#34;&gt;#&lt;/a&gt; 5. 显存占用 / (VRAM、VIDEO MEMORY、IMAGE MEMORY 等)&lt;/h3&gt;
&lt;p&gt;显存，又称显示内存、显卡内存、图形内存、视频内存等，是显卡用来储存图像信息的临时空间。&lt;br&gt;
对于集成显卡（例如手机）而言，显存就是从内存中分出来的部分；对于独立显卡（例如高性能电脑）而言，显存是单独集成在显卡中的一个存储器。所以，当游戏在手机上运行的时候，游戏会同时消耗两份内存空间，一部分用于程序运行，另一部分充当显存。因此，如果您的游戏在电脑上运行很正常，而在低端手机上就无法运行或者特别卡顿，则有可能是因为游戏消耗了较多的显存和内存。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二-唤境中跟性能有关的表达式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-唤境中跟性能有关的表达式&#34;&gt;#&lt;/a&gt; 二、唤境中跟性能有关的表达式&lt;/h2&gt;
&lt;p&gt;唤境引擎并没有提供性能监控相关的组件和能力，但可以通过表达式获取到性能数据。&lt;br&gt;
所有相关表达式都在系统部分中。&lt;/p&gt;
&lt;h3 id=&#34;1帧率&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1帧率&#34;&gt;#&lt;/a&gt; 1. 帧率&lt;/h3&gt;
&lt;p&gt;表达式：fps&lt;br&gt;
 刷新频率：每秒 1 次&lt;br&gt;
返回值类型：整数&lt;br&gt;
建议使用方法：直接通过表达式获取帧率即可。&lt;br&gt;
&lt;img src=&#34;../_resources/ba2e311e9e59cfd649509ccc2fa99a0b.png&#34; alt=&#34;ba2e311e9e59cfd649509ccc2fa99a0b.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2帧生成时间帧间隔&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2帧生成时间帧间隔&#34;&gt;#&lt;/a&gt; 2. 帧生成时间（帧间隔）&lt;/h3&gt;
&lt;p&gt;表达式：dt&lt;br&gt;
 刷新频率：每帧 1 次&lt;br&gt;
返回值类型：单精度浮点数，即 6 位小数&lt;br&gt;
（当测量单帧间隔时会返回 10 位小数）&lt;br&gt;
其它：引擎内描述为 “时间间隔”&lt;br&gt;
 建议使用方法：先将数据乘以 1000，然后使用 roundto () 将其化简到 1-3 位小数，最后加上单位 “ms”（毫秒），即可得到友好的数字展示。&lt;br&gt;
&lt;img src=&#34;../_resources/fb34db0b029a4d27e4ad593e8cc363ac.png&#34; alt=&#34;fb34db0b029a4d27e4ad593e8cc363ac.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3cpu占用cpu时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3cpu占用cpu时间&#34;&gt;#&lt;/a&gt; 3.CPU 占用（CPU 时间）&lt;/h3&gt;
&lt;p&gt;表达式：cpuutilisation&lt;br&gt;
 刷新频率：每秒 1 次&lt;br&gt;
其它：引擎内描述为 “CPU 在游戏中消耗的时间”&lt;br&gt;
 返回值类型：双精度浮点数，即 18 位小数。&lt;br&gt;
建议使用方法：先将数据乘以 100，然后使用 roundto () 将其简化到 1-2 位小数，最后加上百分比符号 “%”，即可得到友好的数字展示。&lt;br&gt;
&lt;img src=&#34;../_resources/68f1e9a186fe3b6660d1936f792cefe6.png&#34; alt=&#34;68f1e9a186fe3b6660d1936f792cefe6.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4gpu占用渲染消耗时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4gpu占用渲染消耗时间&#34;&gt;#&lt;/a&gt; 4.GPU 占用（渲染消耗时间）&lt;/h3&gt;
&lt;p&gt;表达式：gpuutilisation&lt;br&gt;
 刷新频率：每秒 1 次&lt;br&gt;
其它：引擎内描述为 “GPU 在游戏中消耗的时间”&lt;br&gt;
 返回值类型：9 位小数。&lt;br&gt;
建议使用方法：与 CPU 占用相同。&lt;br&gt;
&lt;img src=&#34;../_resources/596e4d2898ce7eb638dca60f52193e12.png&#34; alt=&#34;596e4d2898ce7eb638dca60f52193e12.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5显存占用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5显存占用&#34;&gt;#&lt;/a&gt; 5. 显存占用&lt;/h3&gt;
&lt;p&gt;表达式：imagememoryusage&lt;br&gt;
 刷新频率：每帧 1 次&lt;br&gt;
返回值类型：9 位小数。&lt;br&gt;
建议使用方法：直接通过表达式获取即可。&lt;br&gt;
&lt;img src=&#34;../_resources/4b1452908420640a6ac75af4bb2b156e.png&#34; alt=&#34;4b1452908420640a6ac75af4bb2b156e.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三-制作性能监控窗口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-制作性能监控窗口&#34;&gt;#&lt;/a&gt; 三、制作性能监控窗口&lt;/h2&gt;
&lt;p&gt;光了解了上面所有的信息，但如果不会用，那就都是白搭。接下来，我会一步步解释如何制作游戏内的性能监控悬浮窗。&lt;/p&gt;
&lt;p&gt;1. 打开游戏项目，新建对象：一个文本、一个精灵和一个按钮，精灵的贴图替换成一张长方形图片即可&lt;br&gt;
&lt;img src=&#34;../_resources/799e625f09a212d9e980f8cff86b3a2e.png&#34; alt=&#34;799e625f09a212d9e980f8cff86b3a2e.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/c6d47b1f64216db3965c811b0afdb06e.png&#34; alt=&#34;c6d47b1f64216db3965c811b0afdb06e.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 新建几个全局变量，“启用测量”、“悬浮窗 x”、“悬浮窗 y”。其中，第一个是布尔类型变量，是必需的；后两个是数值类型变量，不是必需的。&lt;br&gt;
后两个的初始值不建议设为 0，应该根据你选择的默认位置来设置。&lt;br&gt;
&lt;img src=&#34;../_resources/a974999ff46bbac77137dbfc7e819c24.png&#34; alt=&#34;a974999ff46bbac77137dbfc7e819c24.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 新建一个图层组 “悬浮窗”，设置为全局图层组，然后将精灵、文本和按钮拖入该图层组中，调整文本和精灵的大小及属性，文本选择左对齐、上下居中对齐，大小跟精灵差不多一样大就行&lt;br&gt;
&lt;img src=&#34;../_resources/7cf2b2e120c5da549d4cc1c5b5008a36.png&#34; alt=&#34;7cf2b2e120c5da549d4cc1c5b5008a36.png&#34;&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/2b26784c58f0c77a067d4447edbd42b4.png&#34; alt=&#34;2b26784c58f0c77a067d4447edbd42b4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 为文本添加拖拽和定时器能力，为精灵添加绑定能力&lt;br&gt;
&lt;img src=&#34;../_resources/f2cc5d66755ee2eb24d199e7c453ae46.png&#34; alt=&#34;f2cc5d66755ee2eb24d199e7c453ae46.png&#34;&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/1751f48b11198c44c52e8e9cf67c033d.png&#34; alt=&#34;1751f48b11198c44c52e8e9cf67c033d.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 新建一条全局事件表，名称为 “性能监控窗口”，或者任何你喜欢的名字。&lt;br&gt;
&lt;img src=&#34;../_resources/3f181abb7a3ad49aaf2f1b81b178906a.png&#34; alt=&#34;3f181abb7a3ad49aaf2f1b81b178906a.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 开始写事件。可以参考我下面的这种设计方案。&lt;br&gt;
核心思路：&lt;br&gt;
（1）当 “启用测量” 变量为 “真” 时，显示文本和精灵，否则隐藏；注意，不要重复触发，可以加入一个触发器（例如 “仅触发一次”）来解决；&lt;br&gt;
（2）制作好看的文本排版；&lt;br&gt;
（3）避免每帧检测和每帧改变文本；&lt;br&gt;
（4）（可选）实现悬浮窗的拖动，以及位置记忆。&lt;br&gt;
&lt;img src=&#34;../_resources/7b2602a886c2529d6189504f42ae5ff3.png&#34; alt=&#34;7b2602a886c2529d6189504f42ae5ff3.png&#34;&gt;&lt;br&gt;
 文本内容供参考：&lt;br&gt;
“帧率：” &amp;amp; fps &amp;amp; newline &amp;amp; “CPU：” &amp;amp; roundto (cpuutilisation*100,1) &amp;amp; “%” &amp;amp; newline &amp;amp; “显存：” &amp;amp; imagememoryusage &amp;amp; “mb”&lt;/p&gt;
&lt;p&gt;7. 在每个你希望有监控悬浮窗的场景下都新建一个叫做 “悬浮窗” 的图层组，不需要放入任何内容，因为你之前已经选中了全局事件表。&lt;br&gt;
然后将刚才写的全局事件表应用于每个你希望有悬浮窗的场景。&lt;br&gt;
&lt;img src=&#34;../_resources/9de754a5f74cef3b19451317d1597aa9.png&#34; alt=&#34;9de754a5f74cef3b19451317d1597aa9.png&#34;&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/c383bbc3f3d2d8ddb921774cdc2be8c1.png&#34; alt=&#34;c383bbc3f3d2d8ddb921774cdc2be8c1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 检查效果&lt;br&gt;
&lt;img src=&#34;../_resources/50611b15f85e9e7e7164bff667699f0d.png&#34; alt=&#34;50611b15f85e9e7e7164bff667699f0d.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 可额外优化的内容&lt;/p&gt;
&lt;p&gt;拖拽能力没有进行区域限制，可以直接把悬浮窗拖到屏幕外，如何解决？&lt;br&gt;
・提示：只需要使用一个能力即可解决。&lt;/p&gt;
&lt;p&gt;事件表里还有可以进一步优化的内容？&lt;br&gt;
・提示：绑定能力。&lt;/p&gt;
&lt;h2 id=&#34;四-总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-总结&#34;&gt;#&lt;/a&gt; 四、总结&lt;/h2&gt;
&lt;p&gt;通过这一篇文章的解析和教学，你应该对唤境游戏的性能及其监控方法有了一定的了解。&lt;br&gt;
在多数情况下，唤境游戏其实并不需要这么多高级的技术细节，但这类功能可以给你的游戏添砖加瓦，起到锦上添花的作用。&lt;br&gt;
文章撰写仓促，部分内容做不到非常细致和详尽，也可能有错误，欢迎大佬前来指正！&lt;/p&gt;
&lt;p&gt;额外优化内容：&lt;br&gt;
（1）给文本和精灵分别添加 “边界限制” 能力即可；&lt;br&gt;
（2）在启用测量为假的时候，给精灵添加一条动作：“取消绑定”&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/S.O.S/</guid>
            <title>触动心灵的歌声：S.O.S</title>
            <link>https://zjxdiu.github.io/blog/S.O.S/</link>
            <category>分享</category>
            <pubDate>Sat, 03 Dec 2022 10:49:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a href=&#34;http://music.163.com/song?id=28279678&amp;amp;userid=438146708&#34;&gt;点击收听：S.O.S&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/5606f288e66c105e4ddd37b5b8a9631b.png&#34; alt=&#34;5606f288e66c105e4ddd37b5b8a9631b.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;意志正在消沉，希望正在燃尽。&lt;br&gt;
忽然听到了这样一个声音，她将我唤醒，又让我陷入无止尽的幻想。她给予我无穷无尽的力量，却又让我更深地沉醉。&lt;br&gt;
在我有记忆以来，这是我听过的最美的歌声。她在歌曲中只出现在副歌部分，但那份空灵，蕴含在声音中的情感，却是狠狠地撞击我的心脏。我的灵魂发出呐喊，却无法挣脱，甘愿自己被她迷醉。&lt;br&gt;
她的声音，几乎完美地符合我的审美感知。我相信，也有更多人会被她的声音吸引。&lt;br&gt;
并不是很确定她的声音是否是歌曲信息中的那个歌手，但我确信自己不会忘记她带给我的感觉。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;她是海中的精灵，也是海洋之神的化身。&lt;br&gt;
她的呼吸，会化作海浪和潮汐。挥手轻舞，就能平息一场海啸。从没有人见过她，但每个被她庇护的人都会梦到她。&lt;br&gt;
传说，在大海的中央，会有一位看不见的海妖。每当船只丢失航线、误入她的领地时，她会唱起来自海洋的歌声，保护船只免遭暗礁和巨石的侵袭。&lt;br&gt;
但是，这并不是无条件的施舍。&lt;br&gt;
时常有游船丢失方向经过这里。其上的许多人类在得知自己可能无法抵达彼岸后，露出无尽的丑态。&lt;br&gt;
人们将自己的行为解释为末日前最后的狂欢。&lt;br&gt;
但她不会同意。&lt;br&gt;
心存善念的人会被她迷惑，但最终会被海浪带回自己的故乡。&lt;br&gt;
而欲望和恶念过多的人，会在自然的力量下灰飞烟灭。&lt;br&gt;
但是，当她听到人们心中的祈祷、看到人们眼中的痛苦与绝望时&lt;br&gt;
她总会感同身受。&lt;br&gt;
所以，她的歌声，大多都是如赎罪之人的挽歌一般，绝望中带着希冀，从未断开内心中的那一丝神念。&lt;br&gt;
人们的心灵会得到净化，他们会忘记自己的遭遇，但会平安回到家人面前。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;歌词如下&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs stata&#34;&gt;C&amp;#x27;&lt;span class=&#34;hljs-keyword&#34;&gt;est&lt;/span&gt; un SOS,je suis touché&lt;span class=&#34;hljs-keyword&#34;&gt;e&lt;/span&gt; je suis à terre
这是来自远方的求助（因迷茫而搁浅）
Entends-tu &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;d&lt;/span&gt;étresse, y&amp;#x27;a t-il quelqu&amp;#x27;un ?
是否有人能感触到那一丝的痛苦？
Je sens &lt;span class=&#34;hljs-keyword&#34;&gt;que&lt;/span&gt; je me perds
我已彻底迷失了方向
J&amp;#x27;ai tout quitté, mais ne &lt;span class=&#34;hljs-keyword&#34;&gt;m&lt;/span&gt;&amp;#x27;&lt;span class=&#34;hljs-keyword&#34;&gt;en&lt;/span&gt; veux pas
不要怪我曾经的选择（舍弃一切）
Fallait &lt;span class=&#34;hljs-keyword&#34;&gt;que&lt;/span&gt; je &lt;span class=&#34;hljs-keyword&#34;&gt;m&lt;/span&gt;&amp;#x27;&lt;span class=&#34;hljs-keyword&#34;&gt;en&lt;/span&gt; aille, je &lt;span class=&#34;hljs-keyword&#34;&gt;n&lt;/span&gt;&amp;#x27;étais plus moi
只有选择离开，我才能（告被从前）做回自己
Je suis tombé&lt;span class=&#34;hljs-keyword&#34;&gt;e&lt;/span&gt; tellement bas
我也为此伤心难过到了极点
&lt;span class=&#34;hljs-keyword&#34;&gt;Que&lt;/span&gt; plus personne ne me voit
没人能真正理解我的苦处
J&amp;#x27;ai sombré dans &lt;span class=&#34;hljs-keyword&#34;&gt;l&lt;/span&gt;&amp;#x27;anonymat
我隐姓埋名
Combattu le vide et le froid, le froid
社会的打拼，让我倍感人情的冷漠
J&amp;#x27;aimerais revenir , j&amp;#x27; &lt;span class=&#34;hljs-keyword&#34;&gt;n&lt;/span&gt;&amp;#x27;y arrive pas
我真的很想回去，但却有不知该怎么办
J&amp;#x27;aimerais revenir
我真的很想回去
Je suis rien, je suis personne
我碌碌无为，卑躬屈膝
J&amp;#x27;ai toute &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; peine comme royaume
属于我的世界充满痛苦
Une seule arme &lt;span class=&#34;hljs-keyword&#34;&gt;m&lt;/span&gt;&amp;#x27;emprisonne
我如囚徒般被困在那里
Voir &lt;span class=&#34;hljs-keyword&#34;&gt;la&lt;/span&gt; lumière entre les barreaux
隔着铁笼看到了远处那丝光明
Et regarder comme le ciel &lt;span class=&#34;hljs-keyword&#34;&gt;est&lt;/span&gt; beau
那湛蓝天空是多么的美好
Entends-tu &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; voix &lt;span class=&#34;hljs-keyword&#34;&gt;qui&lt;/span&gt; résonne (&lt;span class=&#34;hljs-keyword&#34;&gt;qui&lt;/span&gt; résonne) ?
你能听到我歌声中的苦楚吗（歌声的回响）？
C&amp;#x27;&lt;span class=&#34;hljs-keyword&#34;&gt;est&lt;/span&gt; un SOS ,je suis touché&lt;span class=&#34;hljs-keyword&#34;&gt;e&lt;/span&gt; je suis à terre
这是来自远方的求助（因迷茫耳搁浅）
Entends-tu &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;d&lt;/span&gt;étresse, y&amp;#x27;a t-il quelqu&amp;#x27;un ?
是否有人能感触到那一丝的痛苦？
Je sens &lt;span class=&#34;hljs-keyword&#34;&gt;que&lt;/span&gt; je me perds ..
我已彻底迷失了方向
Le silence tue &lt;span class=&#34;hljs-keyword&#34;&gt;la&lt;/span&gt; souffrance &lt;span class=&#34;hljs-keyword&#34;&gt;en&lt;/span&gt; moi
沉默只会让我更加的痛苦
&lt;span class=&#34;hljs-keyword&#34;&gt;L&lt;/span&gt;&amp;#x27;entends-tu ? &lt;span class=&#34;hljs-keyword&#34;&gt;Est&lt;/span&gt;-ce &lt;span class=&#34;hljs-keyword&#34;&gt;que&lt;/span&gt; tu le vois ?
你能听到，感受到它吗？
Il &lt;span class=&#34;hljs-keyword&#34;&gt;te&lt;/span&gt; promet, fait &lt;span class=&#34;hljs-keyword&#34;&gt;de&lt;/span&gt; toi
曾经的憧憬，早已变得
Un objet sans éclat
黯淡无光
Alors j&amp;#x27;ai crié, j&amp;#x27;ai pensé à toi
在泪眼交织中，我想起了你
J&amp;#x27;ai noyé le ciel dans les vagues, les vagues
我淹没在我的天空里，满是茫然、茫然
Tous mes regrets, toute mon histoire
所有的悔恨，所有的往事
Je &lt;span class=&#34;hljs-keyword&#34;&gt;la&lt;/span&gt; reflè&lt;span class=&#34;hljs-keyword&#34;&gt;te&lt;/span&gt;
让我幡然醒悟
Je suis rien, je suis personne
我碌碌无为，卑躬屈膝
J&amp;#x27;ai toute &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; peine comme royaume
属于我的世界充满痛苦
Une seule arme &lt;span class=&#34;hljs-keyword&#34;&gt;m&lt;/span&gt;&amp;#x27;emprisonne
我如囚徒般被困在那里
Voir &lt;span class=&#34;hljs-keyword&#34;&gt;la&lt;/span&gt; lumière entre les barreaux
隔着铁笼看到了远处那丝光明
Et regarder comme le ciel &lt;span class=&#34;hljs-keyword&#34;&gt;est&lt;/span&gt; beau
那湛蓝天空是多么的美好
Entends-tu &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; voix &lt;span class=&#34;hljs-keyword&#34;&gt;qui&lt;/span&gt; résonne (&lt;span class=&#34;hljs-keyword&#34;&gt;qui&lt;/span&gt; résonne) ？
你能听到我歌声中的苦楚吗（歌声回响）？
C&amp;#x27;&lt;span class=&#34;hljs-keyword&#34;&gt;est&lt;/span&gt; un SOS, je suis touché&lt;span class=&#34;hljs-keyword&#34;&gt;e&lt;/span&gt; je suis à terre
这是来自远方的求助（因迷茫而搁浅）
Entends-tu &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;d&lt;/span&gt;étresse, y&amp;#x27;a t-il quelqu&amp;#x27;un ?
是否有人能感触到那一丝的苦楚？
Je sens &lt;span class=&#34;hljs-keyword&#34;&gt;que&lt;/span&gt; je me perds ...
我已彻底迷失了方向
C&amp;#x27;&lt;span class=&#34;hljs-keyword&#34;&gt;est&lt;/span&gt; un SOS, je suis touché&lt;span class=&#34;hljs-keyword&#34;&gt;e&lt;/span&gt; je suis à terre
这是来自远方的求助（因迷茫而搁浅）
Entends-tu &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;d&lt;/span&gt;étresse, y&amp;#x27;a t-il quelqu&amp;#x27;un ?
是否有人能感触到那一丝的苦楚？
Je sens &lt;span class=&#34;hljs-keyword&#34;&gt;que&lt;/span&gt; je me perds
我已彻底迷失了方向
C&amp;#x27;&lt;span class=&#34;hljs-keyword&#34;&gt;est&lt;/span&gt; un SOS, je suis touché&lt;span class=&#34;hljs-keyword&#34;&gt;e&lt;/span&gt; je suis à terre
这是来自远方的求助（因迷茫而搁浅）
Entends-tu &lt;span class=&#34;hljs-keyword&#34;&gt;ma&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;d&lt;/span&gt;étresse, y&amp;#x27;a t-il quelqu&amp;#x27;un ?
是否有人能感触到那一丝的苦楚？
Je sens &lt;span class=&#34;hljs-keyword&#34;&gt;que&lt;/span&gt; je me perds
我已彻底迷失了方向&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;吐槽部分。&lt;br&gt;
图是自己用 AI 画的，故事是自己写的，音乐听的是自己放慢的。&lt;br&gt;
一边写一边听着这首歌，写到最后两句话，眼泪忽然就没绷住。&lt;br&gt;
明明自己如此痛恨人性的丑陋，却仍然存有无尽的怜悯。哪怕在自己胡编乱造的故事中，都不曾改变。&lt;/p&gt;
&lt;p&gt;一直以来，我的共情能力其实就很强。也不知道以后做带有刀片的剧情的时候，自己会不会先把眼泪流干。&lt;br&gt;
但是，我又如此享受这种感觉。我不想做眼中只有利益，而忽略了感情的人。&lt;br&gt;
也许，这就是神性与人性的冲突吧。作为人类，我们如此矛盾，却又如此和谐。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/</guid>
            <title>超频你的显示器，获得更佳的流畅体验</title>
            <link>https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/</link>
            <category>超频</category>
            <category>硬件</category>
            <pubDate>Fri, 02 Dec 2022 14:33:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;显示器超频？显示器还能超频？&lt;br&gt;
当然是可以的。从定义上来说，任何以时钟频率进行周期性工作的硬件都有超频的说法，只不过我们平时主要讨论的是 CPU、显卡、内存等核心电脑硬件的超频。&lt;br&gt;
某种意义上来说，显示器超频实际上是一个很古老的话题。在以前的 “大屁股” 显示器（即 CRT 技术的显示器）时代，超频就已经存在了。由于最开始的显示器都是纯模拟信号，输入的电压经过放大后直接作用于偏转电场，从而实现画面绘制，那时候的显示器超频是真正意义上的物理超频。只要阴极射线管的水平够好、电场板的素质优秀，显示器的各项工作参数完全可以自定义。&lt;br&gt;
后来用了 LCD 和纯数字信号传输，超频的内容发生了一些变化；不过多数面板仍然会有超频能力，这取决于厂家的配置与面板本身的素质。&lt;br&gt;
&lt;img src=&#34;../_resources/95a04f46fce4449551b3b11e14510900.png&#34; alt=&#34;95a04f46fce4449551b3b11e14510900.png&#34;&gt;&lt;br&gt;
&lt;em&gt; 图：LCD 与 CRT 显示器原理对比&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是显示器超频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是显示器超频&#34;&gt;#&lt;/a&gt; 什么是显示器超频&lt;/h2&gt;
&lt;p&gt;所谓的显示器超频，实际上是针对其运行参数&lt;strong&gt;垂直刷新率&lt;/strong&gt;而言的。&lt;br&gt;
在以前的 CRT 显示器上，显示画面需要电子枪从左往右依次发射电子、扫描一行，点亮一行的荧光像素，随后在垂直同步信号的作用下迅速回到左侧，同时跳转到下一行，重新进行下一行的扫描。以此类推，直到整个荧幕被扫描完成后，电场会使电子偏转到左上角，重复这个过程。（此处还有水平同步信号在起作用，不详细说明）&lt;br&gt;
玩过模拟示波器的朋友肯定能理解垂直信号的作用，实际上就是示波器中的扫描电路，选择合适的扫描信号就能使波形稳定。&lt;br&gt;
因此，如果能调节垂直（和水平）同步信号，使其可以在更短的时间内完成一次完整的扫描，则显示器的&lt;strong&gt;刷新率&lt;/strong&gt;就能得到提升。&lt;br&gt;
这就是显示器超频，我们希望提升其垂直刷新率，使其比标称值更高，这样才会有更好的体验。&lt;/p&gt;
&lt;h2 id=&#34;显示器超频的影响因素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#显示器超频的影响因素&#34;&gt;#&lt;/a&gt; 显示器超频的影响因素&lt;/h2&gt;
&lt;p&gt;要完成一次好的显示器超频，我们通常认为有以下几点因素会影响结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面板类型与素质&lt;/li&gt;
&lt;li&gt;厂商限制&lt;/li&gt;
&lt;li&gt;接口类型与传输质量&lt;/li&gt;
&lt;li&gt;合适的配置&lt;/li&gt;
&lt;li&gt;其它因素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上因素中，面板和厂商在购买后就固定了，无法更改。&lt;br&gt;
接口类型以 DP、HDMI（高版本）为优。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请不要将显示器的超频能力纳入选购的考虑范围之中，如果想获得高刷屏的体验，那么建议选购原生的高刷显示器。本文的核心目的是科普，而不是鼓励大家要求厂商提供超频能力。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;如何超频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何超频&#34;&gt;#&lt;/a&gt; 如何超频&lt;/h2&gt;
&lt;h3 id=&#34;超频前的准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频前的准备&#34;&gt;#&lt;/a&gt; 超频前的准备&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;检查接口协议与传输质量&lt;br&gt;
请使用优质 DP 或 HDMI 线连接电脑与显示器，以获得更佳的超频能力。&lt;br&gt;
该项主要影响传输带宽，对于特定版本的 DP 或 HDMI 接口而言，其能提供的带宽是有限的。详情可查阅百度。&lt;br&gt;
只需要记得一点，如果带宽受限，那么降低分辨率有助于获得更高的刷新率。但是对于多数平民显示器而言，即使使用最高分辨率，也不太会出现带宽不足的问题。&lt;/li&gt;
&lt;li&gt;检查视频信号源&lt;br&gt;
目前来说，英特尔核心显卡并不支持显示器超频（至少笔记本的不行）。如果您使用台式机，请确保视频信号是独立显卡输出的。如果使用笔记本，请连接到笔记本上的 type-c 接口，一般而言这个接口的显示输出是直接连接独立显卡的。&lt;br&gt;
如果使用不支持独显直连输出的笔记本（或者没有独显），则大概率不能成功。&lt;br&gt;
不过，即便如此，您还是可以进行尝试。大多数出厂 60Hz 的显示器都可以直接提升到 75Hz，带来一定程度上的体验提升。不过有一个例外，笔记本自带的屏幕完全不支持超频。&lt;/li&gt;
&lt;li&gt;环境条件&lt;br&gt;
尽管现代显示器对工作环境的承受范围极大，环境因素的影响极其小，合适的环境仍然有助于提高超频成功率。&lt;br&gt;
主要包括合适的工作温度（尤其是不能过低），湿度，电压值与稳定性，甚至摆放方向等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;开始超频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始超频&#34;&gt;#&lt;/a&gt; 开始超频&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;对于非独立显卡、英特尔核心显卡：&lt;br&gt;
请进入显卡控制面板（以下以新版英特尔核心显卡为例）&lt;br&gt;
&lt;img src=&#34;../_resources/ce3133202184eb787a2034f31476db94.png&#34; alt=&#34;ce3133202184eb787a2034f31476db94.png&#34;&gt;&lt;br&gt;
 点击&lt;strong&gt;显示器&lt;/strong&gt;，&lt;strong&gt;分辨率旁边的加号&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/245a61028b5e9c9e71d6d6abb786ff57.png&#34; alt=&#34;245a61028b5e9c9e71d6d6abb786ff57.png&#34;&gt;&lt;br&gt;
 检查是否有刷新率的选项。如果有，可以尝试输入目标刷新率，然后单击确定。&lt;br&gt;
若不成功或没有输入刷新率的地方，则您的显卡不支持硬超频。&lt;br&gt;
请尝试点击&lt;strong&gt;刷新率&lt;/strong&gt;旁的下拉框&lt;br&gt;
&lt;img src=&#34;../_resources/319d41963a5966fc42fe60ac72c0cb2f.png&#34; alt=&#34;319d41963a5966fc42fe60ac72c0cb2f.png&#34;&gt;&lt;br&gt;
 若有多个选项，选择最高的。若有 I 和 P 两种，请选择 P。&lt;br&gt;
至此，显示器超频结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;对于英伟达、AMD 独立显卡：&lt;br&gt;
请进入显卡控制面板（以下以英伟达显卡为例）；应该能在 [开始] 菜单里找到。&lt;br&gt;
若电脑里找不到该软件，请重装显卡驱动程序。&lt;br&gt;
&lt;img src=&#34;../_resources/345495b609471f763f8ec8bfc8df62df.png&#34; alt=&#34;345495b609471f763f8ec8bfc8df62df.png&#34;&gt;&lt;br&gt;
 在屏幕左侧，单击 [更改分辨率]。&lt;br&gt;
如果没有此选项，则说明显示器没有连接到独立显卡上。&lt;br&gt;
&lt;img src=&#34;../_resources/2e632685ea988d1cf03dc6d60b7493ac.png&#34; alt=&#34;2e632685ea988d1cf03dc6d60b7493ac.png&#34;&gt;&lt;br&gt;
 点击 [自定义]。&lt;br&gt;
&lt;img src=&#34;../_resources/ec04c76fa5c31fbee854410f0c96b663.png&#34; alt=&#34;ec04c76fa5c31fbee854410f0c96b663.png&#34;&gt;&lt;br&gt;
 勾选 [启用显示器未显示的分辨率]，然后点击 [创建自定义分辨率]。&lt;br&gt;
&lt;img src=&#34;../_resources/ed628697647b0ae7a7af0b97615d93e1.png&#34; alt=&#34;ed628697647b0ae7a7af0b97615d93e1.png&#34;&gt;&lt;br&gt;
 在 [刷新率] 中输入目标刷新率，然后可以点击 [测试] 按钮进行测试。&lt;br&gt;
在 [计时 - 标准] 选项中选择 [协同视频计时标准（CVT）降低清屏时间]，可能有助于提高成功率。&lt;br&gt;
&lt;img src=&#34;../_resources/79a358cee11fbd4de054a918720205a4.png&#34; alt=&#34;79a358cee11fbd4de054a918720205a4.png&#34;&gt;&lt;br&gt;
 单击 [测试] 按钮，显示器将黑屏进行切换。&lt;br&gt;
如果成功，则您将很快看到电脑画面。如果半成功，则可能会看到画面上出现抖动、条纹、异常颜色等。&lt;br&gt;
如果失败，显示器提示不支持或一直黑屏，等待 15s 后会自动退出测试状态。或者，可以按 Esc 键快速返回。&lt;br&gt;
当测试到稳定的刷新率后，在提示框中点击 [是]，即可保存该分辨率。&lt;br&gt;
返回上一步的 [更改刷新率]，应该能在列表最顶上看到刚刚创建的分辨率。&lt;br&gt;
选中后，单击软件右下角的 [应用]，超频结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;超频提示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频提示&#34;&gt;#&lt;/a&gt; 超频提示&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;尽管超频一般不会造成伤害，仍可能导致面板发热加剧、液晶老化速率提高等问题。因此，从理论上讲，不建议长时间超频。&lt;/li&gt;
&lt;li&gt;在超频过程中，可以使用以下方法先确定显示器能承受的最大刷新率：
&lt;ul&gt;
&lt;li&gt;先将刷新率定到目标值&lt;/li&gt;
&lt;li&gt;若成功，则进一步定到下个目标值；否则，应选择当前刷新率与目标值的中间值。&lt;/li&gt;
&lt;li&gt;重复以上取中值的过程，通过二分法可以快速定位到最大刷新率。&lt;/li&gt;
&lt;li&gt;确定了最大值后，请适当降低到附近合适的数值使用。例如，若最大刷新率为 96Hz，请保持在 90Hz 即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若超频过程中显示器出现严重事故（如一直黑屏、闪屏等），请断开视频连接线，然后断开显示器电源；等待几分钟或使其完全放电后重新接入电源，检查显示器是否能正常开机，然后再接入电脑。由于现代显示器的保护功能极佳，真正发生无法挽回事故的可能性极低，近乎不存在，但并不为 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;超频经验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频经验&#34;&gt;#&lt;/a&gt; 超频经验&lt;/h3&gt;
&lt;p&gt;对于一般的 1080P、60Hz 显示器而言，75Hz 是日常使用的较佳水平。某些素质较高的显示器可能会一路支持到 80、90 甚至 110Hz，全看厂商良心与运气。&lt;br&gt;
对于 2K、60Hz 的显示器，一般也可以使用 75Hz。我自己的 2K60 显示器最大支持 98Hz，稳定值是 96Hz，最终保持在 90Hz 使用。&lt;br&gt;
对于 144Hz 的显示器，一般直接上 165Hz 是没有问题的。较好的面板可以尝试 180Hz。&lt;br&gt;
更高的不知道，我没钱（&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;没啥可总结的，超个频，获得更好的体验和更高的风险，这是一种交易。权衡结果全由你自己掌控。&lt;br&gt;
任何问题欢迎留言！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</guid>
            <title>使用批处理和Joplin执行并优化Hexo博客工作流程</title>
            <link>https://zjxdiu.github.io/blog/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</link>
            <category>软件</category>
            <pubDate>Sun, 27 Nov 2022 21:53:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;使用静态部署的方式使用 Hexo，我们经常会遇到一个很烦人的问题，就是部署麻烦。&lt;br&gt;
每次写一篇文章，就要经历&lt;strong&gt; Hexo clean、Hexo g、Hexo s、Hexo d&lt;/strong&gt; 四连，一开始还好，写多了之后烦不胜烦。&lt;/p&gt;
&lt;p&gt;同时，由于我个人使用 Joplin 进行文章撰写，这个软件虽然简洁，但并不好用；图片虽然可以直接复制，但不能修改输出目录，图片资源默认保存在与 &lt;code&gt;/blog/&lt;/code&gt;  平行的 &lt;code&gt;/_resources/&lt;/code&gt;  文件夹中。&lt;/p&gt;
&lt;p&gt;因此，结合我最为擅长的 batch 脚本语言，我就萌生了使用批处理来优化整个流程的想法。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-git安装配置不确定是否有必要&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-git安装配置不确定是否有必要&#34;&gt;#&lt;/a&gt; 1. Git 安装配置（不确定是否有必要）&lt;/h3&gt;
&lt;p&gt;在安装 Git 的过程中，我们会有一个配置终端的过程，此处其实是建议选择第一项（使用 MinTTY），但我当时选择了第二项即使用系统的 cmd 来作 git bash 的终端。&lt;br&gt;
&lt;img src=&#34;../_resources/aca6779be5b5f5c9d88dc1215456c295.png&#34; alt=&#34;aca6779be5b5f5c9d88dc1215456c295.png&#34;&gt;&lt;br&gt;
 如果选择了第一项，可能也是能正常使用批处理来代替执行的，应该不用担心。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-站点配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-站点配置&#34;&gt;#&lt;/a&gt; 2. 站点配置&lt;/h3&gt;
&lt;p&gt;blog 根目录下的_config.yml 文件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs yml&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;......&lt;/span&gt;
&lt;span class=&#34;hljs-attr&#34;&gt;post_asset_folder:&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;hljs-attr&#34;&gt;relative_link:&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;hljs-string&#34;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用 Joplin 写文章的话应该关闭这两项（至少我测试下来这样是没问题的）&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-脚本编写&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-脚本编写&#34;&gt;#&lt;/a&gt; 3. 脚本编写&lt;/h3&gt;
&lt;p&gt;在 blog 根目录下新建 “程序名.bat”，开始编写功能。&lt;br&gt;
先放源码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs bat&#34;&gt;@&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hljs-built_in&#34;&gt;setlocal&lt;/span&gt; EnableDelayedExpansion
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;
:ac
&lt;span class=&#34;hljs-comment&#34;&gt;rem 请设置%targetlable%变量，以确保正常跳转至目标位置&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;cls&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;F
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;%targetlabel%&lt;/span&gt;
:&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%targetlabel%&lt;/span&gt;&amp;quot;==&amp;quot;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.执行完整的检查和推送blog流程
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;.快速上载blog
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;.本地预览
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;.单独执行指令
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;.
choice /c &lt;span class=&#34;hljs-number&#34;&gt;1234&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; new
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=local&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=fast&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&amp;quot; (&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=full&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac)
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;exit&lt;/span&gt;
:new
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 正在创建新的&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt;实例...
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 命令提示：
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo clean
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo g
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo s
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; hexo d
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 按任意键返回菜单...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac
:local
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;                  本地预览模式
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 启动预览...
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean &amp;amp; hexo g &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; http://localhost:&lt;span class=&#34;hljs-number&#34;&gt;4000&lt;/span&gt;/ &amp;amp; hexo s&amp;quot;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 按任意键返回菜单...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac
:fast
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;                  快速上载blog
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean &amp;amp; hexo g &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; hexo d&amp;quot;
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 完成，&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;秒后退出...
&lt;span class=&#34;hljs-built_in&#34;&gt;ping&lt;/span&gt; localhost -n &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;exit&lt;/span&gt;
:full
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;                  完整流程向导
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt;              按&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;为确定，按&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;为跳过
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; clean
:clean
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第一步：清理缓存
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; generate
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo clean&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; generate
:generate
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第二步：生成页面
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; check
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;&lt;span class=&#34;hljs-built_in&#34;&gt;xcopy&lt;/span&gt; D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; hexo g&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; check
:check
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第三步：本地预览
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; deploy
&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt; http://localhost:&lt;span class=&#34;hljs-number&#34;&gt;4000&lt;/span&gt;/
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo s&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; deploy
:deploy
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 第四步：上传到远程服务器
choice /c &lt;span class=&#34;hljs-number&#34;&gt;01&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;%errorlevel%&lt;/span&gt;&amp;quot;==&amp;quot;&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&amp;quot; &lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; done
&lt;span class=&#34;hljs-built_in&#34;&gt;cmd&lt;/span&gt; /c &amp;quot;hexo d&amp;quot;
&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; done
:done
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; ------------------------------------------------
&lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; 流程已完成，按任意键返回菜单...
&lt;span class=&#34;hljs-built_in&#34;&gt;pause&lt;/span&gt; &amp;gt;&lt;span class=&#34;hljs-built_in&#34;&gt;nul&lt;/span&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; &amp;quot;targetlabel=&lt;span class=&#34;hljs-built_in&#34;&gt;start&lt;/span&gt;&amp;quot;&amp;amp;&amp;amp;&lt;span class=&#34;hljs-keyword&#34;&gt;goto&lt;/span&gt; ac&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我自认为自己的批处理写得都算比较清晰的了，虽然注释很少，但结合文字应该能看懂每一步是在干什么。&lt;br&gt;
如果要使用，请把里面所有的 &lt;code&gt;D:\blog\source\_posts\_resources&lt;/code&gt;  替换为你 Joplin 每次导出时的资源目录，把所有的 &lt;code&gt;D:\blog\public\blog\_resources\&lt;/code&gt;  替换为你的博客站点目录，注意不要动 &lt;code&gt;\public\...&lt;/code&gt;  后面的内容。&lt;/p&gt;
&lt;p&gt;如果要更换功能模块，也应按照这里的写法，使用  &lt;code&gt;cmd /c 命令内容 &amp;amp; 第二条命令 &amp;amp; 后面的很多命令&lt;/code&gt;  来执行，除了 start 用于启动网页之外尽量不要直接在批处理中使用模块的命令，否则容易直接闪退。&lt;/p&gt;
&lt;p&gt;创建 &lt;code&gt;.nojekyll&lt;/code&gt;  文件的目的是防止 GitHub 忽略掉下划线开头的文件夹，即 &lt;code&gt;_resources&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-工作流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-工作流程&#34;&gt;#&lt;/a&gt; 4. 工作流程&lt;/h3&gt;
&lt;p&gt;现在，我们可以愉快地写文章了。&lt;br&gt;
打开 Joplin，新建笔记（记得都放在同一个笔记本下），笔记的名字是文件名，写上 Front-matter 内容，之后就如同在 word 中一样写稿。&lt;br&gt;
图片直接粘贴即可，需要的话修改 [ ] 里的内容，这是属于 markdown 语法的一部分，不详细说明。&lt;br&gt;
写完的文章直接往 &lt;code&gt;blog\source\_posts&lt;/code&gt;  里面一存，然后打开脚本按个 2，等两分钟就部署到 Github Pages 上了。&lt;br&gt;
&lt;strong&gt;愉快地工作吧！&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/cf0fb99a327ef788a844524d6eb74278.png&#34; alt=&#34;cf0fb99a327ef788a844524d6eb74278.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;补充点内容，修改文章稍微有点麻烦，因为 Joplin 非常笨，它不会识别已有的文件，发现重名了直接加后缀，连带着里面的图片也都加后缀、重新复制到 &lt;code&gt;_resources&lt;/code&gt;  里面了；对于我这种硬盘空间够、平时图片不多的人来说倒是无所谓，但部署了之后文章会重复显示好几篇。所以不能直接导出文章，需要手动删除旧的，然后再从 Joplin 中导出即可。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E9%9A%8F%E8%AE%B020221125/</guid>
            <title>疫情爆炸，如何积极面对</title>
            <link>https://zjxdiu.github.io/blog/%E9%9A%8F%E8%AE%B020221125/</link>
            <category>日常</category>
            <category>生活</category>
            <pubDate>Sun, 27 Nov 2022 11:48:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;../_resources/bae16920a3e51780c72e170d6411a8ac.png&#34; alt=&#34;bae16920a3e51780c72e170d6411a8ac.png&#34;&gt;&lt;br&gt;
 人在上课，突闻噩耗。&lt;br&gt;
虽然现在的新冠并没有两年前那么恐怖，见者九死一生，但仍然是流感中较为严重的一类。&lt;/p&gt;
&lt;p&gt;最近全国各地都突然严重爆发，我学校的老校区也出现了阳性感染者，这实在不是什么好消息。&lt;br&gt;
不过，疫情虽然对经济冲击严重，但我们仍然可能可以从另一个角度思考问题，试图以积极的方式面对。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在 2020 年中，大约是（延期后的）高考结束的那个暑期，我们经历了一次非常恐怖的矿潮。那时候，显卡的价格飞涨到一个离谱都不足以形容的地步，而正值开学季的准大学生们则欲哭无泪：想买电脑，根本抢不到！&lt;br&gt;
尽管当时笔记本电脑缺货更多是由于芯片供应短缺造成的，但挖矿的影响同样不可忽视。而就在大家想着如何用合理的价格买到自己心仪的显卡时，有一些人则希望大家能够从另一个角度来看待这个问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“&lt;em&gt;有时候达成你的目标和需求不止一种方法；面对畸形的市场，与其抱怨，不如换一种新的思维来看待这件事&lt;/em&gt;”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这句话确实给了我不少启发和灵感。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;这是一个给你折腾机会的完美时机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这是一个给你折腾机会的完美时机&#34;&gt;#&lt;/a&gt; 这是一个给你折腾机会的完美时机&lt;/h3&gt;
&lt;p&gt;所谓折腾，就是你可以干任何以前你想干但缺乏时机的事。当然，如果你想环游世界，那可能还是之后再说吧（？）&lt;br&gt;
举个例子，我利用高中被疫情困在家里的时间，自己学习了非常多的东西，包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络工程与应用&lt;/li&gt;
&lt;li&gt;服务器搭建与优化&lt;/li&gt;
&lt;li&gt;网页前端设计&lt;/li&gt;
&lt;li&gt;游戏开发入门&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些都是我理解的 “折腾”，平时由于高三学习压力较大、学校里不能自由使用手机和电脑，这些东西都没有机会学习和实践。&lt;br&gt;
而利用好了这几个月，我认为我在折腾中收获颇丰，并为进入大学后的生活提供了十足的帮助。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/a5e6e966826c7b2508826b512966be12.png&#34; alt=&#34;a5e6e966826c7b2508826b512966be12.png&#34;&gt;&lt;br&gt;
 这是我在一个月内做的网页前端设计，并应用于自己家庭的内网中，以便实现我的学习电脑与打印服务器电脑（配置很低很卡）之间进行快速的文件传输和通信。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;这是一个可以锻炼你眼光的合理时机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这是一个可以锻炼你眼光的合理时机&#34;&gt;#&lt;/a&gt; 这是一个可以锻炼你眼光的合理时机&lt;/h3&gt;
&lt;p&gt;如果要折腾，你肯定免不了要花点钱，有的甚至开销很大（比如我喜欢折腾电脑硬件，这就是花费很高的一种）。但正是因为花销大，才能锻炼我的眼光，确切来说是我选购东西的眼光。&lt;/p&gt;
&lt;p&gt;最近正在考虑折腾一个服务器电脑。家里有闲置的笔记本和台式机，也许我可以改造台式机，重新选择 ITX 机箱和静音散热器，并将其作为服务器主机使用。&lt;br&gt;
或者，也可以另外花费 240 左右购买 J1900 准系统迷你主机，这种方案的优势是被动散热无噪音、寿命长，硬盘我已经有一块可用的 SSD，还可以顺便折腾 Windows server 2007 等系统，加上我本人对能折腾的迷你电脑比较感兴趣，这似乎是不错的选择。&lt;br&gt;
然而，这个方案最大的问题就是开销更多；买一个 ITX 机箱 + 低噪散热器的价格显然低于准系统 + 内存的价格，所以这就对我的选购能力提出了严峻的挑战。虽然我并没有实际购买，但在这个过程中，我能感觉到自己网购眼光的提升。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;积极面对这 ** 的世界，听起来并不是一件轻松的事，毕竟谁能在生存受阻的情况下坦然自若呢？但是，苦中作乐本就是身具人性的最大优势，而我们不应该让其淹没在无穷无尽的原始需求中。&lt;br&gt;
最后，为这个尚存一线美好的世界送上祝福，希望每个真诚的人都能被温柔以待。&lt;br&gt;
&lt;img src=&#34;../_resources/a15b89a10fa9a65103dc7e49a3856ea7.png&#34; alt=&#34;a15b89a10fa9a65103dc7e49a3856ea7.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/WPS-word/</guid>
            <title>WPS word如何设置图片背景，如何解决图片变成平铺问题</title>
            <link>https://zjxdiu.github.io/blog/WPS-word/</link>
            <category>软件</category>
            <pubDate>Sat, 26 Nov 2022 23:18:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;wps-word如何设置图片背景如何解决图片变成平铺问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wps-word如何设置图片背景如何解决图片变成平铺问题&#34;&gt;#&lt;/a&gt; WPS word 如何设置图片背景，如何解决图片变成平铺问题&lt;/h2&gt;
&lt;p&gt;问题描述：在 WPS word 中插入背景图片，导出为 PDF、打印后发现图片变成平铺，如图所示&lt;br&gt;
&lt;img src=&#34;../_resources/1bed71e7e0b967daa78642a737810d17.png&#34; alt=&#34;1bed71e7e0b967daa78642a737810d17.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1. 打开需要插入背景图片的文档&lt;br&gt;
 2. 点击：页面布局、背景、其它背景、纹理&lt;br&gt;
&lt;img src=&#34;../_resources/88b258680c69021372dab599663945bd.png&#34; alt=&#34;88b258680c69021372dab599663945bd.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 选择 “其它纹理”，选择图片后点击确定&lt;br&gt;
&lt;img src=&#34;../_resources/a4d5ca84c954b134351ea2d9c8d9881c.png&#34; alt=&#34;a4d5ca84c954b134351ea2d9c8d9881c.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 现在背景图片应该可以正常导出了。&lt;/p&gt;
&lt;hr&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/FTIR%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3/</guid>
            <title>傅里叶变换红外光谱技术原理详解</title>
            <link>https://zjxdiu.github.io/blog/FTIR%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3/</link>
            <category>化学</category>
            <category>仪器分析</category>
            <category>信号处理</category>
            <pubDate>Sat, 26 Nov 2022 21:02:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录&#34;&gt;#&lt;/a&gt; 目录&lt;/h2&gt;
&lt;p&gt;一、物理基础&lt;br&gt;
 1.1 红外光谱基本原理&lt;br&gt;
 1.2 FTIR 光谱仪构成与基本运行过程&lt;br&gt;
 1.3 干涉现象&lt;br&gt;
 1.3.1 波的叠加&lt;br&gt;
二、信号与系统&lt;br&gt;
 2.1 数字、模拟信号&lt;br&gt;
 2.1.1 信号&lt;br&gt;
 2.1.2 模拟信号&lt;br&gt;
 2.1.3 数字信号&lt;br&gt;
 2.2 信号转换&lt;br&gt;
 2.2.1 采样与 A/D 转换&lt;br&gt;
 2.2.2 奈奎斯特采样定理&lt;br&gt;
 2.2.3 混叠&lt;br&gt;
 2.3 傅里叶变换（FT）&lt;br&gt;
三、FT 在 FTIR 中的具体原理&lt;br&gt;
 3.1 仪器工作流程详解&lt;br&gt;
 3.2 信号检测与采样&lt;br&gt;
 3.3 数据处理&lt;br&gt;
四、总结与展望&lt;br&gt;
 4.1 总结与心得&lt;br&gt;
 4.2 未来展望&lt;/p&gt;
&lt;h1 id=&#34;傅里叶变换红外光谱技术原理详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#傅里叶变换红外光谱技术原理详解&#34;&gt;#&lt;/a&gt; 傅里叶变换红外光谱技术原理详解&lt;/h1&gt;
&lt;h2 id=&#34;一-物理基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-物理基础&#34;&gt;#&lt;/a&gt; 一、物理基础&lt;/h2&gt;
&lt;h3 id=&#34;11-红外光谱基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11-红外光谱基本原理&#34;&gt;#&lt;/a&gt; 1.1 红外光谱基本原理&lt;/h3&gt;
&lt;p&gt;当一束红外光射到物质上，可能发生：吸收、透过、反射、散射或者激发荧光。其中，我们需要的部分是吸收的量。然而，对于仪器来说，直接测量吸光度似乎并不现实；因此，我们一般采用已知强度的光源以及透过量来代替吸光度。&lt;br&gt;
红外光，本质上是一段频率特殊、无法被人眼看见的电磁波，其波长一般为 0.75-1000nm，频率约为 300GHz~430THz。与之相似的包括微波（或 Wi-Fi、5G 网络的毫米波）、FM 广播等无线电波和其它。&lt;br&gt;
对于红外光谱分析，我们一般选用其中的一段波长（或频率、波数）为目标光。采用色散元件，我们可以将光源发射的连续光谱（类似包含全部可见光波长而显白色的太阳光）分解为需要的单色光（只包含一种波长的光），然后让其通过样品、测定吸光度。&lt;br&gt;
其余的红外光谱原理可查阅课本，此处不再赘述。&lt;/p&gt;
&lt;h3 id=&#34;12-ftir光谱仪构成与基本运行过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12-ftir光谱仪构成与基本运行过程&#34;&gt;#&lt;/a&gt; 1.2 FTIR 光谱仪构成与基本运行过程&lt;/h3&gt;
&lt;p&gt;FTIR 光谱仪，即 Fourier Transform Infrared Radiation Spectrometer，傅里叶变换红外辐射光谱仪（以下简称 FTIR 或 FFTIR），就是一种用于红外光谱测定的仪器。与普通的红外光谱仪不同，FTIR 不具有单色器，而是以迈克尔逊干涉仪取代，并且对计算机系统尤为依赖、几乎不可能通过人力来计算其光谱图。&lt;br&gt;
FTIR 的运行流程可以概括为：光源发射红外线 – 干涉仪动作产生干涉光 – 干涉光通过样品到达检测器 – 光电二极管或其它检测器将光强转换为电信号 – 传入计算机进行数据处理。其中，光源发射的红外线包括整个需要测定的频率范围，而干涉仪需要持续动作以产生需要的干涉光；干涉光的性质与检测器信号是一一对应且已知的。&lt;/p&gt;
&lt;h3 id=&#34;13-干涉现象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#13-干涉现象&#34;&gt;#&lt;/a&gt; 1.3 干涉现象&lt;/h3&gt;
&lt;p&gt;1801 年，英国物理学家托马斯・杨在实验室里成功地观察到了光的干涉，以下就是经典的双缝干涉实验。&lt;br&gt;
&lt;img src=&#34;../_resources/d6cfc0c663cbda269660f8f4e96683a7.png&#34; alt=&#34;双缝干涉现象.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;简而言之，同一束光线从不同的位置发出时，在后面的空间内就会发生干涉现象；或者说，当一束光 “碰到” 另一束光时，两束光发生干涉现象。通俗的例子是，当身边有一个持续频率的声音（例如蜂鸣器报警），人站在房间的不同位置就会听到音量大小不同，在某些角落时这个声音甚至会几乎完全消失，这也是干涉现象的一种体现。&lt;/p&gt;
&lt;h4 id=&#34;131-波的叠加&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#131-波的叠加&#34;&gt;#&lt;/a&gt; 1.3.1 波的叠加&lt;/h4&gt;
&lt;p&gt;我们都知道如何画 y=sin x 的函数图像，它是一个正弦曲线。但是，如果在同一个空间和时间内，有另一个波源发射了另一个正弦曲线，并且它的解析式是 y=sin (1.1x)，这时候两个波发生叠加，我们又如何画出 y= (sin x) + sin (1.1x) 的曲线图呢？&lt;br&gt;
&lt;img src=&#34;../_resources/d02ac3e559fc44f7eb9ca6216a6c5b97.png&#34; alt=&#34;波的叠加图.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用现代化的图形计算器，我们可以很轻松地通过计算机画出上述叠加波的函数图像。很明显，叠加波的振幅（也就是一个周期内的最大 y 值）在周期性变化，但我们仍然可以看到 sin x 的痕迹；似乎就是 sin x 的振幅被周期性地 “压缩”，而这个压缩的方式仍然是一个正弦样子。&lt;br&gt;
也许这些内容已经难以理解了，但我们只需要知道，多个波在叠加之后会产生新的波，而这个叠加波的形态与每个单独的波似乎没有太过直接的关联。&lt;/p&gt;
&lt;h2 id=&#34;二-信号与系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-信号与系统&#34;&gt;#&lt;/a&gt; 二、信号与系统&lt;/h2&gt;
&lt;h3 id=&#34;21-数字-模拟信号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#21-数字-模拟信号&#34;&gt;#&lt;/a&gt; 2.1 数字、模拟信号&lt;/h3&gt;
&lt;h4 id=&#34;211-信号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#211-信号&#34;&gt;#&lt;/a&gt; 2.1.1 信号&lt;/h4&gt;
&lt;p&gt;所谓信号，指的是能传递信息的某种载体。例如现在屏幕上显示的文字，就是一种传递文字信息的信号。这是一个抽象的概念，但有太多实际的例子。接下来的篇幅里，我们将大量使用声音，一种最常见的信号为例，讲解信号与系统的浅层内容。&lt;/p&gt;
&lt;h4 id=&#34;212-模拟信号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#212-模拟信号&#34;&gt;#&lt;/a&gt; 2.1.2 模拟信号&lt;/h4&gt;
&lt;p&gt;所谓模拟信号，指的其实是连续的信号；例如我们听到的声音，实际上是声源产生的机械振动，导致空气被压缩和扩张，这个不断变化的气压传入耳朵，再通过复杂的器官系统，我们就能听到声音。这个过程中，物体的机械振动是连续的，它并不会突变。如果难以理解，那么可以想象一下，如果一个物体的振动发生了一次突变，这意味着它振动面上的分子发生了瞬间移动，也就是在 0 秒内产生了大于 0 的位移，其速度超过了光速；显然，这对于声波来说是不可能的。因此，我们听到的声音就是连续的信号。&lt;/p&gt;
&lt;h4 id=&#34;213-数字信号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#213-数字信号&#34;&gt;#&lt;/a&gt; 2.1.3 数字信号&lt;/h4&gt;
&lt;p&gt;数字信号，也可以叫离散信号，是信号的一种类型。这个名词听上去很高级，但实际上它跟模拟信号没有太大的区别。它们都是信号，只不过形式不同。&lt;br&gt;
我们知道，模拟信号是连续的信号。仍然以声波为例，如果我们将声音与时间的关系画在一张图上，这就是所谓的声波图。&lt;br&gt;
&lt;img src=&#34;../_resources/3ac9e78249d54b91cda7d894e5a661c3.png&#34; alt=&#34;声波图1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在，假设我们希望保存下来这一段声波，并希望它能在一定条件下重现出来。但是，模拟信号是连续的，这意味着它在时间上不存在断点，它包含的数值为无穷多个。显然，计算机无法记录无穷多个数据，实际上我们也没有必要全部记录下来。我们只需要每隔一段时间记录一个数据，这样就可以将无限的数据变成有限，并且似乎也有很大的希望能够重现出来（至少在能接受的损失范围内）。这个过程与逻辑将在下文介绍。&lt;/p&gt;
&lt;h3 id=&#34;22-信号转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#22-信号转换&#34;&gt;#&lt;/a&gt; 2.2 信号转换&lt;/h3&gt;
&lt;h4 id=&#34;221-采样与ad转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#221-采样与ad转换&#34;&gt;#&lt;/a&gt; 2.2.1 采样与 A/D 转换&lt;/h4&gt;
&lt;p&gt;刚才我们提到了模拟信号转换到数字信号的过程。实际上，这就是 ADC（Analog to Digital Converter，模拟到数字转换）的工作原理。我们只需要在尽可能短的时间间隔内记录数据，这样至少主观上我们就可以重现它。&lt;br&gt;
&lt;img src=&#34;../_resources/4561bc52e3a14c62efb44bf598c3ee35.png&#34; alt=&#34;采样过程.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这张图展示的就是一个正弦波经过转换后的结果，每个圆圈代表一个数据点；这样，无限的信号变成了有限的数据点，我们也能通过点的走向看出来它是一个正弦波。这个过程，我们称之为 “采样”（Sampling）。采样的结果，就是将连续信号转换为有限个的采样点（Sample）。&lt;br&gt;
反之，我们也可以通过 DAC 过程，将采样后的离散信号再次转换回模拟信号；这样，你存储在手机里的音乐就能再次变成连续的电信号，并通过扬声器的振膜再变成机械振动。由于这个过程涉及过多的电子工程学内容，并且对于本文所论述的信号处理而言没有太大价值，因此不在此处展开。&lt;/p&gt;
&lt;h4 id=&#34;222-奈奎斯特采样定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#222-奈奎斯特采样定理&#34;&gt;#&lt;/a&gt; 2.2.2 奈奎斯特采样定理&lt;/h4&gt;
&lt;p&gt;现在，我们知道了采样的过程，就是用大量的数据点来描述原信号。但是，这个大量到底是多少？我们说 “尽可能短的时间间隔内”，这个间隔到底是多少？&lt;br&gt;
在回答以上问题之前，我们先想象一下刚才的采样图：里面有很多的数据点，因此我们可以 “脑补” 出原来的信号。但是如果数据点太少，我们还能这样 “脑补” 吗？显然，可能就会有损失，甚至会丢失。&lt;br&gt;
庆幸的是，我们有一个定理，它给出了这个最小数据点数的限制，它就叫奈奎斯特采样定理。&lt;br&gt;
奈奎斯特定理的原文是：任何有限带宽的连续信号都可以被完美转换为数字信号，只要采样频率高于原信号中最高频率分量的 2 倍。&lt;br&gt;
太长了看不懂，没关系，我们分别来解释一下它的含义。&lt;/p&gt;
&lt;p&gt;首先，我们要知道采样率的定义。刚才说到的 “最小时间间隔”，其实就是指采样点的间隔；而它的倒数就是采样率。采样率的含义是，每秒的采样点数量，单位是 Hz（赫兹）。&lt;br&gt;
然后，我们有一个信号频率的概念；我们知道，人耳能听到的声音频率范围是 20-20kHz，这里的频率指的是声源机械振动的频率。&lt;br&gt;
现在，我们希望录音机能够回放的声音频率覆盖人耳的听觉频率范围，这样它录制的声音才跟最开始的声音能尽可能地一致。现在就轮到奈奎斯特定理上场了，我们的录音机采样率需要＞20kHz x 2 = 40kHz，才能保证它可以记录到人耳的听觉上限。&lt;br&gt;
没错，奈奎斯特定理就是这么简单的应用。如果我们想将一个最高频率为 100Hz 的信号无损转换为数字信号，我们的采样率就要大于 200Hz，仅此而已。实际上，多数现代音频以 44.1kHz 或 48kHz 的采样频率进行采样，以保证完全覆盖人耳听觉频率范围。&lt;br&gt;
这就结束了吗？奈奎斯特定理真的能如此简单和完美地指导我们开发电子设备吗？显然不是的。它只是一种理想情况下的描述，实际上我们的仪器采样率都是有限的，存储设备的空间也是有限的，这就意味着很多时候我们的采样率并不能达到要求的 2 倍于最高频率（我们称之为奈奎斯特频率，以下简称 Nf），而这时候，我们就遇到了采样过程的最大问题 —— 混叠。&lt;/p&gt;
&lt;p&gt;这里还有一个小插曲，你可能会说，采样之后的数字信号是离散的数据点，它怎么能够无损转换回模拟信号呢？我难道不可以在数据点之间随便画我想要的图形吗？&lt;br&gt;
很抱歉，你确实不可以。这就是奈奎斯特采样定理的美丽之处了，它从数学上证明了，我们还原回去的那个信号，就是这一段数字信号转换到模拟信号时的唯一解。如果你试图在其中画更多的内容，那么它就会产生高于奈奎斯特频率的内容，那么在还原时由于频率的限制，这些内容就会丢失，最后仍然会变成原来的波形。&lt;/p&gt;
&lt;h4 id=&#34;223-混叠&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#223-混叠&#34;&gt;#&lt;/a&gt; 2.2.3 混叠&lt;/h4&gt;
&lt;p&gt;什么是混叠（Aliasing）？&lt;br&gt;
我们从一个生活中常见的例子来说明 —— 车轮效应。&lt;br&gt;
如果你在电视上看节目，或者自己拍摄视频，然后画面里包含了汽车、自行车的车轮运动，你可能会注意到一个奇怪的现象：当车从停止开始加速时，你看到画面里的车轮逐渐加快；但当加速到一定水平后，不仅车轮没有更快，反而逐渐开始减速，直到某个时候车轮在画面里看起来跟静止一样；如果车继续加速，你甚至会看到车轮开始反方向旋转。&lt;br&gt;
没错，这就是混叠；确切来说，是图像信息在时间域上的混叠。&lt;br&gt;
发生车轮效应的原因是，摄像机的拍摄并不是记录连续的运动画面，而是相当于一个快速连拍的过程，它每秒拍摄一定数量（一般是 24 或 30）的照片，然后在你观看视频的时候以相同的速度快速播放照片；由于人眼的视觉暂留，我们就看到的连续的运动画面。&lt;br&gt;
但是，你可能已经注意到了，这里摄像机并没有记录原始的连续画面，它的工作更像是一个 “采样” 的过程。是的，这确实是一种采样，并且我们看到了采样过程中最大的问题：混叠。它发生在采样速率小于 Nf 的时候，并且会导致一些严重的后果（例如车轮反转）。&lt;br&gt;
理解起来也很容易。假设我们的手机每秒拍 30 张照片（在视频里称为 “帧”），这意味着相邻两帧的间隔是 1/30s=33.3ms。如果车轮的运动速度够快，那么就可能发生一个情况：在这 33.3ms 的时间间隔之内，车轮刚好转过了一圈（或 1/n 圈，取决于车轮形状），这意味着第二帧和第一帧的画面是完全一样的。以此类推，如果车速维持在这个水平，那么我们将看到车轮一直静止。&lt;br&gt;
在信号领域，混叠的含义几乎是一样的，当我们的信号包含了大于采样率的频率，此时就会发生混叠现象，这会向已经采样的数据添加伪影，并且一旦它进入了数字信号，就无法消除。&lt;br&gt;
* 更多信息和通俗的动画解释：&lt;a href=&#34;https://www.bilibili.com/video/BV14q4y1Z7bx&#34;&gt;点击查看 b 站视频&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;23-傅里叶变换ft&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#23-傅里叶变换ft&#34;&gt;#&lt;/a&gt; 2.3 傅里叶变换（FT）&lt;/h3&gt;
&lt;p&gt;* 本节部分内容源自&lt;a href=&#34;https://www.cnblogs.com/h2zZhou/p/8405717.html&#34;&gt;原文地址&lt;/a&gt;，作者：韩昊&lt;/p&gt;
&lt;p&gt;现在，我们已经获得了一些采样好的数字信号，假设这些信号非常完美，不会发生混叠。我们随时可以用 DAC 过程将其转换回模拟信号，也可以存储在硬盘里以便之后使用。那么，我们还要傅里叶变换干什么？傅里叶变换到底是个什么东西？&lt;br&gt;
我们用一个最直观的方式理解傅里叶变换。&lt;br&gt;
在你的理解中，一段音乐是什么呢？&lt;br&gt;
&lt;img src=&#34;../_resources/d91b563e232fd309b8767eb75ffdb1a3.png&#34; alt=&#34;声波图2.png&#34;&gt;&lt;br&gt;
 这是我们对音乐最普遍的理解，一个随时间变化的振动。&lt;br&gt;
但是，对于精通乐器的人来说，音乐更直观的理解也许是这样的：&lt;br&gt;
&lt;img src=&#34;../_resources/f5352b530b102b22e4fc160fc4bac229.png&#34; alt=&#34;五线谱图.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;好了，傅里叶变换到此结束，我们继续下一章的学习。&lt;br&gt;
什么？这还不够吗？&lt;br&gt;
其实这是一个不太恰当的例子，但它通俗地解释了 FT（傅里叶变换）的过程：将一段随时间变化的声波（时域信息）转换为随时间变化的音调（频域信息）。FT 过程在无限的时间上识别信号，然后把其中的频率信息提取出来，并转换成有限的频率谱图。&lt;br&gt;
不过，我们到底怎么实现 FT 呢，一段声波信号看起来那么复杂、毫无规律，我们怎么提取其中的频率信息？&lt;br&gt;
傅里叶变换认为，所有的叠加波，都可以由有限或无限个已知或已知规律的正弦波叠加而成。而处理正弦波是非常轻松的，只需要找到它的周期，就能知道它的频率，还能得知它的表达式，甚至将其替换为另一个不同频率的正弦波。&lt;br&gt;
如果还不够直观，我们看一下两段音乐的声波图：&lt;br&gt;
&lt;img src=&#34;../_resources/71d799eeb29fc6ba5fbc0693c28c96aa.png&#34; alt=&#34;声波图3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/be31756d0721cf2caaafc700b22aa00e.png&#34; alt=&#34;声波图4.png&#34;&gt;&lt;br&gt;
 上图是电子音乐，包含强烈鼓点、贝斯（低频）声音，而下图则是钢琴曲，这些低频声音很少。&lt;br&gt;
也许你已经看出来其中的区别了，低频声音占比高的声波，它的图像会呈现一个十分 “低频” 的起伏；而在同样的窗口内，低频占比小的声波则显得 “复杂” 很多，并且缺乏更大的起伏波浪。仔细观察上图，其实在起伏的过程中也包含很多小的尖刺，实际上这就是低频声音与高频声音叠加之后的结果。&lt;br&gt;
现在，你已经掌握了用肉眼做傅里叶变换的能力（），但是这个计算精度很差，也只能区分少数的几个频率（这就是为什么人来算傅里叶变换几乎不可能的原因）。不过，计算机很擅长这个，让它来做 FT（确切来说是 FFT，快速傅里叶变换，是针对计算机的一种优化算法），我们就能得到音乐的频谱图（颜色越亮表示声音强度越高）：&lt;br&gt;
&lt;img src=&#34;../_resources/f55b89e1692387413e2ee5f233dc93bb.png&#34; alt=&#34;频谱图.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;（准确地说，这张图是频谱随时间变化的图，因为音乐信号中的频率信息时刻变化）&lt;br&gt;
这个图对于音频工程师来说简直就是一个神器；把声波转换为频率信息，我们可以发现很多原来不能发现的错误和问题；如果一些乐器声音太大导致刺耳的话，频谱图上就能看到高频部分的强度很高。&lt;br&gt;
在其它需要分析信号的领域，FT 同样是好用的工具。它把复杂的信号做了简化，让我们能从另一个维度（视角）来观察信号。&lt;br&gt;
* 如果还感有余力，则可以详细了解拉普拉斯变换，它又从另一个维度理解了信号。&lt;/p&gt;
&lt;h2 id=&#34;三-ft在ftir中的具体原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-ft在ftir中的具体原理&#34;&gt;#&lt;/a&gt; 三、FT 在 FTIR 中的具体原理&lt;/h2&gt;
&lt;h3 id=&#34;31-仪器工作流程详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#31-仪器工作流程详解&#34;&gt;#&lt;/a&gt; 3.1 仪器工作流程详解&lt;/h3&gt;
&lt;p&gt;对于 FTIR 而言，我们有红外光源、干涉仪（包含两个反射镜，一个是动镜，一个是定镜），He-Ne 激光器，样品池，检测器，计算机系统。红外光源会持续发射连续的红外光谱，而动镜则利用激光校准、通过电机来调整位置，使之能够在确定的距离上进行移动；入射红外光在透镜作用下分成两束光，并在经过动镜和定镜后再次合为一束，在这个过程中两束光交汇即产生干涉现象，而其相位差就由动镜位置决定。动镜不断移动，干涉相位也在不断变化，这一束干涉光送入样品池后被吸收一部分，最后进入检测器和信号系统中。&lt;br&gt;
&lt;img src=&#34;../_resources/d156e5d7fb71c932d8ebc2153d08941e.png&#34; alt=&#34;光线走向FTIR.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这张图很好地解释了 FTIR 中各光线的走向。其中，Beamsplitter 是光波分束器，也叫半透半反射镜，它的作用是将红外光源发射的光线分为两束，一束为绿色实线，另一束为红色实线；它们分别到达定镜和动镜，并被反射回来（反射光用绿色、红色虚线表示）。反射光到达分束器时也会发生同样的现象，我们需要的光线是绿色穿透线和红色反射线（虚线），它们在分束器处就会发生干涉现象，最后干涉光到达样品。&lt;/p&gt;
&lt;h3 id=&#34;32-信号检测与采样&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#32-信号检测与采样&#34;&gt;#&lt;/a&gt; 3.2 信号检测与采样&lt;/h3&gt;
&lt;p&gt;通过前文信号与系统部分的学习，我们知道，仪器是不能处理连续信号的，必须通过采样、转换为数字信号才可以进行处理和储存。不过，与音频（和大多数）信号不同的是，FTIR 中信号并不是随时间变化，而是随动镜位置变化的。当动镜固定在一个位置时，得到的信号永远是同一个值。这就给了我们的仪器一些 “可乘之机”。&lt;br&gt;
如果了解过示波器或相关产品，那么你一定会知道，现在的实验室示波器带宽一般不会超过 10GHz（最大带宽，指在这个频率以内的信号都能被较为准确地还原和记录），而红外光的频率在 300GHz 到 430THz 之间，它们之间的差距非常大；尽管这个对比并不恰当，但我们依然能发现，通过时间来采样显然是不合适的。&lt;br&gt;
理解了这些，我们就能知道 FTIR 到底是如何采集数据的了；动镜每次移动很短的距离，然后两束光的相位会发生变化（光程差改变），进而引起干涉发生在不同的光频率上。这个动镜单次移动的距离非常短，以至于要单独用 He-Ne 激光来进行位置调整。具体是如何做到的，我并没有找到对应的资料，如果有同学知道可以在评论区告知。&lt;/p&gt;
&lt;h3 id=&#34;33-数据处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#33-数据处理&#34;&gt;#&lt;/a&gt; 3.3 数据处理&lt;/h3&gt;
&lt;p&gt;现在，动镜完整地移动了一个循环，其中每次停顿的时候检测器都记录了一个数值，这个数值代表动镜在这个位置的时候这种干涉光导致的透过程度。将这些数值与动镜位置的关系作图，即得干涉图。对干涉图作 FFT 运算，即得每个频率（波数）下的吸光度（透过率）。&lt;br&gt;
如果难以理解，这里有一个解释的过程。&lt;br&gt;
假设我们的红外光源只会发射两个频率的波（即两个单色光），它们的频率有一定的差异。现在，这两束光经过了一次完整的工作循环，则在干涉仪中，两束光会发生干涉现象，且这个干涉会随动镜位置的改变而变化。我们将动镜的位置类比到音频信号中的时间，将检测器的结果理解为量化后的强度值，则得到的干涉图实际上是一种强度 - 时间的时域图；FFT 可以将其转变为光谱图，实际上是一种强度 - 频率（波数）的频域图。只不过在音频信号中，频率指的是振动次数 / 秒，而光谱中频率指的是波数 / 厘米。&lt;br&gt;
&lt;img src=&#34;../_resources/bb116765d12239882d80f86789823e40.png&#34; alt=&#34;干涉与谱图.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;左图为干涉图，右图为光谱图。可以将干涉图类比为时域信号图（如声波图），将光谱图类比为频域信号图（频谱图）。&lt;/p&gt;
&lt;h2 id=&#34;四-总结与展望&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-总结与展望&#34;&gt;#&lt;/a&gt; 四、总结与展望&lt;/h2&gt;
&lt;h3 id=&#34;41-总结与心得&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#41-总结与心得&#34;&gt;#&lt;/a&gt; 4.1 总结与心得&lt;/h3&gt;
&lt;p&gt;FTIR 是目前应用最多的红外光谱分析原理，因为它与标准的红外光谱分析法相比，具有检测速度快、灵敏度更高、信噪比更高等优势。但目前大学相关仪器分析教材中并未详细描述 FTIR 的原理，甚至网络上都很难直接搜索到 FTIR 的详细原理（大部分都是以某乎的回答形式，而那些回答要么直接抄教材、FFT 部分一笔带过，要么过于复杂、直接摆上一长串的变换公式，这对于想稍微深入理解但又没有学习过信号与系统的化学相关专业学生来说实在不友好）。因此，我在查找了大量的资料的情况下才有了撰写这篇文章的想法。&lt;br&gt;
我并不是多学位、辅修第二专业的学生，但我对音频处理、电子工程都有所了解和学习。这一次在食品专业课程中看到了相关的技术，我几乎是瞬间就产生了浓厚的兴趣。尽管学习的过程十分艰难，这篇文章最终还是诞生了，以期有相同兴趣的同学可以得到帮助。&lt;/p&gt;
&lt;h3 id=&#34;42-未来展望&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#42-未来展望&#34;&gt;#&lt;/a&gt; 4.2 未来展望&lt;/h3&gt;
&lt;p&gt;由于大三时期学习事务繁多，本文从 2022 年 11 月 22 日开始编写，到 26 日了才勉强算接近尾声。因此，文章内仍然有很多错误没能及时发现与更正，若能指正，感激不尽。&lt;br&gt;
实际上我还学习了更多的内容，例如旁瓣峰与窗函数、信号补零的影响等等，但最终都并未写入本文。若有兴趣了解，可联系我提供相关学习资料地址等。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E9%9D%92%E7%BE%BD_blog%E5%BB%BA%E7%AB%8B%E5%AE%8C%E6%88%90%EF%BC%81/</guid>
            <title>博客成功建立！</title>
            <link>https://zjxdiu.github.io/blog/%E9%9D%92%E7%BE%BD_blog%E5%BB%BA%E7%AB%8B%E5%AE%8C%E6%88%90%EF%BC%81/</link>
            <category>日常</category>
            <category>开发</category>
            <category>测试</category>
            <pubDate>Thu, 24 Nov 2022 21:27:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;关于青羽&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于青羽&#34;&gt;#&lt;/a&gt; 关于青羽&lt;/h2&gt;
&lt;p&gt;你好，我是 zjxdiu，在这个空间里我也叫青羽 b（￣▽￣）d&lt;br&gt;
 其实这个名字应该会和其他人的重吧，但是我一直觉得叫自己 zjxdiu 也太奇怪了（下面会说这个 id 的由来），然后当我试图想一个符合我自设的名字的时候，“青” 和 “羽” 这两个发音就出现在脑海里（就是 “Pop” 一下就冒出来了），所以我觉得叫自己青羽似乎也不错。&lt;br&gt;
自设内容会慢慢完善，单独放在 “关于” 里。谁不希望把自己塑造成最喜欢的样子呢，现在我有了自己的网络空间，我就是这里的神（？）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;关于zjxdiu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于zjxdiu&#34;&gt;#&lt;/a&gt; 关于 zjxdiu&lt;/h2&gt;
&lt;p&gt;这是我的网络常用 id，一些平台里搜索这个 id 找到的大概都是我。&lt;br&gt;
它的来源其实有点蠢（dumb）&lt;br&gt;
这个 id 分成两部分，前面是 zjx，也就是我的名字首字母拼一起；后面是 diu，它是源于粤语里的一句脏话，然后初中的时候班上同学天天把 diu 挂在嘴边。&lt;br&gt;
这还不是全部，当我辗转于各大 mc 服务器时，我意外地发现，diu 这个 id 被占用的概率很低，于是那段时间我的 minecraft 用户名一直叫 diu。&lt;br&gt;
再长大一点，我觉得只叫 diu 也很容易听出一些低俗感，所以我把两部分拼起来，变成了 zjxdiu。&lt;br&gt;
虽然还是很难通过英语来阅读这个词，但它确实是伴随着我到大学，一路走过来的 id。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;个人资料&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#个人资料&#34;&gt;#&lt;/a&gt; 个人资料&lt;/h2&gt;
&lt;p&gt;就读于长沙理工大学，今年大三。&lt;br&gt;
什么领域都想涉及，软件、硬件、网络工程、音乐制作、音频处理、视频剪辑、游戏开发、平面设计… 但实际上并没有哪个是学得很好的。&lt;br&gt;
外表是壮汉，内心世界却很单纯。不愿猜测叵测的人心，却总是被迫卷入一次次的纷争。&lt;br&gt;
这也是我将虚拟名字定为青羽的原因，总是幻想自己如一缕白羽，随青风而去，附于一片枝叶，不为任何人事所困。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;联系方式等&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#联系方式等&#34;&gt;#&lt;/a&gt; 联系方式等&lt;/h2&gt;
&lt;p&gt;这个博客提供很多好友服务，主要针对（之后会有的）幻想世界，包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对世界观作出修改和补充&lt;/li&gt;
&lt;li&gt;提交自己的角色设定&lt;/li&gt;
&lt;li&gt;获得免费的 AI 角色图集&lt;/li&gt;
&lt;li&gt;更多内容尽请期待&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为我不会后端，也不会前端（），所以这里不提供评论服务。如果想发表吐槽、评论、意见等，可以通过邮箱告知；我会不定期进行更新，加入一些有意思的内容。&lt;br&gt;
可以通过以下方式联系我：&lt;br&gt;
常用平台 id：zjxdiu&lt;br&gt;
QQ：2987631086&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请在添加好友时说明你是从哪里找到我号码的，否则可能不会同意申请&lt;br&gt;
 E-mail：zjxdiu@qq.com&lt;/li&gt;
&lt;li&gt;可以用于提交各种东西，向我提问，等等&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;友情链接功能还没调试好，暂时不开放…&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
