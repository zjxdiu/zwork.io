{
    "version": "https://jsonfeed.org/version/1",
    "title": "青羽~blog site • All posts by \"学习\" category",
    "description": "Shadow in front implying sun behind",
    "home_page_url": "https://zjxdiu.github.io",
    "items": [
        {
            "id": "https://zjxdiu.github.io/blog/ipv6_toss/",
            "url": "https://zjxdiu.github.io/blog/ipv6_toss/",
            "title": "记一次折腾电信ipv6中的各种问题",
            "date_published": "2023-01-20T13:37:00.000Z",
            "content_html": "<p>阅前提示：本文约 5000 字，预计阅读时长 &gt; 5 分钟。</p>\n<h2 id=\"起因\"><a class=\"markdownIt-Anchor\" href=\"#起因\">#</a> 起因</h2>\n<p>由于想跟好友联机 minecraft，而使用 natfrp 做内网穿透时发现有很多问题，包括延迟高且不稳定、速率低、流量限制、高峰时期断连等。刚好想起来家里的网络已经被我启用了 ipv6，因此试图使用 ipv6 来直接对公网开放 minecraft 服务器。</p>\n<h2 id=\"开始第一次尝试\"><a class=\"markdownIt-Anchor\" href=\"#开始第一次尝试\">#</a> 开始第一次尝试</h2>\n<p><strong>当前状态：</strong></p>\n<ul>\n<li>光猫使用路由模式，自主拨号并获取两种 ip 地址（除非特殊说明，否则以下简称 ip）</li>\n<li>无线路由器（下简称路由器）使用路由模式</li>\n<li>所有设备连接在路由器上，并能获取到 ip</li>\n</ul>\n<p><img src=\"../_resources/a941e7dad288e2bd65c297c76503f111.png\" alt=\"a941e7dad288e2bd65c297c76503f111.png\"></p>\n<p><strong>当前问题：</strong></p>\n<ul>\n<li>首先尝试外网直接连接服务器 ipv6，失败</li>\n<li>外网无法 ping 通任何内网主机</li>\n<li>光猫获取到的 ipv6 地址仍然无法通过外网 ping 通</li>\n<li>在光猫中设置端口映射或 DMZ 主机，无效</li>\n</ul>\n<p>实际上，上述内容已经花了我一下午来检查和排查；网上搜索相关内容，有人说<s>获取到的 ipv6 是 240e 开头的，说明是经过了 NAT（类似 ipv4，所以肯定访问不到）</s>；但是这种说法显然有问题，首先 ipv6 只有在特殊环境下才需要 NAT，其次 2 开头的地址至少不是内网地址。<br>\n另有说法称，运营商（我用的是电信）会用防火墙屏蔽入站流量，防止你开服务器。根据我的实验，这个说法是正确的。</p>\n<p>随后开始折腾，既然防火墙阻碍了我，那我关掉就好。<br>\n但是现实很惨淡，运营商早就猜到你会搞这一手，所以直接不允许你关闭防火墙。<br>\n这里包括了最后的那个防止 ICMP 包攻击，还有其他的防火墙直接不显示。<br>\n<img src=\"../_resources/7d186301818af5165a407c1751fb848c.png\" alt=\"7d186301818af5165a407c1751fb848c.png\"></p>\n<h3 id=\"换个地方拨号\"><a class=\"markdownIt-Anchor\" href=\"#换个地方拨号\">#</a> 换个地方拨号？</h3>\n<p>网上提供了一种解决思路，即光猫改桥接、使用路由器进行拨号；这样做有一些好处，例如路由器的性能更强、可以提供更快的网速，以及很高的可玩性、灵活性等等，这里直接把路由器换成软路由就能实现非常多的玩法，因此我就着手开始改桥接。</p>\n<p>改的过程实际上非常简单，找到宽带的账号密码，进入光猫的超级用户，然后直接改桥接即可。<br>\n<img src=\"../_resources/bc81d148f88500f57dbadabcf8080770.png\" alt=\"bc81d148f88500f57dbadabcf8080770.png\"></p>\n<hr>\n<p>随后，将路由器设置为 PPPoE 拨号连接；这里就不放图了，各家路由器的配置流程都是一回事。<br>\n关闭路由器的防火墙，现在，所有的设备又能重新获取到 ip，且具有公网 ipv6 地址。当然由于 Windows 防火墙的配置，需要关闭 Windows 的防火墙才能从外网 ping 通。<br>\n大获全胜！网速也提升到了 570M（家里办理的 500M 宽带，如果直接从光猫拨号 + 路由，则速度最高 470M）<br>\n<img src=\"../_resources/cbdb76297f0af4d4d3837f421060eb67.png\" alt=\"cbdb76297f0af4d4d3837f421060eb67.png\"></p>\n<p>同时，Minecraft 也能正常从外网通过 ipv6 连接，看起来一切完美。</p>\n<hr>\n<h2 id=\"核心问题网页无法访问\"><a class=\"markdownIt-Anchor\" href=\"#核心问题网页无法访问\">#</a> 核心问题：网页无法访问</h2>\n<p>一切完美？当然是不可能的。一定会出问题，而且是大问题。<br>\n配置好 ipv6 之后，一开始所有设备工作正常，网速和解析速度起飞。<br>\n然后，用了半个小时左右，问题开始逐步显现。<br>\n最开始，我在网上搜索一个 Windows 方面的配置问题，并且点进去了一个博客园的链接。然后，网页并没有按照我预想中的那样飞快加载，而是不断转圈。<br>\n最后：<br>\n<img src=\"../_resources/84c01f9cc1ebf56595e7d025fc4a0617.png\" alt=\"84c01f9cc1ebf56595e7d025fc4a0617.png\"></p>\n<p>一开始我以为这是必应的中转链接出现问题了（百度日常），因为点击必应的搜索结果并不是直接访问目标网址，而是先通过一个必应的链接重定向到目标。这个重定向有时候会失败，是正常的。但是，我直接访问目标网址时，居然也不能进去，这就非常奇怪了。<br>\n这时候我还是乐观的心态，认为是博客园的服务器出了问题，也没有去其它设备上尝试。但我仍然重视了这个问题，并立即去搜索解决方法。因为是开了路由器拨号 + ipv6 之后才出现的问题，所以查找方向也很明确了。结果，就在我查找的过程中，发现了更多的问题。<br>\n百度经验、百度知道、百度贴吧、知乎… 这些网站一个接一个地挂掉；有时候网站一开始能正常访问，再开的时候就加载不出 JS 和 CSS（变成了没有渲染的样式，仅限知乎），然后就是一样的不响应。症状跟博客园完全一致，控制台里没有任何有效信息，只有一个响应超时。</p>\n<hr>\n<h3 id=\"先恢复正常访问\"><a class=\"markdownIt-Anchor\" href=\"#先恢复正常访问\">#</a> 先恢复正常访问</h3>\n<p>一通摸索之后，我找到了暂时恢复的方法：在网卡选项里禁用 ipv6（Internet 协议版本 6）。<br>\n禁用后，所有网页恢复正常，但这显然不可取，因为我的目的就是使用 ipv6，而禁用它也就丧失了所有 ipv6 能力。<br>\n需要注意的是，现在出问题的网站都不是纯 ipv6 站点，有些是纯 ipv4 站点，但双栈域名居多。这时候访问纯 ipv6 网站是全部成功的，ipv6 测试也是全绿通过，并且无论何种类型的网站都有大量能成功访问的。</p>\n<h3 id=\"退一步试试\"><a class=\"markdownIt-Anchor\" href=\"#退一步试试\">#</a> 退一步试试</h3>\n<p>退一步，指的就是我找到一种方法，让浏览器只使用或优先使用 ipv4 进行访问。<br>\n因为出问题的只有浏览器，我电脑里其它软件全都正常运行。<br>\n<em>后续补充：今天发现 Windows 版的微信也不能正常使用，二维码加载不出来，禁用 ipv6 后恢复。</em>。<br>\n但是，网上相关的教程极少甚至没有，偶有几个是针对 Firefox 或 chrome 的，而我使用的是 edge；就算我能参考 chrome，教程也是针对 Linux 而非 Windows。</p>\n<h3 id=\"再退一步\"><a class=\"markdownIt-Anchor\" href=\"#再退一步\">#</a> 再退一步</h3>\n<p>好的，如果浏览器不行，那我就找个方法让整个操作系统都优先使用 ipv4。<br>\n微软提供了一个文档，通过<a href=\"https://learn.microsoft.com/en-US/troubleshoot/windows-server/networking/configure-ipv6-in-windows\">修改注册表的方法</a>来实现全局优先 ipv4、禁用 ipv6、优先 ipv6 等等。<br>\n一看到这里，我立即兴奋地尝试了。改了注册表，重启，访问：</p>\n<p><code>ERR_TIMED_OUT</code>  .png</p>\n<p>好，居然没用。微软，不愧是你。<br>\n重启很多次无效，当时已经半夜 2:30，我没有了折腾的心情，只想赶紧睡觉。</p>\n<h2 id=\"第一次折腾失败\"><a class=\"markdownIt-Anchor\" href=\"#第一次折腾失败\">#</a> 第一次折腾失败</h2>\n<p>网上又找了很多相同症状的用户，解决方案要么是改注册表，要么是说路由器兼容性有问题。<br>\n好吧，反正跟我联机的同学也不是很在意，natfrp 似乎还能继续用用。<br>\n于是，彻底宣告失败，我重新改回了光猫拨号、路由桥接，随后所有网络恢复正常（除了外网还是不能访问这里的所有 ipv6；当然，也包括 ipv4，因为有 NAT）。</p>\n<p>这就结束了吗？怎么可能，不搞到好用我是不会罢休的。<br>\n于是，第二天，我又开始了新一轮的折腾。</p>\n<hr>\n<h2 id=\"第二次尝试\"><a class=\"markdownIt-Anchor\" href=\"#第二次尝试\">#</a> 第二次尝试</h2>\n<p>重新尝试，同样的光猫改桥接，同样的路由器拨号。同样的正常 ipv6 公网访问，但是这一次似乎是运气比较好，网页访问全部正常使用，并且坚持了至少 4 个小时。<br>\n中途离家 4 小时，回来之后，惊喜地发现，这些网页又打不开了 😃<br>\n这时候我就已经明白，无论怎么修改电脑或者路由器配置都无效，于是没有再做尝试，转而对现在的情况进行分析，并希望通过其它方法解决需求。</p>\n<h3 id=\"转机\"><a class=\"markdownIt-Anchor\" href=\"#转机\">#</a> 转机</h3>\n<p>在我整理思路的时候，我意识到，实际上我只需要服务器一台电脑能够获取正常入站的 ipv6 地址（正常的 ipv6）即可，其余设备甚至根本不需要启用 ipv6。这时候，我首先想到的就是：</p>\n<h4 id=\"一号多拨\"><a class=\"markdownIt-Anchor\" href=\"#一号多拨\">#</a> 一号多拨</h4>\n<p>一号多拨，指的是我通过同一个光猫，使用同一个宽带账号，分别在两台设备上进行拨号。<br>\n我的最初想法是，服务器电脑直连光猫并自己拨号获取正常的 ipv6 地址，同时路由器也自己拨号，但只启用 ipv4。<br>\n网上搜索发现，这种方法当然是可行的，前提是运营商支持多拨。</p>\n<p><code>折腾中</code></p>\n<p>没有任何侥幸，拨号失败。电脑上尝试第二次拨号时直接返回错误 629。</p>\n<p>再换一种角度，重新分析我的需求。服务器能使用正常的 ipv6，同时其余设备仅需要 ipv4（最多需要 ipv6 内网而非公网访问）。因此，我做了如下操作，来使得二者兼顾。</p>\n<hr>\n<h2 id=\"最终如何解决\"><a class=\"markdownIt-Anchor\" href=\"#最终如何解决\">#</a> 最终如何解决</h2>\n<p>如果你的需求和遇到的问题跟我完全一样，那么也许可以参考我的方法来临时解决。<br>\n<strong>提示：最终的解决方案也并不完美，只不过暂时保证了两边可以都解决主要矛盾</strong><br>\n以下是我的解决方案：</p>\n<h3 id=\"1-将路由器的内网ipv6地址分发从无状态改为有状态\"><a class=\"markdownIt-Anchor\" href=\"#1-将路由器的内网ipv6地址分发从无状态改为有状态\">#</a> 1. 将路由器的内网 ipv6 地址分发从无状态改为有状态。</h3>\n<p>无状态获取指的是机器自己配置地址，然后通过 NDP 等方式确定地址有效性即可；有状态获取类似 DHCP，不过分配的地址是 ipv6。<br>\n这一步解决了手机联网的问题；由于我的网络环境中手机为主要设备，而安卓系统并不支持通过 DHCPv6 进行有状态获取 ipv6 地址；于是所有的手机都只能通过 ipv4 联网，解决了所有上网问题。</p>\n<h3 id=\"2-为电脑配置虚假或者无效的ipv6地址\"><a class=\"markdownIt-Anchor\" href=\"#2-为电脑配置虚假或者无效的ipv6地址\">#</a> 2.  为电脑配置虚假或者无效的 ipv6 地址</h3>\n<p>这是我在测试的时候忽然想到的主意，既然 ipv4 地址在手动配置错误的情况下无法联网，那么 ipv6 应该也是一样的。<br>\nipv6 中同样有很多保留地址，例如 <code>fe80</code>  开头的地址表示本地链路地址，无法进行跨子网路由，因此给我自己的电脑配置一个 <code>fe80::1</code>  的地址即可。<br>\n配置后，网卡状态中 IPv6 连接变为<strong>无 Internet 访问权限</strong>，使用 <code>ipconfig /all</code>  查看 IP 地址，发现手动配置的 ipv6 地址变成了<strong>本地链接 IPv6 地址</strong>。<br>\n<img src=\"../_resources/054913f5d395b1e809f0d7830e64c948.png\" alt=\"054913f5d395b1e809f0d7830e64c948.png\"><br>\n 此外，这里网卡仍然获取到了一个 IPv6 地址，但后面提示（<strong>复制</strong>），检查其地址发现这个地址是我的服务器电脑的公网 ipv6 地址（因此在此处打码作保护）；这可能是一些其它方面的机制，但并不影响服务器和我的电脑的正常工作。同时，由于内网 ipv6 地址被正常配置，我仍然可以通过内网 ipv6 来访问服务器（包括文件服务器、网页服务器、minecraft 和远程桌面）。<br>\n这一步解决了环境中主要的电脑设备：我自己的使用需求。当然没有完全解决，纯 ipv4 模式下访问部分双栈网站时速度还是比较慢，但能够正常使用已经是极其难得了。</p>\n<h3 id=\"3-为windows-11配置\"><a class=\"markdownIt-Anchor\" href=\"#3-为windows-11配置\">#</a> 3. 为 Windows 11 配置</h3>\n<p>环境中存在另一台常用的电脑，而它搭载的是 Windows 11 家庭版。<br>\n在 win11 下可以执行相同的步骤进行配置，只不过需要多出一个步骤：<strong>你需要在系统设置中手动设置 ipv6 DNS，而不能使用自动获取。</strong><br>\n这一步是因为，即便手动配置了 ipv6 地址，win11 似乎也不会立即使用，而是先试图通过 DHCP 等方法获取 ipv6 地址以及 DNS 服务器等；而在自动获取 DNS 的过程中，路由器很可能就为它分配了一个 ipv6 地址，导致我们自己设置的地址完全变成内网地址，而无法实现目的。</p>\n<hr>\n<h2 id=\"结语\"><a class=\"markdownIt-Anchor\" href=\"#结语\">#</a> 结语</h2>\n<p>至此，全部流程结束，解决方案全部执行。服务器正常接受公网入站流量，其余设备配置后均能实现正常上网。</p>\n<p>但是，我并不对现在的解决方案满意。原因很简单，我开 ipv6 不仅是为了服务器使用，更是为了提高日常上网体验，同时接轨最新技术（虽然 ipv6 都是 12 年前的玩意了）；现在虽然解决了问题，但并未达成全部目的，因为除了服务器主机以外没有设备能够正常使用 ipv6 的。这个方法顶多也就临时用用，实际上我也就这一个寒假的需求，假期结束返校前肯定会恢复光猫拨号的，因为服务器主机之后只作为内网打印服务器，不再有公网访问需求。此外，每次新加一台电脑，都需要这样设置一遍无效的 ipv6 地址，以便正常访问网页。<br>\n所以，整体看下来，其实只是在两边的矛盾中取了一个居中妥协的值，为主要矛盾作了让步。我也不是每天都会折腾网络，更多时候还是希望它日常使用能稳定；但我又不希望放弃服务器的公网访问，因此这两者就是核心问题，而最终的方案也就向这两个问题进行妥协。<br>\nAnyway，反正问题算是解决了，但愿 ipv6 的部署进度还能快一点吧（</p>\n<hr>\n<p>明天就是除夕了，浅放一张 AI 画的胡桃吧，祝大家新年快乐！<br>\n<em>胡桃没画成，人要么太大要么太小，随便搞了个背景算了（）</em><br>\n<img src=\"../_resources/7c8d8e5459a9f8cd83c33281ca1aa262.png\" alt=\"7c8d8e5459a9f8cd83c33281ca1aa262.png\"></p>\n",
            "tags": [
                "游戏",
                "网络"
            ]
        },
        {
            "id": "https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/",
            "url": "https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/",
            "title": "超频你的显示器，获得更佳的流畅体验",
            "date_published": "2022-12-02T06:33:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>显示器超频？显示器还能超频？<br>\n当然是可以的。从定义上来说，任何以时钟频率进行周期性工作的硬件都有超频的说法，只不过我们平时主要讨论的是 CPU、显卡、内存等核心电脑硬件的超频。<br>\n某种意义上来说，显示器超频实际上是一个很古老的话题。在以前的 “大屁股” 显示器（即 CRT 技术的显示器）时代，超频就已经存在了。由于最开始的显示器都是纯模拟信号，输入的电压经过放大后直接作用于偏转电场，从而实现画面绘制，那时候的显示器超频是真正意义上的物理超频。只要阴极射线管的水平够好、电场板的素质优秀，显示器的各项工作参数完全可以自定义。<br>\n后来用了 LCD 和纯数字信号传输，超频的内容发生了一些变化；不过多数面板仍然会有超频能力，这取决于厂家的配置与面板本身的素质。<br>\n<img src=\"../_resources/95a04f46fce4449551b3b11e14510900.png\" alt=\"95a04f46fce4449551b3b11e14510900.png\"><br>\n<em> 图：LCD 与 CRT 显示器原理对比</em></p>\n<h2 id=\"什么是显示器超频\"><a class=\"markdownIt-Anchor\" href=\"#什么是显示器超频\">#</a> 什么是显示器超频</h2>\n<p>所谓的显示器超频，实际上是针对其运行参数<strong>垂直刷新率</strong>而言的。<br>\n在以前的 CRT 显示器上，显示画面需要电子枪从左往右依次发射电子、扫描一行，点亮一行的荧光像素，随后在垂直同步信号的作用下迅速回到左侧，同时跳转到下一行，重新进行下一行的扫描。以此类推，直到整个荧幕被扫描完成后，电场会使电子偏转到左上角，重复这个过程。（此处还有水平同步信号在起作用，不详细说明）<br>\n玩过模拟示波器的朋友肯定能理解垂直信号的作用，实际上就是示波器中的扫描电路，选择合适的扫描信号就能使波形稳定。<br>\n因此，如果能调节垂直（和水平）同步信号，使其可以在更短的时间内完成一次完整的扫描，则显示器的<strong>刷新率</strong>就能得到提升。<br>\n这就是显示器超频，我们希望提升其垂直刷新率，使其比标称值更高，这样才会有更好的体验。</p>\n<h2 id=\"显示器超频的影响因素\"><a class=\"markdownIt-Anchor\" href=\"#显示器超频的影响因素\">#</a> 显示器超频的影响因素</h2>\n<p>要完成一次好的显示器超频，我们通常认为有以下几点因素会影响结果。</p>\n<ul>\n<li>面板类型与素质</li>\n<li>厂商限制</li>\n<li>接口类型与传输质量</li>\n<li>合适的配置</li>\n<li>其它因素</li>\n</ul>\n<p>以上因素中，面板和厂商在购买后就固定了，无法更改。<br>\n接口类型以 DP、HDMI（高版本）为优。</p>\n<p><strong>请不要将显示器的超频能力纳入选购的考虑范围之中，如果想获得高刷屏的体验，那么建议选购原生的高刷显示器。本文的核心目的是科普，而不是鼓励大家要求厂商提供超频能力。</strong></p>\n<h2 id=\"如何超频\"><a class=\"markdownIt-Anchor\" href=\"#如何超频\">#</a> 如何超频</h2>\n<h3 id=\"超频前的准备\"><a class=\"markdownIt-Anchor\" href=\"#超频前的准备\">#</a> 超频前的准备</h3>\n<ol>\n<li>检查接口协议与传输质量<br>\n请使用优质 DP 或 HDMI 线连接电脑与显示器，以获得更佳的超频能力。<br>\n该项主要影响传输带宽，对于特定版本的 DP 或 HDMI 接口而言，其能提供的带宽是有限的。详情可查阅百度。<br>\n只需要记得一点，如果带宽受限，那么降低分辨率有助于获得更高的刷新率。但是对于多数平民显示器而言，即使使用最高分辨率，也不太会出现带宽不足的问题。</li>\n<li>检查视频信号源<br>\n目前来说，英特尔核心显卡并不支持显示器超频（至少笔记本的不行）。如果您使用台式机，请确保视频信号是独立显卡输出的。如果使用笔记本，请连接到笔记本上的 type-c 接口，一般而言这个接口的显示输出是直接连接独立显卡的。<br>\n如果使用不支持独显直连输出的笔记本（或者没有独显），则大概率不能成功。<br>\n不过，即便如此，您还是可以进行尝试。大多数出厂 60Hz 的显示器都可以直接提升到 75Hz，带来一定程度上的体验提升。不过有一个例外，笔记本自带的屏幕完全不支持超频。</li>\n<li>环境条件<br>\n尽管现代显示器对工作环境的承受范围极大，环境因素的影响极其小，合适的环境仍然有助于提高超频成功率。<br>\n主要包括合适的工作温度（尤其是不能过低），湿度，电压值与稳定性，甚至摆放方向等。</li>\n</ol>\n<h3 id=\"开始超频\"><a class=\"markdownIt-Anchor\" href=\"#开始超频\">#</a> 开始超频</h3>\n<ul>\n<li>对于非独立显卡、英特尔核心显卡：<br>\n请进入显卡控制面板（以下以新版英特尔核心显卡为例）<br>\n<img src=\"../_resources/ce3133202184eb787a2034f31476db94.png\" alt=\"ce3133202184eb787a2034f31476db94.png\"><br>\n 点击<strong>显示器</strong>，<strong>分辨率旁边的加号</strong><br>\n<img src=\"../_resources/245a61028b5e9c9e71d6d6abb786ff57.png\" alt=\"245a61028b5e9c9e71d6d6abb786ff57.png\"><br>\n 检查是否有刷新率的选项。如果有，可以尝试输入目标刷新率，然后单击确定。<br>\n若不成功或没有输入刷新率的地方，则您的显卡不支持硬超频。<br>\n请尝试点击<strong>刷新率</strong>旁的下拉框<br>\n<img src=\"../_resources/319d41963a5966fc42fe60ac72c0cb2f.png\" alt=\"319d41963a5966fc42fe60ac72c0cb2f.png\"><br>\n 若有多个选项，选择最高的。若有 I 和 P 两种，请选择 P。<br>\n至此，显示器超频结束。</li>\n</ul>\n<hr>\n<ul>\n<li>对于英伟达、AMD 独立显卡：<br>\n请进入显卡控制面板（以下以英伟达显卡为例）；应该能在 [开始] 菜单里找到。<br>\n若电脑里找不到该软件，请重装显卡驱动程序。<br>\n<img src=\"../_resources/345495b609471f763f8ec8bfc8df62df.png\" alt=\"345495b609471f763f8ec8bfc8df62df.png\"><br>\n 在屏幕左侧，单击 [更改分辨率]。<br>\n如果没有此选项，则说明显示器没有连接到独立显卡上。<br>\n<img src=\"../_resources/2e632685ea988d1cf03dc6d60b7493ac.png\" alt=\"2e632685ea988d1cf03dc6d60b7493ac.png\"><br>\n 点击 [自定义]。<br>\n<img src=\"../_resources/ec04c76fa5c31fbee854410f0c96b663.png\" alt=\"ec04c76fa5c31fbee854410f0c96b663.png\"><br>\n 勾选 [启用显示器未显示的分辨率]，然后点击 [创建自定义分辨率]。<br>\n<img src=\"../_resources/ed628697647b0ae7a7af0b97615d93e1.png\" alt=\"ed628697647b0ae7a7af0b97615d93e1.png\"><br>\n 在 [刷新率] 中输入目标刷新率，然后可以点击 [测试] 按钮进行测试。<br>\n在 [计时 - 标准] 选项中选择 [协同视频计时标准（CVT）降低清屏时间]，可能有助于提高成功率。<br>\n<img src=\"../_resources/79a358cee11fbd4de054a918720205a4.png\" alt=\"79a358cee11fbd4de054a918720205a4.png\"><br>\n 单击 [测试] 按钮，显示器将黑屏进行切换。<br>\n如果成功，则您将很快看到电脑画面。如果半成功，则可能会看到画面上出现抖动、条纹、异常颜色等。<br>\n如果失败，显示器提示不支持或一直黑屏，等待 15s 后会自动退出测试状态。或者，可以按 Esc 键快速返回。<br>\n当测试到稳定的刷新率后，在提示框中点击 [是]，即可保存该分辨率。<br>\n返回上一步的 [更改刷新率]，应该能在列表最顶上看到刚刚创建的分辨率。<br>\n选中后，单击软件右下角的 [应用]，超频结束。</li>\n</ul>\n<hr>\n<h3 id=\"超频提示\"><a class=\"markdownIt-Anchor\" href=\"#超频提示\">#</a> 超频提示</h3>\n<ul>\n<li>尽管超频一般不会造成伤害，仍可能导致面板发热加剧、液晶老化速率提高等问题。因此，从理论上讲，不建议长时间超频。</li>\n<li>在超频过程中，可以使用以下方法先确定显示器能承受的最大刷新率：\n<ul>\n<li>先将刷新率定到目标值</li>\n<li>若成功，则进一步定到下个目标值；否则，应选择当前刷新率与目标值的中间值。</li>\n<li>重复以上取中值的过程，通过二分法可以快速定位到最大刷新率。</li>\n<li>确定了最大值后，请适当降低到附近合适的数值使用。例如，若最大刷新率为 96Hz，请保持在 90Hz 即可。</li>\n</ul>\n</li>\n<li>若超频过程中显示器出现严重事故（如一直黑屏、闪屏等），请断开视频连接线，然后断开显示器电源；等待几分钟或使其完全放电后重新接入电源，检查显示器是否能正常开机，然后再接入电脑。由于现代显示器的保护功能极佳，真正发生无法挽回事故的可能性极低，近乎不存在，但并不为 0。</li>\n</ul>\n<h3 id=\"超频经验\"><a class=\"markdownIt-Anchor\" href=\"#超频经验\">#</a> 超频经验</h3>\n<p>对于一般的 1080P、60Hz 显示器而言，75Hz 是日常使用的较佳水平。某些素质较高的显示器可能会一路支持到 80、90 甚至 110Hz，全看厂商良心与运气。<br>\n对于 2K、60Hz 的显示器，一般也可以使用 75Hz。我自己的 2K60 显示器最大支持 98Hz，稳定值是 96Hz，最终保持在 90Hz 使用。<br>\n对于 144Hz 的显示器，一般直接上 165Hz 是没有问题的。较好的面板可以尝试 180Hz。<br>\n更高的不知道，我没钱（</p>\n<hr>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>没啥可总结的，超个频，获得更好的体验和更高的风险，这是一种交易。权衡结果全由你自己掌控。<br>\n任何问题欢迎留言！</p>\n",
            "tags": [
                "超频",
                "硬件"
            ]
        },
        {
            "id": "https://zjxdiu.github.io/blog/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/",
            "url": "https://zjxdiu.github.io/blog/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/",
            "title": "使用批处理和Joplin执行并优化Hexo博客工作流程",
            "date_published": "2022-11-27T13:53:00.000Z",
            "content_html": "<p>使用静态部署的方式使用 Hexo，我们经常会遇到一个很烦人的问题，就是部署麻烦。<br>\n每次写一篇文章，就要经历<strong> Hexo clean、Hexo g、Hexo s、Hexo d</strong> 四连，一开始还好，写多了之后烦不胜烦。</p>\n<p>同时，由于我个人使用 Joplin 进行文章撰写，这个软件虽然简洁，但并不好用；图片虽然可以直接复制，但不能修改输出目录，图片资源默认保存在与 <code>/blog/</code>  平行的 <code>/_resources/</code>  文件夹中。</p>\n<p>因此，结合我最为擅长的 batch 脚本语言，我就萌生了使用批处理来优化整个流程的想法。</p>\n<hr>\n<h3 id=\"1-git安装配置不确定是否有必要\"><a class=\"markdownIt-Anchor\" href=\"#1-git安装配置不确定是否有必要\">#</a> 1. Git 安装配置（不确定是否有必要）</h3>\n<p>在安装 Git 的过程中，我们会有一个配置终端的过程，此处其实是建议选择第一项（使用 MinTTY），但我当时选择了第二项即使用系统的 cmd 来作 git bash 的终端。<br>\n<img src=\"../_resources/aca6779be5b5f5c9d88dc1215456c295-2.png\" alt=\"aca6779be5b5f5c9d88dc1215456c295.png\"><br>\n 如果选择了第一项，可能也是能正常使用批处理来代替执行的，应该不用担心。</p>\n<hr>\n<h3 id=\"2-站点配置\"><a class=\"markdownIt-Anchor\" href=\"#2-站点配置\">#</a> 2. 站点配置</h3>\n<p>blog 根目录下的_config.yml 文件：</p>\n<pre><code class=\"hljs yaml\"><span class=\"hljs-string\">......</span>\n<span class=\"hljs-attr\">post_asset_folder:</span> <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-attr\">relative_link:</span> <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-string\">......</span></code></pre>\n<p>使用 Joplin 写文章的话应该关闭这两项（至少我测试下来这样是没问题的）</p>\n<hr>\n<h3 id=\"3-脚本编写\"><a class=\"markdownIt-Anchor\" href=\"#3-脚本编写\">#</a> 3. 脚本编写</h3>\n<p>在 blog 根目录下新建 “程序名.bat”，开始编写功能。<br>\n先放源码：</p>\n<pre><code class=\"hljs batch\">@echo off\nsetlocal EnableDelayedExpansion\ngoto start\n:ac\nrem 请设置%targetlable%变量，以确保正常跳转至目标位置\ncls\ncolor 0F\ngoto %targetlabel%\n:start\nif &quot;%targetlabel%&quot;==&quot;&quot; (set &quot;targetlabel=start&quot;&amp;&amp;goto ac)\necho ------------------------------------------------\necho  1.执行完整的检查和推送blog流程\necho  2.快速上载blog\necho  3.本地预览\necho  4.单独执行指令\necho ------------------------------------------------\necho.\nchoice /c 1234\nif &quot;%errorlevel%&quot;==&quot;4&quot; goto new\nif &quot;%errorlevel%&quot;==&quot;3&quot; (set &quot;targetlabel=local&quot;&amp;&amp;goto ac)\nif &quot;%errorlevel%&quot;==&quot;2&quot; (set &quot;targetlabel=fast&quot;&amp;&amp;goto ac)\nif &quot;%errorlevel%&quot;==&quot;1&quot; (set &quot;targetlabel=full&quot;&amp;&amp;goto ac)\npause&amp;exit\n:new\necho 正在创建新的cmd实例...\necho ------------------------------------------------\necho 命令提示：\necho hexo clean\necho hexo g\necho hexo s\necho hexo d\necho ------------------------------------------------\nstart cmd\necho 按任意键返回菜单...\npause &gt;nul\nset &quot;targetlabel=start&quot;&amp;&amp;goto ac\n:local\necho ------------------------------------------------\necho                  本地预览模式\necho ------------------------------------------------\necho 启动预览...\ncmd /c &quot;hexo clean &amp; hexo g &amp; xcopy D:\\blog\\source\\_posts\\_resources D:\\blog\\public\\blog\\_resources\\ /e /s /y &amp; echo 2&gt;D:\\blog\\.deploy_git\\.nojekyll &amp; start http://localhost:4000/ &amp; hexo s&quot;\necho 按任意键返回菜单...\npause &gt;nul\nset &quot;targetlabel=start&quot;&amp;&amp;goto ac\n:fast\necho ------------------------------------------------\necho                  快速上载blog\necho ------------------------------------------------\ncmd /c &quot;hexo clean &amp; hexo g &amp; xcopy D:\\blog\\source\\_posts\\_resources D:\\blog\\public\\blog\\_resources\\ /e /s /y &amp; echo 2&gt;D:\\blog\\.deploy_git\\.nojekyll &amp; hexo d&quot;\necho ------------------------------------------------\necho 完成，2秒后退出...\nping localhost -n 3 &gt;nul\nexit\n:full\necho ------------------------------------------------\necho                  完整流程向导\necho              按0为确定，按1为跳过\necho ------------------------------------------------\ngoto clean\n:clean\necho 第一步：清理缓存\nchoice /c 01\nif &quot;%errorlevel%&quot;==&quot;2&quot; goto generate\ncmd /c &quot;hexo clean&quot;\ngoto generate\n:generate\necho ------------------------------------------------\necho 第二步：生成页面\nchoice /c 01\nif &quot;%errorlevel%&quot;==&quot;2&quot; goto check\ncmd /c &quot;xcopy D:\\blog\\source\\_posts\\_resources D:\\blog\\public\\blog\\_resources\\ /e /s /y &amp; echo 2&gt;D:\\blog\\.deploy_git\\.nojekyll &amp; hexo g&quot;\ngoto check\n:check\necho ------------------------------------------------\necho 第三步：本地预览\nchoice /c 01\nif &quot;%errorlevel%&quot;==&quot;2&quot; goto deploy\nstart http://localhost:4000/\ncmd /c &quot;hexo s&quot;\ngoto deploy\n:deploy\necho ------------------------------------------------\necho 第四步：上传到远程服务器\nchoice /c 01\nif &quot;%errorlevel%&quot;==&quot;2&quot; goto done\ncmd /c &quot;hexo d&quot;\ngoto done\n:done\necho ------------------------------------------------\necho 流程已完成，按任意键返回菜单...\npause &gt;nul\nset &quot;targetlabel=start&quot;&amp;&amp;goto ac</code></pre>\n<p>我自认为自己的批处理写得都算比较清晰的了，虽然注释很少，但结合文字应该能看懂每一步是在干什么。<br>\n如果要使用，请把里面所有的 <code>D:\\blog\\source\\_posts\\_resources</code>  替换为你 Joplin 每次导出时的资源目录，把所有的 <code>D:\\blog\\public\\blog\\_resources\\</code>  替换为你的博客站点目录，注意不要动 <code>\\public\\...</code>  后面的内容。</p>\n<p>如果要更换功能模块，也应按照这里的写法，使用  <code>cmd /c 命令内容 &amp; 第二条命令 &amp; 后面的很多命令</code>  来执行，除了 start 用于启动网页之外尽量不要直接在批处理中使用模块的命令，否则容易直接闪退。</p>\n<p>创建 <code>.nojekyll</code>  文件的目的是防止 GitHub 忽略掉下划线开头的文件夹，即 <code>_resources</code></p>\n<hr>\n<h3 id=\"4-工作流程\"><a class=\"markdownIt-Anchor\" href=\"#4-工作流程\">#</a> 4. 工作流程</h3>\n<p>现在，我们可以愉快地写文章了。<br>\n打开 Joplin，新建笔记（记得都放在同一个笔记本下），笔记的名字是文件名，写上 Front-matter 内容，之后就如同在 word 中一样写稿。<br>\n图片直接粘贴即可，需要的话修改 [ ] 里的内容，这是属于 markdown 语法的一部分，不详细说明。<br>\n写完的文章直接往 <code>blog\\source\\_posts</code>  里面一存，然后打开脚本按个 2，等两分钟就部署到 Github Pages 上了。<br>\n<strong>愉快地工作吧！</strong><br>\n<img src=\"../_resources/cf0fb99a327ef788a844524d6eb74278.png\" alt=\"cf0fb99a327ef788a844524d6eb74278.png\"></p>\n<p>补充点内容，修改文章稍微有点麻烦，因为 Joplin 非常笨，它不会识别已有的文件，发现重名了直接加后缀，连带着里面的图片也都加后缀、重新复制到 <code>_resources</code>  里面了；对于我这种硬盘空间够、平时图片不多的人来说倒是无所谓，但部署了之后文章会重复显示好几篇。所以不能直接导出文章，需要手动删除旧的，然后再从 Joplin 中导出即可。</p>\n",
            "tags": [
                "软件"
            ]
        },
        {
            "id": "https://zjxdiu.github.io/blog/WPS-word/",
            "url": "https://zjxdiu.github.io/blog/WPS-word/",
            "title": "WPS word如何设置图片背景，如何解决图片变成平铺问题",
            "date_published": "2022-11-26T15:18:00.000Z",
            "content_html": "<h2 id=\"wps-word如何设置图片背景如何解决图片变成平铺问题\"><a class=\"markdownIt-Anchor\" href=\"#wps-word如何设置图片背景如何解决图片变成平铺问题\">#</a> WPS word 如何设置图片背景，如何解决图片变成平铺问题</h2>\n<p>问题描述：在 WPS word 中插入背景图片，导出为 PDF、打印后发现图片变成平铺，如图所示<br>\n<img src=\"../_resources/1bed71e7e0b967daa78642a737810d17.png\" alt=\"1bed71e7e0b967daa78642a737810d17.png\"></p>\n<hr>\n<p>1. 打开需要插入背景图片的文档<br>\n 2. 点击：页面布局、背景、其它背景、纹理<br>\n<img src=\"../_resources/88b258680c69021372dab599663945bd.png\" alt=\"88b258680c69021372dab599663945bd.png\"></p>\n<p>3. 选择 “其它纹理”，选择图片后点击确定<br>\n<img src=\"../_resources/a4d5ca84c954b134351ea2d9c8d9881c.png\" alt=\"a4d5ca84c954b134351ea2d9c8d9881c.png\"></p>\n<p>4. 现在背景图片应该可以正常导出了。</p>\n<hr>\n",
            "tags": [
                "软件"
            ]
        }
    ]
}