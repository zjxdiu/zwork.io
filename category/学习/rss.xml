<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>青羽~blog site • Posts by &#34;学习&#34; category</title>
        <link>https://zjxdiu.github.io</link>
        <description>Shadow in front implying sun behind</description>
        <language>zh-CN</language>
        <pubDate>Fri, 20 Jan 2023 21:37:00 +0800</pubDate>
        <lastBuildDate>Fri, 20 Jan 2023 21:37:00 +0800</lastBuildDate>
        <category>日常</category>
        <category>化学</category>
        <category>仪器分析</category>
        <category>信号处理</category>
        <category>游戏</category>
        <category>网络</category>
        <category>软件</category>
        <category>分享</category>
        <category>超频</category>
        <category>硬件</category>
        <category>生活</category>
        <category>脑洞</category>
        <category>开发</category>
        <category>游戏引擎</category>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/ipv6_toss/</guid>
            <title>记一次折腾电信ipv6中的各种问题</title>
            <link>https://zjxdiu.github.io/blog/ipv6_toss/</link>
            <category>游戏</category>
            <category>网络</category>
            <pubDate>Fri, 20 Jan 2023 21:37:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;阅前提示：本文约 5000 字，预计阅读时长 &amp;gt; 5 分钟。&lt;/p&gt;
&lt;h2 id=&#34;起因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#起因&#34;&gt;#&lt;/a&gt; 起因&lt;/h2&gt;
&lt;p&gt;由于想跟好友联机 minecraft，而使用 natfrp 做内网穿透时发现有很多问题，包括延迟高且不稳定、速率低、流量限制、高峰时期断连等。刚好想起来家里的网络已经被我启用了 ipv6，因此试图使用 ipv6 来直接对公网开放 minecraft 服务器。&lt;/p&gt;
&lt;h2 id=&#34;开始第一次尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始第一次尝试&#34;&gt;#&lt;/a&gt; 开始第一次尝试&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;当前状态：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;光猫使用路由模式，自主拨号并获取两种 ip 地址（除非特殊说明，否则以下简称 ip）&lt;/li&gt;
&lt;li&gt;无线路由器（下简称路由器）使用路由模式&lt;/li&gt;
&lt;li&gt;所有设备连接在路由器上，并能获取到 ip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/a941e7dad288e2bd65c297c76503f111.png&#34; alt=&#34;a941e7dad288e2bd65c297c76503f111.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当前问题：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先尝试外网直接连接服务器 ipv6，失败&lt;/li&gt;
&lt;li&gt;外网无法 ping 通任何内网主机&lt;/li&gt;
&lt;li&gt;光猫获取到的 ipv6 地址仍然无法通过外网 ping 通&lt;/li&gt;
&lt;li&gt;在光猫中设置端口映射或 DMZ 主机，无效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，上述内容已经花了我一下午来检查和排查；网上搜索相关内容，有人说&lt;s&gt;获取到的 ipv6 是 240e 开头的，说明是经过了 NAT（类似 ipv4，所以肯定访问不到）&lt;/s&gt;；但是这种说法显然有问题，首先 ipv6 只有在特殊环境下才需要 NAT，其次 2 开头的地址至少不是内网地址。&lt;br&gt;
另有说法称，运营商（我用的是电信）会用防火墙屏蔽入站流量，防止你开服务器。根据我的实验，这个说法是正确的。&lt;/p&gt;
&lt;p&gt;随后开始折腾，既然防火墙阻碍了我，那我关掉就好。&lt;br&gt;
但是现实很惨淡，运营商早就猜到你会搞这一手，所以直接不允许你关闭防火墙。&lt;br&gt;
这里包括了最后的那个防止 ICMP 包攻击，还有其他的防火墙直接不显示。&lt;br&gt;
&lt;img src=&#34;../_resources/7d186301818af5165a407c1751fb848c.png&#34; alt=&#34;7d186301818af5165a407c1751fb848c.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;换个地方拨号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#换个地方拨号&#34;&gt;#&lt;/a&gt; 换个地方拨号？&lt;/h3&gt;
&lt;p&gt;网上提供了一种解决思路，即光猫改桥接、使用路由器进行拨号；这样做有一些好处，例如路由器的性能更强、可以提供更快的网速，以及很高的可玩性、灵活性等等，这里直接把路由器换成软路由就能实现非常多的玩法，因此我就着手开始改桥接。&lt;/p&gt;
&lt;p&gt;改的过程实际上非常简单，找到宽带的账号密码，进入光猫的超级用户，然后直接改桥接即可。&lt;br&gt;
&lt;img src=&#34;../_resources/bc81d148f88500f57dbadabcf8080770.png&#34; alt=&#34;bc81d148f88500f57dbadabcf8080770.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;随后，将路由器设置为 PPPoE 拨号连接；这里就不放图了，各家路由器的配置流程都是一回事。&lt;br&gt;
关闭路由器的防火墙，现在，所有的设备又能重新获取到 ip，且具有公网 ipv6 地址。当然由于 Windows 防火墙的配置，需要关闭 Windows 的防火墙才能从外网 ping 通。&lt;br&gt;
大获全胜！网速也提升到了 570M（家里办理的 500M 宽带，如果直接从光猫拨号 + 路由，则速度最高 470M）&lt;br&gt;
&lt;img src=&#34;../_resources/cbdb76297f0af4d4d3837f421060eb67.png&#34; alt=&#34;cbdb76297f0af4d4d3837f421060eb67.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;同时，Minecraft 也能正常从外网通过 ipv6 连接，看起来一切完美。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;核心问题网页无法访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#核心问题网页无法访问&#34;&gt;#&lt;/a&gt; 核心问题：网页无法访问&lt;/h2&gt;
&lt;p&gt;一切完美？当然是不可能的。一定会出问题，而且是大问题。&lt;br&gt;
配置好 ipv6 之后，一开始所有设备工作正常，网速和解析速度起飞。&lt;br&gt;
然后，用了半个小时左右，问题开始逐步显现。&lt;br&gt;
最开始，我在网上搜索一个 Windows 方面的配置问题，并且点进去了一个博客园的链接。然后，网页并没有按照我预想中的那样飞快加载，而是不断转圈。&lt;br&gt;
最后：&lt;br&gt;
&lt;img src=&#34;../_resources/84c01f9cc1ebf56595e7d025fc4a0617.png&#34; alt=&#34;84c01f9cc1ebf56595e7d025fc4a0617.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;一开始我以为这是必应的中转链接出现问题了（百度日常），因为点击必应的搜索结果并不是直接访问目标网址，而是先通过一个必应的链接重定向到目标。这个重定向有时候会失败，是正常的。但是，我直接访问目标网址时，居然也不能进去，这就非常奇怪了。&lt;br&gt;
这时候我还是乐观的心态，认为是博客园的服务器出了问题，也没有去其它设备上尝试。但我仍然重视了这个问题，并立即去搜索解决方法。因为是开了路由器拨号 + ipv6 之后才出现的问题，所以查找方向也很明确了。结果，就在我查找的过程中，发现了更多的问题。&lt;br&gt;
百度经验、百度知道、百度贴吧、知乎… 这些网站一个接一个地挂掉；有时候网站一开始能正常访问，再开的时候就加载不出 JS 和 CSS（变成了没有渲染的样式，仅限知乎），然后就是一样的不响应。症状跟博客园完全一致，控制台里没有任何有效信息，只有一个响应超时。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;先恢复正常访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先恢复正常访问&#34;&gt;#&lt;/a&gt; 先恢复正常访问&lt;/h3&gt;
&lt;p&gt;一通摸索之后，我找到了暂时恢复的方法：在网卡选项里禁用 ipv6（Internet 协议版本 6）。&lt;br&gt;
禁用后，所有网页恢复正常，但这显然不可取，因为我的目的就是使用 ipv6，而禁用它也就丧失了所有 ipv6 能力。&lt;br&gt;
需要注意的是，现在出问题的网站都不是纯 ipv6 站点，有些是纯 ipv4 站点，但双栈域名居多。这时候访问纯 ipv6 网站是全部成功的，ipv6 测试也是全绿通过，并且无论何种类型的网站都有大量能成功访问的。&lt;/p&gt;
&lt;h3 id=&#34;退一步试试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#退一步试试&#34;&gt;#&lt;/a&gt; 退一步试试&lt;/h3&gt;
&lt;p&gt;退一步，指的就是我找到一种方法，让浏览器只使用或优先使用 ipv4 进行访问。&lt;br&gt;
因为出问题的只有浏览器，我电脑里其它软件全都正常运行。&lt;br&gt;
&lt;em&gt;后续补充：今天发现 Windows 版的微信也不能正常使用，二维码加载不出来，禁用 ipv6 后恢复。&lt;/em&gt;。&lt;br&gt;
但是，网上相关的教程极少甚至没有，偶有几个是针对 Firefox 或 chrome 的，而我使用的是 edge；就算我能参考 chrome，教程也是针对 Linux 而非 Windows。&lt;/p&gt;
&lt;h3 id=&#34;再退一步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#再退一步&#34;&gt;#&lt;/a&gt; 再退一步&lt;/h3&gt;
&lt;p&gt;好的，如果浏览器不行，那我就找个方法让整个操作系统都优先使用 ipv4。&lt;br&gt;
微软提供了一个文档，通过&lt;a href=&#34;https://learn.microsoft.com/en-US/troubleshoot/windows-server/networking/configure-ipv6-in-windows&#34;&gt;修改注册表的方法&lt;/a&gt;来实现全局优先 ipv4、禁用 ipv6、优先 ipv6 等等。&lt;br&gt;
一看到这里，我立即兴奋地尝试了。改了注册表，重启，访问：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ERR_TIMED_OUT&lt;/code&gt;  .png&lt;/p&gt;
&lt;p&gt;好，居然没用。微软，不愧是你。&lt;br&gt;
重启很多次无效，当时已经半夜 2:30，我没有了折腾的心情，只想赶紧睡觉。&lt;/p&gt;
&lt;h2 id=&#34;第一次折腾失败&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一次折腾失败&#34;&gt;#&lt;/a&gt; 第一次折腾失败&lt;/h2&gt;
&lt;p&gt;网上又找了很多相同症状的用户，解决方案要么是改注册表，要么是说路由器兼容性有问题。&lt;br&gt;
好吧，反正跟我联机的同学也不是很在意，natfrp 似乎还能继续用用。&lt;br&gt;
于是，彻底宣告失败，我重新改回了光猫拨号、路由桥接，随后所有网络恢复正常（除了外网还是不能访问这里的所有 ipv6；当然，也包括 ipv4，因为有 NAT）。&lt;/p&gt;
&lt;p&gt;这就结束了吗？怎么可能，不搞到好用我是不会罢休的。&lt;br&gt;
于是，第二天，我又开始了新一轮的折腾。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二次尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二次尝试&#34;&gt;#&lt;/a&gt; 第二次尝试&lt;/h2&gt;
&lt;p&gt;重新尝试，同样的光猫改桥接，同样的路由器拨号。同样的正常 ipv6 公网访问，但是这一次似乎是运气比较好，网页访问全部正常使用，并且坚持了至少 4 个小时。&lt;br&gt;
中途离家 4 小时，回来之后，惊喜地发现，这些网页又打不开了 😃&lt;br&gt;
这时候我就已经明白，无论怎么修改电脑或者路由器配置都无效，于是没有再做尝试，转而对现在的情况进行分析，并希望通过其它方法解决需求。&lt;/p&gt;
&lt;h3 id=&#34;转机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#转机&#34;&gt;#&lt;/a&gt; 转机&lt;/h3&gt;
&lt;p&gt;在我整理思路的时候，我意识到，实际上我只需要服务器一台电脑能够获取正常入站的 ipv6 地址（正常的 ipv6）即可，其余设备甚至根本不需要启用 ipv6。这时候，我首先想到的就是：&lt;/p&gt;
&lt;h4 id=&#34;一号多拨&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一号多拨&#34;&gt;#&lt;/a&gt; 一号多拨&lt;/h4&gt;
&lt;p&gt;一号多拨，指的是我通过同一个光猫，使用同一个宽带账号，分别在两台设备上进行拨号。&lt;br&gt;
我的最初想法是，服务器电脑直连光猫并自己拨号获取正常的 ipv6 地址，同时路由器也自己拨号，但只启用 ipv4。&lt;br&gt;
网上搜索发现，这种方法当然是可行的，前提是运营商支持多拨。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;折腾中&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;没有任何侥幸，拨号失败。电脑上尝试第二次拨号时直接返回错误 629。&lt;/p&gt;
&lt;p&gt;再换一种角度，重新分析我的需求。服务器能使用正常的 ipv6，同时其余设备仅需要 ipv4（最多需要 ipv6 内网而非公网访问）。因此，我做了如下操作，来使得二者兼顾。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;最终如何解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最终如何解决&#34;&gt;#&lt;/a&gt; 最终如何解决&lt;/h2&gt;
&lt;p&gt;如果你的需求和遇到的问题跟我完全一样，那么也许可以参考我的方法来临时解决。&lt;br&gt;
&lt;strong&gt;提示：最终的解决方案也并不完美，只不过暂时保证了两边可以都解决主要矛盾&lt;/strong&gt;&lt;br&gt;
以下是我的解决方案：&lt;/p&gt;
&lt;h3 id=&#34;1-将路由器的内网ipv6地址分发从无状态改为有状态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-将路由器的内网ipv6地址分发从无状态改为有状态&#34;&gt;#&lt;/a&gt; 1. 将路由器的内网 ipv6 地址分发从无状态改为有状态。&lt;/h3&gt;
&lt;p&gt;无状态获取指的是机器自己配置地址，然后通过 NDP 等方式确定地址有效性即可；有状态获取类似 DHCP，不过分配的地址是 ipv6。&lt;br&gt;
这一步解决了手机联网的问题；由于我的网络环境中手机为主要设备，而安卓系统并不支持通过 DHCPv6 进行有状态获取 ipv6 地址；于是所有的手机都只能通过 ipv4 联网，解决了所有上网问题。&lt;/p&gt;
&lt;h3 id=&#34;2-为电脑配置虚假或者无效的ipv6地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-为电脑配置虚假或者无效的ipv6地址&#34;&gt;#&lt;/a&gt; 2.  为电脑配置虚假或者无效的 ipv6 地址&lt;/h3&gt;
&lt;p&gt;这是我在测试的时候忽然想到的主意，既然 ipv4 地址在手动配置错误的情况下无法联网，那么 ipv6 应该也是一样的。&lt;br&gt;
ipv6 中同样有很多保留地址，例如 &lt;code&gt;fe80&lt;/code&gt;  开头的地址表示本地链路地址，无法进行跨子网路由，因此给我自己的电脑配置一个 &lt;code&gt;fe80::1&lt;/code&gt;  的地址即可。&lt;br&gt;
配置后，网卡状态中 IPv6 连接变为&lt;strong&gt;无 Internet 访问权限&lt;/strong&gt;，使用 &lt;code&gt;ipconfig /all&lt;/code&gt;  查看 IP 地址，发现手动配置的 ipv6 地址变成了&lt;strong&gt;本地链接 IPv6 地址&lt;/strong&gt;。&lt;br&gt;
&lt;img src=&#34;../_resources/054913f5d395b1e809f0d7830e64c948.png&#34; alt=&#34;054913f5d395b1e809f0d7830e64c948.png&#34;&gt;&lt;br&gt;
 此外，这里网卡仍然获取到了一个 IPv6 地址，但后面提示（&lt;strong&gt;复制&lt;/strong&gt;），检查其地址发现这个地址是我的服务器电脑的公网 ipv6 地址（因此在此处打码作保护）；这可能是一些其它方面的机制，但并不影响服务器和我的电脑的正常工作。同时，由于内网 ipv6 地址被正常配置，我仍然可以通过内网 ipv6 来访问服务器（包括文件服务器、网页服务器、minecraft 和远程桌面）。&lt;br&gt;
这一步解决了环境中主要的电脑设备：我自己的使用需求。当然没有完全解决，纯 ipv4 模式下访问部分双栈网站时速度还是比较慢，但能够正常使用已经是极其难得了。&lt;/p&gt;
&lt;h3 id=&#34;3-为windows-11配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-为windows-11配置&#34;&gt;#&lt;/a&gt; 3. 为 Windows 11 配置&lt;/h3&gt;
&lt;p&gt;环境中存在另一台常用的电脑，而它搭载的是 Windows 11 家庭版。&lt;br&gt;
在 win11 下可以执行相同的步骤进行配置，只不过需要多出一个步骤：&lt;strong&gt;你需要在系统设置中手动设置 ipv6 DNS，而不能使用自动获取。&lt;/strong&gt;&lt;br&gt;
这一步是因为，即便手动配置了 ipv6 地址，win11 似乎也不会立即使用，而是先试图通过 DHCP 等方法获取 ipv6 地址以及 DNS 服务器等；而在自动获取 DNS 的过程中，路由器很可能就为它分配了一个 ipv6 地址，导致我们自己设置的地址完全变成内网地址，而无法实现目的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结语&#34;&gt;#&lt;/a&gt; 结语&lt;/h2&gt;
&lt;p&gt;至此，全部流程结束，解决方案全部执行。服务器正常接受公网入站流量，其余设备配置后均能实现正常上网。&lt;/p&gt;
&lt;p&gt;但是，我并不对现在的解决方案满意。原因很简单，我开 ipv6 不仅是为了服务器使用，更是为了提高日常上网体验，同时接轨最新技术（虽然 ipv6 都是 12 年前的玩意了）；现在虽然解决了问题，但并未达成全部目的，因为除了服务器主机以外没有设备能够正常使用 ipv6 的。这个方法顶多也就临时用用，实际上我也就这一个寒假的需求，假期结束返校前肯定会恢复光猫拨号的，因为服务器主机之后只作为内网打印服务器，不再有公网访问需求。此外，每次新加一台电脑，都需要这样设置一遍无效的 ipv6 地址，以便正常访问网页。&lt;br&gt;
所以，整体看下来，其实只是在两边的矛盾中取了一个居中妥协的值，为主要矛盾作了让步。我也不是每天都会折腾网络，更多时候还是希望它日常使用能稳定；但我又不希望放弃服务器的公网访问，因此这两者就是核心问题，而最终的方案也就向这两个问题进行妥协。&lt;br&gt;
Anyway，反正问题算是解决了，但愿 ipv6 的部署进度还能快一点吧（&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;明天就是除夕了，浅放一张 AI 画的胡桃吧，祝大家新年快乐！&lt;br&gt;
&lt;em&gt;胡桃没画成，人要么太大要么太小，随便搞了个背景算了（）&lt;/em&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/7c8d8e5459a9f8cd83c33281ca1aa262.png&#34; alt=&#34;7c8d8e5459a9f8cd83c33281ca1aa262.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/</guid>
            <title>超频你的显示器，获得更佳的流畅体验</title>
            <link>https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/</link>
            <category>超频</category>
            <category>硬件</category>
            <pubDate>Fri, 02 Dec 2022 14:33:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;显示器超频？显示器还能超频？&lt;br&gt;
当然是可以的。从定义上来说，任何以时钟频率进行周期性工作的硬件都有超频的说法，只不过我们平时主要讨论的是 CPU、显卡、内存等核心电脑硬件的超频。&lt;br&gt;
某种意义上来说，显示器超频实际上是一个很古老的话题。在以前的 “大屁股” 显示器（即 CRT 技术的显示器）时代，超频就已经存在了。由于最开始的显示器都是纯模拟信号，输入的电压经过放大后直接作用于偏转电场，从而实现画面绘制，那时候的显示器超频是真正意义上的物理超频。只要阴极射线管的水平够好、电场板的素质优秀，显示器的各项工作参数完全可以自定义。&lt;br&gt;
后来用了 LCD 和纯数字信号传输，超频的内容发生了一些变化；不过多数面板仍然会有超频能力，这取决于厂家的配置与面板本身的素质。&lt;br&gt;
&lt;img src=&#34;../_resources/95a04f46fce4449551b3b11e14510900.png&#34; alt=&#34;95a04f46fce4449551b3b11e14510900.png&#34;&gt;&lt;br&gt;
&lt;em&gt; 图：LCD 与 CRT 显示器原理对比&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是显示器超频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是显示器超频&#34;&gt;#&lt;/a&gt; 什么是显示器超频&lt;/h2&gt;
&lt;p&gt;所谓的显示器超频，实际上是针对其运行参数&lt;strong&gt;垂直刷新率&lt;/strong&gt;而言的。&lt;br&gt;
在以前的 CRT 显示器上，显示画面需要电子枪从左往右依次发射电子、扫描一行，点亮一行的荧光像素，随后在垂直同步信号的作用下迅速回到左侧，同时跳转到下一行，重新进行下一行的扫描。以此类推，直到整个荧幕被扫描完成后，电场会使电子偏转到左上角，重复这个过程。（此处还有水平同步信号在起作用，不详细说明）&lt;br&gt;
玩过模拟示波器的朋友肯定能理解垂直信号的作用，实际上就是示波器中的扫描电路，选择合适的扫描信号就能使波形稳定。&lt;br&gt;
因此，如果能调节垂直（和水平）同步信号，使其可以在更短的时间内完成一次完整的扫描，则显示器的&lt;strong&gt;刷新率&lt;/strong&gt;就能得到提升。&lt;br&gt;
这就是显示器超频，我们希望提升其垂直刷新率，使其比标称值更高，这样才会有更好的体验。&lt;/p&gt;
&lt;h2 id=&#34;显示器超频的影响因素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#显示器超频的影响因素&#34;&gt;#&lt;/a&gt; 显示器超频的影响因素&lt;/h2&gt;
&lt;p&gt;要完成一次好的显示器超频，我们通常认为有以下几点因素会影响结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面板类型与素质&lt;/li&gt;
&lt;li&gt;厂商限制&lt;/li&gt;
&lt;li&gt;接口类型与传输质量&lt;/li&gt;
&lt;li&gt;合适的配置&lt;/li&gt;
&lt;li&gt;其它因素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上因素中，面板和厂商在购买后就固定了，无法更改。&lt;br&gt;
接口类型以 DP、HDMI（高版本）为优。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请不要将显示器的超频能力纳入选购的考虑范围之中，如果想获得高刷屏的体验，那么建议选购原生的高刷显示器。本文的核心目的是科普，而不是鼓励大家要求厂商提供超频能力。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;如何超频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何超频&#34;&gt;#&lt;/a&gt; 如何超频&lt;/h2&gt;
&lt;h3 id=&#34;超频前的准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频前的准备&#34;&gt;#&lt;/a&gt; 超频前的准备&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;检查接口协议与传输质量&lt;br&gt;
请使用优质 DP 或 HDMI 线连接电脑与显示器，以获得更佳的超频能力。&lt;br&gt;
该项主要影响传输带宽，对于特定版本的 DP 或 HDMI 接口而言，其能提供的带宽是有限的。详情可查阅百度。&lt;br&gt;
只需要记得一点，如果带宽受限，那么降低分辨率有助于获得更高的刷新率。但是对于多数平民显示器而言，即使使用最高分辨率，也不太会出现带宽不足的问题。&lt;/li&gt;
&lt;li&gt;检查视频信号源&lt;br&gt;
目前来说，英特尔核心显卡并不支持显示器超频（至少笔记本的不行）。如果您使用台式机，请确保视频信号是独立显卡输出的。如果使用笔记本，请连接到笔记本上的 type-c 接口，一般而言这个接口的显示输出是直接连接独立显卡的。&lt;br&gt;
如果使用不支持独显直连输出的笔记本（或者没有独显），则大概率不能成功。&lt;br&gt;
不过，即便如此，您还是可以进行尝试。大多数出厂 60Hz 的显示器都可以直接提升到 75Hz，带来一定程度上的体验提升。不过有一个例外，笔记本自带的屏幕完全不支持超频。&lt;/li&gt;
&lt;li&gt;环境条件&lt;br&gt;
尽管现代显示器对工作环境的承受范围极大，环境因素的影响极其小，合适的环境仍然有助于提高超频成功率。&lt;br&gt;
主要包括合适的工作温度（尤其是不能过低），湿度，电压值与稳定性，甚至摆放方向等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;开始超频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始超频&#34;&gt;#&lt;/a&gt; 开始超频&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;对于非独立显卡、英特尔核心显卡：&lt;br&gt;
请进入显卡控制面板（以下以新版英特尔核心显卡为例）&lt;br&gt;
&lt;img src=&#34;../_resources/ce3133202184eb787a2034f31476db94.png&#34; alt=&#34;ce3133202184eb787a2034f31476db94.png&#34;&gt;&lt;br&gt;
 点击&lt;strong&gt;显示器&lt;/strong&gt;，&lt;strong&gt;分辨率旁边的加号&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/245a61028b5e9c9e71d6d6abb786ff57.png&#34; alt=&#34;245a61028b5e9c9e71d6d6abb786ff57.png&#34;&gt;&lt;br&gt;
 检查是否有刷新率的选项。如果有，可以尝试输入目标刷新率，然后单击确定。&lt;br&gt;
若不成功或没有输入刷新率的地方，则您的显卡不支持硬超频。&lt;br&gt;
请尝试点击&lt;strong&gt;刷新率&lt;/strong&gt;旁的下拉框&lt;br&gt;
&lt;img src=&#34;../_resources/319d41963a5966fc42fe60ac72c0cb2f.png&#34; alt=&#34;319d41963a5966fc42fe60ac72c0cb2f.png&#34;&gt;&lt;br&gt;
 若有多个选项，选择最高的。若有 I 和 P 两种，请选择 P。&lt;br&gt;
至此，显示器超频结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;对于英伟达、AMD 独立显卡：&lt;br&gt;
请进入显卡控制面板（以下以英伟达显卡为例）；应该能在 [开始] 菜单里找到。&lt;br&gt;
若电脑里找不到该软件，请重装显卡驱动程序。&lt;br&gt;
&lt;img src=&#34;../_resources/345495b609471f763f8ec8bfc8df62df.png&#34; alt=&#34;345495b609471f763f8ec8bfc8df62df.png&#34;&gt;&lt;br&gt;
 在屏幕左侧，单击 [更改分辨率]。&lt;br&gt;
如果没有此选项，则说明显示器没有连接到独立显卡上。&lt;br&gt;
&lt;img src=&#34;../_resources/2e632685ea988d1cf03dc6d60b7493ac.png&#34; alt=&#34;2e632685ea988d1cf03dc6d60b7493ac.png&#34;&gt;&lt;br&gt;
 点击 [自定义]。&lt;br&gt;
&lt;img src=&#34;../_resources/ec04c76fa5c31fbee854410f0c96b663.png&#34; alt=&#34;ec04c76fa5c31fbee854410f0c96b663.png&#34;&gt;&lt;br&gt;
 勾选 [启用显示器未显示的分辨率]，然后点击 [创建自定义分辨率]。&lt;br&gt;
&lt;img src=&#34;../_resources/ed628697647b0ae7a7af0b97615d93e1.png&#34; alt=&#34;ed628697647b0ae7a7af0b97615d93e1.png&#34;&gt;&lt;br&gt;
 在 [刷新率] 中输入目标刷新率，然后可以点击 [测试] 按钮进行测试。&lt;br&gt;
在 [计时 - 标准] 选项中选择 [协同视频计时标准（CVT）降低清屏时间]，可能有助于提高成功率。&lt;br&gt;
&lt;img src=&#34;../_resources/79a358cee11fbd4de054a918720205a4.png&#34; alt=&#34;79a358cee11fbd4de054a918720205a4.png&#34;&gt;&lt;br&gt;
 单击 [测试] 按钮，显示器将黑屏进行切换。&lt;br&gt;
如果成功，则您将很快看到电脑画面。如果半成功，则可能会看到画面上出现抖动、条纹、异常颜色等。&lt;br&gt;
如果失败，显示器提示不支持或一直黑屏，等待 15s 后会自动退出测试状态。或者，可以按 Esc 键快速返回。&lt;br&gt;
当测试到稳定的刷新率后，在提示框中点击 [是]，即可保存该分辨率。&lt;br&gt;
返回上一步的 [更改刷新率]，应该能在列表最顶上看到刚刚创建的分辨率。&lt;br&gt;
选中后，单击软件右下角的 [应用]，超频结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;超频提示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频提示&#34;&gt;#&lt;/a&gt; 超频提示&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;尽管超频一般不会造成伤害，仍可能导致面板发热加剧、液晶老化速率提高等问题。因此，从理论上讲，不建议长时间超频。&lt;/li&gt;
&lt;li&gt;在超频过程中，可以使用以下方法先确定显示器能承受的最大刷新率：
&lt;ul&gt;
&lt;li&gt;先将刷新率定到目标值&lt;/li&gt;
&lt;li&gt;若成功，则进一步定到下个目标值；否则，应选择当前刷新率与目标值的中间值。&lt;/li&gt;
&lt;li&gt;重复以上取中值的过程，通过二分法可以快速定位到最大刷新率。&lt;/li&gt;
&lt;li&gt;确定了最大值后，请适当降低到附近合适的数值使用。例如，若最大刷新率为 96Hz，请保持在 90Hz 即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若超频过程中显示器出现严重事故（如一直黑屏、闪屏等），请断开视频连接线，然后断开显示器电源；等待几分钟或使其完全放电后重新接入电源，检查显示器是否能正常开机，然后再接入电脑。由于现代显示器的保护功能极佳，真正发生无法挽回事故的可能性极低，近乎不存在，但并不为 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;超频经验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频经验&#34;&gt;#&lt;/a&gt; 超频经验&lt;/h3&gt;
&lt;p&gt;对于一般的 1080P、60Hz 显示器而言，75Hz 是日常使用的较佳水平。某些素质较高的显示器可能会一路支持到 80、90 甚至 110Hz，全看厂商良心与运气。&lt;br&gt;
对于 2K、60Hz 的显示器，一般也可以使用 75Hz。我自己的 2K60 显示器最大支持 98Hz，稳定值是 96Hz，最终保持在 90Hz 使用。&lt;br&gt;
对于 144Hz 的显示器，一般直接上 165Hz 是没有问题的。较好的面板可以尝试 180Hz。&lt;br&gt;
更高的不知道，我没钱（&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;没啥可总结的，超个频，获得更好的体验和更高的风险，这是一种交易。权衡结果全由你自己掌控。&lt;br&gt;
任何问题欢迎留言！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</guid>
            <title>使用批处理和Joplin执行并优化Hexo博客工作流程</title>
            <link>https://zjxdiu.github.io/blog/%E6%89%B9%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</link>
            <category>软件</category>
            <pubDate>Sun, 27 Nov 2022 21:53:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;使用静态部署的方式使用 Hexo，我们经常会遇到一个很烦人的问题，就是部署麻烦。&lt;br&gt;
每次写一篇文章，就要经历&lt;strong&gt; Hexo clean、Hexo g、Hexo s、Hexo d&lt;/strong&gt; 四连，一开始还好，写多了之后烦不胜烦。&lt;/p&gt;
&lt;p&gt;同时，由于我个人使用 Joplin 进行文章撰写，这个软件虽然简洁，但并不好用；图片虽然可以直接复制，但不能修改输出目录，图片资源默认保存在与 &lt;code&gt;/blog/&lt;/code&gt;  平行的 &lt;code&gt;/_resources/&lt;/code&gt;  文件夹中。&lt;/p&gt;
&lt;p&gt;因此，结合我最为擅长的 batch 脚本语言，我就萌生了使用批处理来优化整个流程的想法。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-git安装配置不确定是否有必要&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-git安装配置不确定是否有必要&#34;&gt;#&lt;/a&gt; 1. Git 安装配置（不确定是否有必要）&lt;/h3&gt;
&lt;p&gt;在安装 Git 的过程中，我们会有一个配置终端的过程，此处其实是建议选择第一项（使用 MinTTY），但我当时选择了第二项即使用系统的 cmd 来作 git bash 的终端。&lt;br&gt;
&lt;img src=&#34;../_resources/aca6779be5b5f5c9d88dc1215456c295-2.png&#34; alt=&#34;aca6779be5b5f5c9d88dc1215456c295.png&#34;&gt;&lt;br&gt;
 如果选择了第一项，可能也是能正常使用批处理来代替执行的，应该不用担心。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-站点配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-站点配置&#34;&gt;#&lt;/a&gt; 2. 站点配置&lt;/h3&gt;
&lt;p&gt;blog 根目录下的_config.yml 文件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs yaml&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;......&lt;/span&gt;
&lt;span class=&#34;hljs-attr&#34;&gt;post_asset_folder:&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;hljs-attr&#34;&gt;relative_link:&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;hljs-string&#34;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用 Joplin 写文章的话应该关闭这两项（至少我测试下来这样是没问题的）&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-脚本编写&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-脚本编写&#34;&gt;#&lt;/a&gt; 3. 脚本编写&lt;/h3&gt;
&lt;p&gt;在 blog 根目录下新建 “程序名.bat”，开始编写功能。&lt;br&gt;
先放源码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs batch&#34;&gt;@echo off
setlocal EnableDelayedExpansion
goto start
:ac
rem 请设置%targetlable%变量，以确保正常跳转至目标位置
cls
color 0F
goto %targetlabel%
:start
if &amp;quot;%targetlabel%&amp;quot;==&amp;quot;&amp;quot; (set &amp;quot;targetlabel=start&amp;quot;&amp;amp;&amp;amp;goto ac)
echo ------------------------------------------------
echo  1.执行完整的检查和推送blog流程
echo  2.快速上载blog
echo  3.本地预览
echo  4.单独执行指令
echo ------------------------------------------------
echo.
choice /c 1234
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;4&amp;quot; goto new
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;3&amp;quot; (set &amp;quot;targetlabel=local&amp;quot;&amp;amp;&amp;amp;goto ac)
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;2&amp;quot; (set &amp;quot;targetlabel=fast&amp;quot;&amp;amp;&amp;amp;goto ac)
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;1&amp;quot; (set &amp;quot;targetlabel=full&amp;quot;&amp;amp;&amp;amp;goto ac)
pause&amp;amp;exit
:new
echo 正在创建新的cmd实例...
echo ------------------------------------------------
echo 命令提示：
echo hexo clean
echo hexo g
echo hexo s
echo hexo d
echo ------------------------------------------------
start cmd
echo 按任意键返回菜单...
pause &amp;gt;nul
set &amp;quot;targetlabel=start&amp;quot;&amp;amp;&amp;amp;goto ac
:local
echo ------------------------------------------------
echo                  本地预览模式
echo ------------------------------------------------
echo 启动预览...
cmd /c &amp;quot;hexo clean &amp;amp; hexo g &amp;amp; xcopy D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; echo 2&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; start http://localhost:4000/ &amp;amp; hexo s&amp;quot;
echo 按任意键返回菜单...
pause &amp;gt;nul
set &amp;quot;targetlabel=start&amp;quot;&amp;amp;&amp;amp;goto ac
:fast
echo ------------------------------------------------
echo                  快速上载blog
echo ------------------------------------------------
cmd /c &amp;quot;hexo clean &amp;amp; hexo g &amp;amp; xcopy D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; echo 2&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; hexo d&amp;quot;
echo ------------------------------------------------
echo 完成，2秒后退出...
ping localhost -n 3 &amp;gt;nul
exit
:full
echo ------------------------------------------------
echo                  完整流程向导
echo              按0为确定，按1为跳过
echo ------------------------------------------------
goto clean
:clean
echo 第一步：清理缓存
choice /c 01
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;2&amp;quot; goto generate
cmd /c &amp;quot;hexo clean&amp;quot;
goto generate
:generate
echo ------------------------------------------------
echo 第二步：生成页面
choice /c 01
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;2&amp;quot; goto check
cmd /c &amp;quot;xcopy D:\blog\source\_posts\_resources D:\blog\public\blog\_resources\ /e /s /y &amp;amp; echo 2&amp;gt;D:\blog\.deploy_git\.nojekyll &amp;amp; hexo g&amp;quot;
goto check
:check
echo ------------------------------------------------
echo 第三步：本地预览
choice /c 01
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;2&amp;quot; goto deploy
start http://localhost:4000/
cmd /c &amp;quot;hexo s&amp;quot;
goto deploy
:deploy
echo ------------------------------------------------
echo 第四步：上传到远程服务器
choice /c 01
if &amp;quot;%errorlevel%&amp;quot;==&amp;quot;2&amp;quot; goto done
cmd /c &amp;quot;hexo d&amp;quot;
goto done
:done
echo ------------------------------------------------
echo 流程已完成，按任意键返回菜单...
pause &amp;gt;nul
set &amp;quot;targetlabel=start&amp;quot;&amp;amp;&amp;amp;goto ac&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我自认为自己的批处理写得都算比较清晰的了，虽然注释很少，但结合文字应该能看懂每一步是在干什么。&lt;br&gt;
如果要使用，请把里面所有的 &lt;code&gt;D:\blog\source\_posts\_resources&lt;/code&gt;  替换为你 Joplin 每次导出时的资源目录，把所有的 &lt;code&gt;D:\blog\public\blog\_resources\&lt;/code&gt;  替换为你的博客站点目录，注意不要动 &lt;code&gt;\public\...&lt;/code&gt;  后面的内容。&lt;/p&gt;
&lt;p&gt;如果要更换功能模块，也应按照这里的写法，使用  &lt;code&gt;cmd /c 命令内容 &amp;amp; 第二条命令 &amp;amp; 后面的很多命令&lt;/code&gt;  来执行，除了 start 用于启动网页之外尽量不要直接在批处理中使用模块的命令，否则容易直接闪退。&lt;/p&gt;
&lt;p&gt;创建 &lt;code&gt;.nojekyll&lt;/code&gt;  文件的目的是防止 GitHub 忽略掉下划线开头的文件夹，即 &lt;code&gt;_resources&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-工作流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-工作流程&#34;&gt;#&lt;/a&gt; 4. 工作流程&lt;/h3&gt;
&lt;p&gt;现在，我们可以愉快地写文章了。&lt;br&gt;
打开 Joplin，新建笔记（记得都放在同一个笔记本下），笔记的名字是文件名，写上 Front-matter 内容，之后就如同在 word 中一样写稿。&lt;br&gt;
图片直接粘贴即可，需要的话修改 [ ] 里的内容，这是属于 markdown 语法的一部分，不详细说明。&lt;br&gt;
写完的文章直接往 &lt;code&gt;blog\source\_posts&lt;/code&gt;  里面一存，然后打开脚本按个 2，等两分钟就部署到 Github Pages 上了。&lt;br&gt;
&lt;strong&gt;愉快地工作吧！&lt;/strong&gt;&lt;br&gt;
&lt;img src=&#34;../_resources/cf0fb99a327ef788a844524d6eb74278.png&#34; alt=&#34;cf0fb99a327ef788a844524d6eb74278.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;补充点内容，修改文章稍微有点麻烦，因为 Joplin 非常笨，它不会识别已有的文件，发现重名了直接加后缀，连带着里面的图片也都加后缀、重新复制到 &lt;code&gt;_resources&lt;/code&gt;  里面了；对于我这种硬盘空间够、平时图片不多的人来说倒是无所谓，但部署了之后文章会重复显示好几篇。所以不能直接导出文章，需要手动删除旧的，然后再从 Joplin 中导出即可。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/WPS-word/</guid>
            <title>WPS word如何设置图片背景，如何解决图片变成平铺问题</title>
            <link>https://zjxdiu.github.io/blog/WPS-word/</link>
            <category>软件</category>
            <pubDate>Sat, 26 Nov 2022 23:18:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;wps-word如何设置图片背景如何解决图片变成平铺问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wps-word如何设置图片背景如何解决图片变成平铺问题&#34;&gt;#&lt;/a&gt; WPS word 如何设置图片背景，如何解决图片变成平铺问题&lt;/h2&gt;
&lt;p&gt;问题描述：在 WPS word 中插入背景图片，导出为 PDF、打印后发现图片变成平铺，如图所示&lt;br&gt;
&lt;img src=&#34;../_resources/1bed71e7e0b967daa78642a737810d17.png&#34; alt=&#34;1bed71e7e0b967daa78642a737810d17.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1. 打开需要插入背景图片的文档&lt;br&gt;
 2. 点击：页面布局、背景、其它背景、纹理&lt;br&gt;
&lt;img src=&#34;../_resources/88b258680c69021372dab599663945bd.png&#34; alt=&#34;88b258680c69021372dab599663945bd.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 选择 “其它纹理”，选择图片后点击确定&lt;br&gt;
&lt;img src=&#34;../_resources/a4d5ca84c954b134351ea2d9c8d9881c.png&#34; alt=&#34;a4d5ca84c954b134351ea2d9c8d9881c.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 现在背景图片应该可以正常导出了。&lt;/p&gt;
&lt;hr&gt;
 ]]></description>
        </item>
    </channel>
</rss>
