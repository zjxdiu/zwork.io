{
    "version": "https://jsonfeed.org/version/1",
    "title": "zjxdiu~blog site • All posts by \"计算机\" category",
    "description": "Shadow in front implying sun behind",
    "home_page_url": "https://zjxdiu.github.io",
    "items": [
        {
            "id": "https://zjxdiu.github.io/blog/ML_emusic_classify/",
            "url": "https://zjxdiu.github.io/blog/ML_emusic_classify/",
            "title": "一种基于神经网络的电子音乐风格分类算法思路",
            "date_published": "2023-05-03T09:18:00.000Z",
            "content_html": "<h1 id=\"一种基于神经网络的电子音乐风格分类算法思路\"><a class=\"markdownIt-Anchor\" href=\"#一种基于神经网络的电子音乐风格分类算法思路\">#</a> 一种基于神经网络的电子音乐风格分类算法思路</h1>\n<h2 id=\"以zjxdiu常听的电子音乐风格为例\"><a class=\"markdownIt-Anchor\" href=\"#以zjxdiu常听的电子音乐风格为例\">#</a> —— 以 zjxdiu 常听的电子音乐风格为例</h2>\n<h1 id=\"目录\"><a class=\"markdownIt-Anchor\" href=\"#目录\">#</a> 目录</h1>\n<p>一、概述与引言<br>\n二、电子音乐风格<br>\n 2.1 主风格<br>\n 2.2 子风格<br>\n 2.3 混合风格与其他元素<br>\n三、现有解决方案<br>\n 3.1 传统人工分类<br>\n 3.2 特征提取技术<br>\n 3.3 现有机器学习算法<br>\n 3.3.1 实践项目：DeepAudioClassification<br>\n 四、SRM-DNN（频谱、节奏、情感分析 - 深度神经网络）思路<br>\n 4.1 电子音乐的频谱特征<br>\n 4.2 鼓与贝斯节奏分析<br>\n 4.3 BPM 与时间分析<br>\n 4.4 情感分析<br>\n 4.5 能量分析<br>\n 4.6 实现思路<br>\n 4.6.1 频谱提取<br>\n 4.6.2 DnB 分析<br>\n 4.6.3 BPM 与时间分析<br>\n 4.6.4 图像识别<br>\n 4.6.5 人声分离<br>\n 4.6.6 情感特征<br>\n五、总结</p>\n<hr>\n<h2 id=\"一-概述与引言\"><a class=\"markdownIt-Anchor\" href=\"#一-概述与引言\">#</a> 一、概述与引言</h2>\n<p>随着近年来计算机技术的快速发展，机器学习被应用于越来越多的领域。其中，最广泛的应用之一就是执行分类与识别任务，在音乐风格的识别与分类方面，同样有着应用的空间。为此，结合笔者生活中的实际痛点：难以区分部分电子音乐的风格，且现有方案难以准确识别细分风格，而撰写本文，希望以相对专业的视角提供一种新的解决方案。</p>\n<h2 id=\"二-电子音乐风格\"><a class=\"markdownIt-Anchor\" href=\"#二-电子音乐风格\">#</a> 二、电子音乐风格</h2>\n<p>电子音乐是音乐中的一个大类型，起源于 20 世纪 60 年代的欧美地区，是音乐文化中重要的一部分。其曲风特色是注重以节奏和旋律创建舞蹈氛围，主要使用各类合成器作为 “乐器”，并具有相对少量的歌词。在约 80 年的发展过程中，电子音乐衍生、拓展出非常多的细分风格，以下对笔者常听的风格进行简述。</p>\n<h3 id=\"21-主风格\"><a class=\"markdownIt-Anchor\" href=\"#21-主风格\">#</a> 2.1 主风格</h3>\n<p>zjxdiu 常听的电子音乐包括以下几类主要风格：</p>\n<ul>\n<li>House，浩室或浩室舞曲，注重旋律和音色的展现，编曲的格式化比较显著，节奏简单且 “软硬” 适中；</li>\n<li>Trance，迷幻舞曲，BPM 相对 House 更高一些，鼓点一般位于每个 1/2 beat 上，但较为柔和；snare 和 hat 也在 DnB 序列中以更高频率出现，每节旋律相似但不重复。整体听感与其名字类似，为 “迷幻”。</li>\n<li>Core，核，主要包括 Hardcore（硬核）和 Frenchcore（法核，也可一并归类为 Hardcore），表现为更为强烈的节奏和鼓点，BPM 也更高，且对人声的处理更极端；部分早期的 Core 十分的 “硬”，以至于很少人能够承受；而近年的新型 core 则相对柔软一些，并且对于旋律和人声的体现也更为注重。</li>\n<li>Hardstyle，硬派，其显著特征为 bass 和 drum 同时出现，且多使用经失真处理的 bassline，由于其独特的 DnB 听感，时常被开玩笑：“听到 duang duang duang 就是 hardstyle”。其软硬程序介于 Core 与 House 之间。</li>\n<li>Hands Up，无中文名，是一种处于 Core 与 Hardstyle 之间、更接近 Core 的风格，其特征为较为快速和低沉的鼓点，且旋律表现力强、与 DnB 的融合程度高，编曲方面则接近 House，在许多 Disco 舞厅音乐中较为常见。</li>\n<li>Chill Out，弛放音乐，它的特征最为显著，即一反常派的柔和与宁静。通常其编曲较为接近 Trance，但使用的音色极为柔软，鼓点和贝斯的响度也很低，BPM 通常也较低，听感上呈现 “飘渺舒缓的节奏，柔和的合成器音效，空灵的女声吟唱，悠远的环境音”。</li>\n</ul>\n<h3 id=\"22-子风格\"><a class=\"markdownIt-Anchor\" href=\"#22-子风格\">#</a> 2.2 子风格</h3>\n<p>常见子风格见如下虚表格：<br>\n<img src=\"../_resources/7019e2a17be54b2c468752025c2ca3c9.png\" alt=\"7019e2a17be54b2c468752025c2ca3c9.png\"><br>\n 需要注意的是，此处列出的仅为一部分，实际上还可区分为数倍于列表项目数的子风格。</p>\n<h3 id=\"23-混合风格与其他元素\"><a class=\"markdownIt-Anchor\" href=\"#23-混合风格与其他元素\">#</a> 2.3 混合风格与其他元素</h3>\n<p>对于现代电子音乐而言，一首音乐混合多种风格的做法是十分常见的；例如 Hands Up+Hardstyle、Melodic House+Hardstyle、Progressive House+Future House 等等。不过对于大多数音乐而言，其主要曲风只会有一种。<br>\n此外，部分曲风还会有一些其他元素；例如 Midtempo 指 BPM 在约 80~120 之间的，带人声和歌词的 Trance 可称为 Vocal Trance 等。总之，电子音乐的曲风是难以准确、完全判别的，因此可考虑采用标签（label）的方式进行风格判断。</p>\n<h2 id=\"三-现有解决方案\"><a class=\"markdownIt-Anchor\" href=\"#三-现有解决方案\">#</a> 三、现有解决方案</h2>\n<h3 id=\"31-传统人工分类\"><a class=\"markdownIt-Anchor\" href=\"#31-传统人工分类\">#</a> 3.1 传统人工分类</h3>\n<p>显然，音乐分类可由人工进行；无论是音乐人提供还是听众、鉴赏家提供，都属于人工分类方法。在任何涉及到机器学习与人类学习对比的地方都能得知，人工方法一般有准确率高、复杂任务处理能力强、误报率低、学习速度快且成本低等优点，但其识别速度相比于计算机而言则无法比拟。</p>\n<h3 id=\"32-特征提取技术\"><a class=\"markdownIt-Anchor\" href=\"#32-特征提取技术\">#</a> 3.2 特征提取技术</h3>\n<p>参考文献：<a href=\"https://www.hindawi.com/journals/wcmc/2021/9298654/\">基于音乐特征提取和深度神经网络的音乐风格分类算法</a><br>\n对于通常意义上的音乐而言，我们可以通过提取音乐特征进行分析与识别。这些特征包括节奏、旋律、乐器或音色、和弦或和声、人声等内容。通过适当的、已有的算法和模块，可以对这些特征进行单独提取并分析。若加入卷积神经网络，则可获得更为准确的结果。<br>\n参考文献中详细介绍了这二者如何融为一体并实际运用，为接下来的算法思路提供了部分理论基础。</p>\n<h3 id=\"33-现有机器学习算法\"><a class=\"markdownIt-Anchor\" href=\"#33-现有机器学习算法\">#</a> 3.3 现有机器学习算法</h3>\n<p>传统的基于机器学习的音频分类大多基于常规算法，例如支持向量机、决策树、K - 邻近算法、随机森林算法等等。这些算法的优点是部署和训练简单，算法的数学原理完善，但问题是难以准确处理复杂和细微的变化；尤其是在电子音乐风格分类任务中，由于各风格在许多方面非常相似，传统算法无法很好地处理。<br>\n因此，结合使用的技术与特征，提出如下采用神经网络进行识别的识别思路。</p>\n<h3 id=\"331-实践项目deepauddioclassification\"><a class=\"markdownIt-Anchor\" href=\"#331-实践项目deepauddioclassification\">#</a> 3.3.1 实践项目：DeepAuddioClassification</h3>\n<p>在提出自己的算法思路前，笔者首先实践了一个已有的开源项目：<a href=\"https://github.com/despoisj/DeepAudioClassification\">Github: despoisj/DeepAudioClassification</a>；该项目采用 tensorflow 中的 tflearn 模块进行 DNN 训练，并且只对音频频谱进行识别，相当于一个只输入频谱图的图像识别算法。<br>\n通过将音频频谱提取出来并切片，随后基于 DNN 进行图像分类训练，则模型可用于预测一个未知的音乐频谱图。这种方法巧妙地避开了音频数据量过大的问题，因为一般 CD 音质下 44100Hz 意味着 30 秒的音乐就将产生 66 万个长度的向量。但对于原作者的目的而言，分析大类音乐风格的时候可以直接从频谱入手。根据作者发表的文章<a href=\"https://medium.com/@juliendespois/finding-the-genre-of-a-song-with-deep-learning-da8f59a61194#.yhemoyql0\"> Finding the genre of a song with Deep Learning</a> 的描述，只需要每秒 50 像素的分辨率即可获得满意的效果；在这里，sox 提供了很好用的命令行工具，允许我们直接生成灰度频谱图，其中每个像素的 x 代表时间、y 代表频率、亮度代表振幅。切片后使用深度卷积神经网络进行图像训练，最后使用投票机制提高准确率。<br>\n但是，这一次实践的结果并不理想。在学习率 0.001、分辨率 50px/s 时，经过 20 个 epoch 后模型仅能达到 55% 的准确率（ACC），可以看出识别效果并不理想。这主要是因为参与训练的原始数据包括 Trance 和 Hardstyle 两种风格，而它们在梅尔（Mel）频谱图上实际上十分相似，无法准确映射到高维数据集中。</p>\n<h2 id=\"四-srm-dnn频谱-节奏-情感分析-深度神经网络思路\"><a class=\"markdownIt-Anchor\" href=\"#四-srm-dnn频谱-节奏-情感分析-深度神经网络思路\">#</a> 四、SRM-DNN（频谱、节奏、情感分析 - 深度神经网络）思路</h2>\n<h3 id=\"41-电子音乐的频谱特征\"><a class=\"markdownIt-Anchor\" href=\"#41-电子音乐的频谱特征\">#</a> 4.1 电子音乐的频谱特征</h3>\n<p>首先，我们并不希望创建一个需要 A100 才能运行的高度资源密集型网络，而是希望该模型能够在消费级硬件上部署和训练。因此，结合实际电子音乐的主要特征区分，我们可以沿用 DeepAudioClassification 的频谱分析方法。<br>\n对于电子音乐曲风分类而言，其频谱图提供的信息量是非常大的，因为几乎每种主类别都有自己特征的 DnB 序列。这导致了在频谱图中的显著区分，在低频区域尤为明显（见下图）。<br>\n截取频谱图时采用的配置：<br>\n软件：iZotope RX 7<br>\nFFT 类型（type）：自动可变短时傅里叶变换（Auto-adjustable STFT）<br>\n启用重分配（reassignment）：否<br>\n窗函数：海宁窗（Hann）<br>\n颜色映射：青色到橙色（Cyan to orange）<br>\n频率缩放（Frequency scale）：对数（Log）<br>\n高品质渲染（High-quality rendering）：启用<br>\n<img src=\"../_resources/c3f2fb4bdc6d6f2789d569c084686d46.png\" alt=\"c3f2fb4bdc6d6f2789d569c084686d46.png\"><br>\n 图：三种风格的电子音乐频谱图对比<br>\n本图采用的时间窗口：20s</p>\n<p>从对比图中可以很明显地看出，不同风格的电子音乐在频谱图中呈现出较为显著的区别；尽管也有相近的风格（如 Hands Up 和 Hardcore），但总体来说，其频谱图能提供主要的风格信息。<br>\n既然电子音乐的频谱特征如此明显，为什么 DeepAudioClassification 项目却无法使用呢？<br>\n首先，频谱的选型有误，是最大的问题所在。对于电子音乐而言，由于其风格信息大多位于低频区，因此必须使用低频部分缩放较大的谱图类型。上图中采用的缩放是 Log，相比于常用的 Mel 频谱，它对于低频区有更大的缩放等级，使得低频信息分辨率更高；在实际运用中，该软件还提供了 Extend Log（拓展对数）频谱，其低频区的缩放更为显著。<br>\n其次，切片数量过多。实践中为尽量减轻硬件负担，对较长的音频进行切片处理；但每个音频切片数为 100 份，这个设定相对于电子音乐的结构而言太多了。常见的电子音乐由几个类型的分段组成，例如 intro、lead、build up、verse、drop、outro 等；其风格的定义一般主要从 drop 中得出，所以若切片过多，则容易破坏每个分段的完整性，不利于风格识别。</p>\n<h3 id=\"42-鼓与贝斯分析\"><a class=\"markdownIt-Anchor\" href=\"#42-鼓与贝斯分析\">#</a> 4.2 鼓与贝斯分析</h3>\n<p>电子音乐的风格可以说有一半都由 DnB（Drum and bass，鼓与贝斯；这个词同时也是一种类型的电子音乐风格，但本文将其用于指代鼓点 + 贝斯）决定；无论是鼓点节拍数、编排方式还是贝斯的特征，亦或是二者的侧链水平等，均包含大量的风格信息。<br>\n有关如何从音频信号中提取节拍信息，目前已有相关研究成果，包括使用动态编程、神经网络等方法进行识别。参考文献：<a href=\"https://ieeexplore.ieee.org/document/6734668\">Multi-Feature Beat Tracking</a><br>\n 使用 iZotope RX 7 提供的工具也可以进行 DnB 分析，其中的 Music Rebalance 模块可以准确分离人声、贝斯、鼓点三种信号，为分析提供了有利条件。<br>\n<img src=\"../_resources/72bfdc72dfb2f21a37e23d8f647da698.png\" alt=\"72bfdc72dfb2f21a37e23d8f647da698.png\"><br>\n 图：RX 7 中提供的 Music Rebalance 组件</p>\n<h3 id=\"43-bpm与时间分析\"><a class=\"markdownIt-Anchor\" href=\"#43-bpm与时间分析\">#</a> 4.3 BPM 与时间分析</h3>\n<p>BPM，即 Beats per minute，每分钟节拍数。它是音乐的一个重要参数，直接指向音乐的 “速度”。尽管在制作电子音乐时，制作人通常不会严格对齐到小节 / 拍的整数倍，但 BPM 依然能够提供风格信息。<br>\n在主风格分析时，仅通过 BPM 我们即可首先分辨音乐的大致类别；若低于 90 则可能为 Chill Out，90-110 可能为 House，110-130 可能为 Trance、Hands Up，130-160 可能为 Hardstyle 或 Hardcore 等。<br>\n在子风格分析时，BPM 也有助于进行风格确定；例如在 Hardcore 中，若难以分辨 Frenchcore 和 UK Hardcore，则可通过 BPM 辅助判断，若达到了 160 或更高则更可能为 UK Hardcore。<br>\n此外，音频的时间长度同样可以作为网络的输入之一，这是因为 Hands Up、Hardcore、House 和 trance、Chill Out 等分别呈现了两种倾向，前者一般时长为 3 分钟左右，而后者最长可达 10 分钟以上。尽管这种参数的帮助十分有限，但其特征强度还会更高，有助于减少结果的偏离。</p>\n<h3 id=\"44-情感分析\"><a class=\"markdownIt-Anchor\" href=\"#44-情感分析\">#</a> 4.4 情感分析</h3>\n<p>所谓情感分析，指的是对人声（和音乐，如果可能）进行情绪的识别与分类。尽管不是所有音乐都有歌词和人声，电子音乐中的人声更是少见，但进行情感分析依然有助于进一步判别细微的风格差异。<br>\n不过，这一步的主要目的其实只针对一种风格的音乐，即 trance；许多 Trance 都具有一些人声，即便没有人声，对于音乐本身的情感分析也能够帮助辨别 Progressive trance 和 Uplifting trance。这是因为大部分 Uplifting trance 都具有一些独特的情感特征：Hopeful，Sentimental，Sad 等等；它们具有一个共同的特征，就是 uplifting，即鼓舞人心的。可以说，如果一首 Trance 听着让人想流泪，则多数时候可以确定它一定是 Uplifting trance。<br>\n参考文献：<a href=\"https://www.hindawi.com/journals/misy/2022/2715765/\">Music Emotion Classification Method Using Improved Deep Belief Network</a></p>\n<h3 id=\"45-能量分析\"><a class=\"markdownIt-Anchor\" href=\"#45-能量分析\">#</a> 4.5 能量分析</h3>\n<p>所谓能量分析，是指针对音频每个分片（如每秒）进行电平、响度、频域复杂度等进行分析，从而确定该分片的能量等级。由于电子音乐中每个分段的能量差异较大，intro/outro 最低、lead/build up 中等、drop 最高，因此对整个音频进行能量分析并在二维数组中呈现，将有助于分析音乐结构。<br>\n例如，trance 音乐的结构中，各分段能量差异相对较小，drop 出现的频次更多；House 则一般为 intro、lead、build up、drop、verse、build up、verse、outro 序列。不过该方法适用性不佳，主要是因为电子音乐的结构变化性大，且目前没有已标签的数据集进行训练，需要人工标记才能进行监督学习。</p>\n<h3 id=\"46-实现思路\"><a class=\"markdownIt-Anchor\" href=\"#46-实现思路\">#</a> 4.6 实现思路</h3>\n<p>有了以上理论基础，我们就可以尝试构建这样一个神经网络了。当然，由于笔者的专业是食品安全，本文并不涉及任何实际代码、构建和部署，而仅为提出思路。</p>\n<h4 id=\"461-频谱提取\"><a class=\"markdownIt-Anchor\" href=\"#461-频谱提取\">#</a> 4.6.1 频谱提取</h4>\n<p>这个网络仅涉及频域分析而没有时域处理，因此我们可以直接忽略音频原始采样，而是直接生成其频谱图。<br>\n前文实践项目 DeepAudioClassification 中，使用到了一个命令行工具：sox。它可以输出音频的 png 频谱图，并且可以直接定义灰度、分辨率等；但其选项中并不能更改频率缩放类型，而默认情况下的 Mel 频谱图对于电子音乐分类而言效果不佳。因此，我们应该使用其他工具或算法来创建 log 频谱图。在 log 频谱图下，一个 44100Hz 采样率的音频（其最高频率为 22050Hz），频谱图的中间位置约为 2205Hz。</p>\n<h4 id=\"462-dnb分析\"><a class=\"markdownIt-Anchor\" href=\"#462-dnb分析\">#</a> 4.6.2 DnB 分析</h4>\n<p>网络的第二个输入应该为 DnB 序列；通过前文所述的一些方法，可以获取音乐的节拍序列信息。仅需得知 drum（鼓点）的序列即可提供良好的分类所需的信息，而 bassline 则可通过分析甚低频区的信号得出。<br>\n这两个数据在训练时应始终保持时间一致性，即 drum 和 bass 不能独立分析；也可考虑混合后输入，或直接从频谱图中再单独提取高分辨率的低频区信号频谱图像进行输入。<br>\n可能实现的模块：<a href=\"https://github.com/MTG/essentia/\">Github: MTG/essentia</a></p>\n<h4 id=\"463-bpm与时间分析\"><a class=\"markdownIt-Anchor\" href=\"#463-bpm与时间分析\">#</a> 4.6.3 BPM 与时间分析</h4>\n<p>这一步是相对而言最简单的，音频时间直接获取 duration 即可，BPM 也可以通过许多 python 的音频工具库获得。<br>\n可能实现的模块：<a href=\"https://github.com/librosa/librosa\">Github: librosa/Librosa</a></p>\n<h4 id=\"464-图像识别\"><a class=\"markdownIt-Anchor\" href=\"#464-图像识别\">#</a> 4.6.4 图像识别</h4>\n<p>这一步有许多可选的方向，不过仍然可以参考前文实践项目的做法，使用 tensorflow 提供的 tflearn 进行图像训练。需要注意的是，为了降低负载，仍然可能需要对频谱图进行分片处理。</p>\n<h4 id=\"465-人声分离\"><a class=\"markdownIt-Anchor\" href=\"#465-人声分离\">#</a> 4.6.5 人声分离</h4>\n<p>借助许多工具，包括 iZotope RX 7 的 Center Extract、Music Rebalance 或 Audition 的中置声道提取功能，都可以对音频的人声进行高质量分离。这一步的目的是为后续进行情感分析提供原始文件，并且也可能为音乐情感分析提供良好的无人声音轨。</p>\n<h4 id=\"466-情感分析\"><a class=\"markdownIt-Anchor\" href=\"#466-情感分析\">#</a> 4.6.6 情感分析</h4>\n<p>参考文献：<a href=\"https://www.hindawi.com/journals/misy/2022/2715765/\">Music Emotion Classification Method Using Improved Deep Belief Network</a><br>\n 基于此文献，可以确定 DBN 网络用于情感分析的可能性。不过目前似乎很少见到相关的模块或库可以直接提供此功能接口的，因此在编程方面可能具有难度。</p>\n<h2 id=\"5总结\"><a class=\"markdownIt-Anchor\" href=\"#5总结\">#</a> 5. 总结</h2>\n<p>再次说明，由于作者为食品专业，且对机器学习、计算机等了解很少，本文中可能出现大量不专业、错误术语和概念，其中的部分思路也可能无法实现或已有更好的替代方法。但作者编写本文的原因是希望解决实际问题，现有的音乐分类不够准确和细致、无法区分电子音乐下的各类风格。<br>\n如果您有建议、修改提示、想法等，均可直接于评论区留言。人工智能是新兴的热门话题，在时代的风口浪尖上，我们可以共同学习、不断进步，为计算机学习的城墙添砖加瓦。</p>\n",
            "tags": [
                "信号处理",
                "深度学习",
                "音频"
            ]
        },
        {
            "id": "https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/",
            "url": "https://zjxdiu.github.io/blog/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%B6%85%E9%A2%91/",
            "title": "超频你的显示器，获得更佳的流畅体验",
            "date_published": "2022-12-02T06:33:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>显示器超频？显示器还能超频？<br>\n当然是可以的。从定义上来说，任何以时钟频率进行周期性工作的硬件都有超频的说法，只不过我们平时主要讨论的是 CPU、显卡、内存等核心电脑硬件的超频。<br>\n某种意义上来说，显示器超频实际上是一个很古老的话题。在以前的 “大屁股” 显示器（即 CRT 技术的显示器）时代，超频就已经存在了。由于最开始的显示器都是纯模拟信号，输入的电压经过放大后直接作用于偏转电场，从而实现画面绘制，那时候的显示器超频是真正意义上的物理超频。只要阴极射线管的水平够好、电场板的素质优秀，显示器的各项工作参数完全可以自定义。<br>\n后来用了 LCD 和纯数字信号传输，超频的内容发生了一些变化；不过多数面板仍然会有超频能力，这取决于厂家的配置与面板本身的素质。<br>\n<img src=\"../_resources/95a04f46fce4449551b3b11e14510900.png\" alt=\"95a04f46fce4449551b3b11e14510900.png\"><br>\n<em> 图：LCD 与 CRT 显示器原理对比</em></p>\n<h2 id=\"什么是显示器超频\"><a class=\"markdownIt-Anchor\" href=\"#什么是显示器超频\">#</a> 什么是显示器超频</h2>\n<p>所谓的显示器超频，实际上是针对其运行参数<strong>垂直刷新率</strong>而言的。<br>\n在以前的 CRT 显示器上，显示画面需要电子枪从左往右依次发射电子、扫描一行，点亮一行的荧光像素，随后在垂直同步信号的作用下迅速回到左侧，同时跳转到下一行，重新进行下一行的扫描。以此类推，直到整个荧幕被扫描完成后，电场会使电子偏转到左上角，重复这个过程。（此处还有水平同步信号在起作用，不详细说明）<br>\n玩过模拟示波器的朋友肯定能理解垂直信号的作用，实际上就是示波器中的扫描电路，选择合适的扫描信号就能使波形稳定。<br>\n因此，如果能调节垂直（和水平）同步信号，使其可以在更短的时间内完成一次完整的扫描，则显示器的<strong>刷新率</strong>就能得到提升。<br>\n这就是显示器超频，我们希望提升其垂直刷新率，使其比标称值更高，这样才会有更好的体验。</p>\n<h2 id=\"显示器超频的影响因素\"><a class=\"markdownIt-Anchor\" href=\"#显示器超频的影响因素\">#</a> 显示器超频的影响因素</h2>\n<p>要完成一次好的显示器超频，我们通常认为有以下几点因素会影响结果。</p>\n<ul>\n<li>面板类型与素质</li>\n<li>厂商限制</li>\n<li>接口类型与传输质量</li>\n<li>合适的配置</li>\n<li>其它因素</li>\n</ul>\n<p>以上因素中，面板和厂商在购买后就固定了，无法更改。<br>\n接口类型以 DP、HDMI（高版本）为优。</p>\n<p><strong>请不要将显示器的超频能力纳入选购的考虑范围之中，如果想获得高刷屏的体验，那么建议选购原生的高刷显示器。本文的核心目的是科普，而不是鼓励大家要求厂商提供超频能力。</strong></p>\n<h2 id=\"如何超频\"><a class=\"markdownIt-Anchor\" href=\"#如何超频\">#</a> 如何超频</h2>\n<h3 id=\"超频前的准备\"><a class=\"markdownIt-Anchor\" href=\"#超频前的准备\">#</a> 超频前的准备</h3>\n<ol>\n<li>检查接口协议与传输质量<br>\n请使用优质 DP 或 HDMI 线连接电脑与显示器，以获得更佳的超频能力。<br>\n该项主要影响传输带宽，对于特定版本的 DP 或 HDMI 接口而言，其能提供的带宽是有限的。详情可查阅百度。<br>\n只需要记得一点，如果带宽受限，那么降低分辨率有助于获得更高的刷新率。但是对于多数平民显示器而言，即使使用最高分辨率，也不太会出现带宽不足的问题。</li>\n<li>检查视频信号源<br>\n目前来说，英特尔核心显卡并不支持显示器超频（至少笔记本的不行）。如果您使用台式机，请确保视频信号是独立显卡输出的。如果使用笔记本，请连接到笔记本上的 type-c 接口，一般而言这个接口的显示输出是直接连接独立显卡的。<br>\n如果使用不支持独显直连输出的笔记本（或者没有独显），则大概率不能成功。<br>\n不过，即便如此，您还是可以进行尝试。大多数出厂 60Hz 的显示器都可以直接提升到 75Hz，带来一定程度上的体验提升。不过有一个例外，笔记本自带的屏幕完全不支持超频。</li>\n<li>环境条件<br>\n尽管现代显示器对工作环境的承受范围极大，环境因素的影响极其小，合适的环境仍然有助于提高超频成功率。<br>\n主要包括合适的工作温度（尤其是不能过低），湿度，电压值与稳定性，甚至摆放方向等。</li>\n</ol>\n<h3 id=\"开始超频\"><a class=\"markdownIt-Anchor\" href=\"#开始超频\">#</a> 开始超频</h3>\n<ul>\n<li>对于非独立显卡、英特尔核心显卡：<br>\n请进入显卡控制面板（以下以新版英特尔核心显卡为例）<br>\n<img src=\"../_resources/ce3133202184eb787a2034f31476db94.png\" alt=\"ce3133202184eb787a2034f31476db94.png\"><br>\n 点击<strong>显示器</strong>，<strong>分辨率旁边的加号</strong><br>\n<img src=\"../_resources/245a61028b5e9c9e71d6d6abb786ff57.png\" alt=\"245a61028b5e9c9e71d6d6abb786ff57.png\"><br>\n 检查是否有刷新率的选项。如果有，可以尝试输入目标刷新率，然后单击确定。<br>\n若不成功或没有输入刷新率的地方，则您的显卡不支持硬超频。<br>\n请尝试点击<strong>刷新率</strong>旁的下拉框<br>\n<img src=\"../_resources/319d41963a5966fc42fe60ac72c0cb2f.png\" alt=\"319d41963a5966fc42fe60ac72c0cb2f.png\"><br>\n 若有多个选项，选择最高的。若有 I 和 P 两种，请选择 P。<br>\n至此，显示器超频结束。</li>\n</ul>\n<hr>\n<ul>\n<li>对于英伟达、AMD 独立显卡：<br>\n请进入显卡控制面板（以下以英伟达显卡为例）；应该能在 [开始] 菜单里找到。<br>\n若电脑里找不到该软件，请重装显卡驱动程序。<br>\n<img src=\"../_resources/345495b609471f763f8ec8bfc8df62df.png\" alt=\"345495b609471f763f8ec8bfc8df62df.png\"><br>\n 在屏幕左侧，单击 [更改分辨率]。<br>\n如果没有此选项，则说明显示器没有连接到独立显卡上。<br>\n<img src=\"../_resources/2e632685ea988d1cf03dc6d60b7493ac.png\" alt=\"2e632685ea988d1cf03dc6d60b7493ac.png\"><br>\n 点击 [自定义]。<br>\n<img src=\"../_resources/ec04c76fa5c31fbee854410f0c96b663.png\" alt=\"ec04c76fa5c31fbee854410f0c96b663.png\"><br>\n 勾选 [启用显示器未显示的分辨率]，然后点击 [创建自定义分辨率]。<br>\n<img src=\"../_resources/ed628697647b0ae7a7af0b97615d93e1.png\" alt=\"ed628697647b0ae7a7af0b97615d93e1.png\"><br>\n 在 [刷新率] 中输入目标刷新率，然后可以点击 [测试] 按钮进行测试。<br>\n在 [计时 - 标准] 选项中选择 [协同视频计时标准（CVT）降低清屏时间]，可能有助于提高成功率。<br>\n<img src=\"../_resources/79a358cee11fbd4de054a918720205a4.png\" alt=\"79a358cee11fbd4de054a918720205a4.png\"><br>\n 单击 [测试] 按钮，显示器将黑屏进行切换。<br>\n如果成功，则您将很快看到电脑画面。如果半成功，则可能会看到画面上出现抖动、条纹、异常颜色等。<br>\n如果失败，显示器提示不支持或一直黑屏，等待 15s 后会自动退出测试状态。或者，可以按 Esc 键快速返回。<br>\n当测试到稳定的刷新率后，在提示框中点击 [是]，即可保存该分辨率。<br>\n返回上一步的 [更改刷新率]，应该能在列表最顶上看到刚刚创建的分辨率。<br>\n选中后，单击软件右下角的 [应用]，超频结束。</li>\n</ul>\n<hr>\n<h3 id=\"超频提示\"><a class=\"markdownIt-Anchor\" href=\"#超频提示\">#</a> 超频提示</h3>\n<ul>\n<li>尽管超频一般不会造成伤害，仍可能导致面板发热加剧、液晶老化速率提高等问题。因此，从理论上讲，不建议长时间超频。</li>\n<li>在超频过程中，可以使用以下方法先确定显示器能承受的最大刷新率：\n<ul>\n<li>先将刷新率定到目标值</li>\n<li>若成功，则进一步定到下个目标值；否则，应选择当前刷新率与目标值的中间值。</li>\n<li>重复以上取中值的过程，通过二分法可以快速定位到最大刷新率。</li>\n<li>确定了最大值后，请适当降低到附近合适的数值使用。例如，若最大刷新率为 96Hz，请保持在 90Hz 即可。</li>\n</ul>\n</li>\n<li>若超频过程中显示器出现严重事故（如一直黑屏、闪屏等），请断开视频连接线，然后断开显示器电源；等待几分钟或使其完全放电后重新接入电源，检查显示器是否能正常开机，然后再接入电脑。由于现代显示器的保护功能极佳，真正发生无法挽回事故的可能性极低，近乎不存在，但并不为 0。</li>\n</ul>\n<h3 id=\"超频经验\"><a class=\"markdownIt-Anchor\" href=\"#超频经验\">#</a> 超频经验</h3>\n<p>对于一般的 1080P、60Hz 显示器而言，75Hz 是日常使用的较佳水平。某些素质较高的显示器可能会一路支持到 80、90 甚至 110Hz，全看厂商良心与运气。<br>\n对于 2K、60Hz 的显示器，一般也可以使用 75Hz。我自己的 2K60 显示器最大支持 98Hz，稳定值是 96Hz，最终保持在 90Hz 使用。<br>\n对于 144Hz 的显示器，一般直接上 165Hz 是没有问题的。较好的面板可以尝试 180Hz。<br>\n更高的不知道，我没钱（</p>\n<hr>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>没啥可总结的，超个频，获得更好的体验和更高的风险，这是一种交易。权衡结果全由你自己掌控。<br>\n任何问题欢迎留言！</p>\n",
            "tags": [
                "超频",
                "硬件"
            ]
        }
    ]
}