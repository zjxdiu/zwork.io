<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>zjxdiu~blog site • Posts by &#34;爱好&#34; category</title>
        <link>https://zjxdiu.github.io</link>
        <description>Shadow in front implying sun behind</description>
        <language>zh-CN</language>
        <pubDate>Wed, 14 Dec 2022 22:32:00 +0800</pubDate>
        <lastBuildDate>Wed, 14 Dec 2022 22:32:00 +0800</lastBuildDate>
        <category>游戏</category>
        <category>生活</category>
        <category>化学</category>
        <category>仪器分析</category>
        <category>信号处理</category>
        <category>日常</category>
        <category>深度学习</category>
        <category>音频</category>
        <category>分享</category>
        <category>网络</category>
        <category>教程</category>
        <category>软件</category>
        <category>开发</category>
        <category>游戏引擎</category>
        <category>超频</category>
        <category>硬件</category>
        <category>脑洞</category>
        <category>测试</category>
        <item>
            <guid isPermalink="true">https://zjxdiu.github.io/blog/%E5%94%A4%E5%A2%83%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/</guid>
            <title>【计划长期更新】记录自己的编程思路与想法，实现成功后更新</title>
            <link>https://zjxdiu.github.io/blog/%E5%94%A4%E5%A2%83%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/</link>
            <category>开发</category>
            <category>游戏引擎</category>
            <pubDate>Wed, 14 Dec 2022 22:32:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;前言：&lt;br&gt;
由于大学事务繁重，很多时候想到了一些功能的实现思路也没有时间及时验证，所以计划开一个帖子存放这些想法。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1. 音游主体玩法逻辑&lt;br&gt;
音符数据点存放：xml 文件&lt;br&gt;
存储内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;音符时间：音符应被打击时，距离音乐开始时的毫秒数&lt;/li&gt;
&lt;li&gt;音符类型（单点、长按）（暂时不考虑）&lt;/li&gt;
&lt;li&gt;轨道编号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现逻辑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;场景开始时，生成音符；若数量过多，可以考虑分节生成。音符带实例变量，存储其音符时间。&lt;/li&gt;
&lt;li&gt;音乐预加载、延迟播放；开始播放同帧启动计时器（高精度计时方法详见&lt;a href=&#34;https://bbs.evkworld.cn/topic/2590/&#34;&gt; https://bbs.evkworld.cn/topic/2590/&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;按下按键时（上升沿触发）：
&lt;ul&gt;
&lt;li&gt;记录按键时间（可用数组处理）&lt;/li&gt;
&lt;li&gt;检查该轨道上最近的音符，获取其音符时间，计算差值。
&lt;ul&gt;
&lt;li&gt;若差距过大，打击无效；&lt;/li&gt;
&lt;li&gt;若差距较大，判断为 miss；&lt;/li&gt;
&lt;li&gt;根据差值判断等级（Perfect、good、OK）&lt;/li&gt;
&lt;li&gt;一旦判断成功，销毁该音符&lt;/li&gt;
&lt;li&gt;若差值为负，则打击时间比音符时间晚；
&lt;ul&gt;
&lt;li&gt;计算差值、判断等级&lt;/li&gt;
&lt;li&gt;miss 阈值应低于正差值。&lt;/li&gt;
&lt;li&gt;（可以避免两个紧挨着的音符总是被判断到后面的那个）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;越线过久未打击：
&lt;ul&gt;
&lt;li&gt;采用屏幕外的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
